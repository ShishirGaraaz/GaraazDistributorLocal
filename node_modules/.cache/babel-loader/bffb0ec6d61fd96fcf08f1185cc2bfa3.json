{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Work\\\\garaaz-distributor\\\\src\\\\components\\\\EmployeeAddition\\\\EmployeeBulk.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Select, Alert, AlertIcon, AlertTitle, AlertDescription, Box } from '@chakra-ui/react';\nimport { useForm } from 'react-hook-form';\nimport { useDropzone } from 'react-dropzone';\nimport { useIntl } from 'react-intl';\nimport { Stepper, Step } from 'react-form-stepper';\nimport XLSX from 'xlsx';\nimport { useSelector } from 'react-redux';\nimport toast from 'react-hot-toast';\nimport messages from './messages';\nimport { publicAxios as axios } from '../../axios';\nimport { sheetValidation } from './helper';\nimport { useHistory } from 'react-router';\nimport { UseOnboardContext } from '../../App';\nimport withToast from '../../HOCs/withToast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst baseStyle = {\n  flex: 1,\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  padding: '20px',\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: '#eeeeee',\n  borderStyle: 'dashed',\n  backgroundColor: '#fafafa',\n  color: '#bdbdbd',\n  outline: 'none',\n  transition: 'border .24s ease-in-out',\n  cursor: 'pointer'\n};\nconst activeStyle = {\n  borderColor: '#2196f3'\n};\nconst acceptStyle = {\n  borderColor: '#00e676'\n};\nconst rejectStyle = {\n  borderColor: '#ff1744'\n};\nconst requiredFields = ['Mobile Number', 'First Name', 'Last Name', 'Designation', 'Branch Code'];\n\nconst EmployeeBulk = _ref => {\n  _s();\n\n  let {\n    notification\n  } = _ref;\n  const {\n    updateOnboard\n  } = UseOnboardContext();\n  const auth = useSelector(state => state.auth);\n  const history = useHistory();\n  const [errorMessage, setErrorMessage] = useState('');\n  const [sheetData, setSheetData] = useState([]);\n  const [activeStep, setActiveStep] = useState(1);\n  const [actualEmployeeOnboardingHeaders, setActualEmployeeOnboardingHeaders] = useState([]);\n  const [mappedSheetDataValid, setMappedSheetDataValid] = useState([]);\n  const [mappedSheetDataInvalid, setMappedSheetDataInvalid] = useState([]);\n  const acceptedEmployeeOnboardingHeaders = useSelector(state => state.app.acceptedEmployeeOnboardingHeaders);\n  const {\n    register,\n    formState: {\n      errors\n    },\n    handleSubmit,\n    reset\n  } = useForm({\n    mode: 'onSubmit'\n  });\n  const intl = useIntl();\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject,\n    acceptedFiles,\n    inputRef\n  } = useDropzone({\n    accept: 'text/csv,application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n    maxFiles: 1,\n    noKeyboard: true\n  });\n  useEffect(() => {\n    if (acceptedFiles.length > 0) {\n      const reader = new FileReader();\n\n      reader.onload = evt => {\n        const bstr = evt.target.result;\n        const wb = XLSX.read(bstr, {\n          type: 'binary'\n        });\n        const wsname = wb.SheetNames[0];\n        const ws = wb.Sheets[wsname];\n        const jsonData = XLSX.utils.sheet_to_json(ws, {\n          defval: ''\n        });\n\n        if (!jsonData.length) {\n          setErrorMessage('Either sheets is empty or the sheet is corrupted.');\n        } else {\n          setErrorMessage('');\n          setActualEmployeeOnboardingHeaders(Object.keys(jsonData[0]));\n          setSheetData(jsonData);\n        }\n      };\n\n      reader.readAsBinaryString(acceptedFiles[0]);\n    }\n  }, [acceptedFiles]);\n  useEffect(() => {\n    if (errorMessage) {\n      toast(errorMessage);\n    }\n  }, [errorMessage]);\n  const style = useMemo(() => ({ ...baseStyle,\n    ...(isDragActive ? activeStyle : {}),\n    ...(isDragAccept ? acceptStyle : {}),\n    ...(isDragReject ? rejectStyle : {})\n  }), [isDragActive, isDragReject, isDragAccept]);\n  const onModalClose = useCallback(e => {\n    setActiveStep(1);\n    acceptedFiles.length = 0;\n    acceptedFiles.splice(0, acceptedFiles.length);\n\n    if (inputRef.current) {\n      inputRef.current.value = '';\n    }\n\n    setSheetData([]);\n  });\n\n  const callback = async data => {\n    if (activeStep < 3) setActiveStep(activeStep + 1);\n\n    if (activeStep === 2) {\n      const mappedSheetDataTemp = await sheetValidation(sheetData, acceptedEmployeeOnboardingHeaders, data, auth, requiredFields);\n      setMappedSheetDataValid(mappedSheetDataTemp.filter(row => !row.isInvalid));\n      setMappedSheetDataInvalid(mappedSheetDataTemp.filter(row => row.isInvalid));\n    } else if (activeStep === 3) {\n      const validLength = mappedSheetDataValid.length;\n      const totalLength = sheetData.length;\n\n      if (mappedSheetDataInvalid.length > 0) {\n        notification({\n          status: 'error',\n          title: 'Invalid Fields',\n          description: 'Please remove row with invalid fields or provide correct values'\n        });\n        return;\n      }\n\n      try {\n        await axios.post(`/employees`, {\n          employees: mappedSheetDataValid\n        }, {\n          headers: {\n            Authorization: auth.authToken\n          }\n        });\n        toast('Employees onboarded successfully');\n\n        if (localStorage.onboard) {\n          history.push('/workshops');\n          localStorage.onboard = 4;\n          updateOnboard(4);\n        } else {\n          history.push('/employees');\n        }\n      } catch (err) {\n        toast('Something went wrong!'); // toast(err.response.data.message[0]);\n      }\n\n      toast(`Attempting to onboard ${validLength}/${totalLength} Employees.`);\n      reset({}, {\n        keepDirty: false,\n        keepErrors: false,\n        keepValues: false\n      });\n    }\n  };\n\n  const mapOnboardingFields = useCallback(callback, [activeStep, setActiveStep, mappedSheetDataValid, mappedSheetDataInvalid]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full mb-3\",\n      children: /*#__PURE__*/_jsxDEV(Stepper, {\n        styleConfig: {\n          completedBgColor: '#1e293b',\n          activeBgColor: '#da0032'\n        },\n        activeStep: activeStep,\n        children: [/*#__PURE__*/_jsxDEV(Step, {\n          label: \"File Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Step, {\n          label: \"Field Mappings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Step, {\n          label: \"Review\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), activeStep === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full px-4 lg:w-full mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        w: \"100%\",\n        mb: \"3\",\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          status: \"info\",\n          children: [/*#__PURE__*/_jsxDEV(AlertIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(AlertDescription, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Download a sample file from here.. \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              style: {\n                fontWeight: 'bold'\n              },\n              href: 'https://docs.google.com/uc?id=1Ii55abGtxvlZeuEpJ70caygHQSO_1_mk&export=download',\n              download: \"Branch sample File\",\n              children: \"Download File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1\",\n        children: intl.formatMessage(messages.employeeDetailDocument)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative w-full\",\n        ...getRootProps({\n          style,\n          className: 'dropzone'\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this), isDragActive && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: intl.formatMessage(messages.dropFilesHere)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 15\n        }, this), !acceptedFiles || acceptedFiles.length === 0 && !isDragActive && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: intl.formatMessage(messages.dragAndDropMessage)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 17\n        }, this), acceptedFiles && acceptedFiles.length > 0 && !isDragActive && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"far fa-file fa-2x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: acceptedFiles[0].path\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }, this), activeStep === 2 && /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"row-mapping-form\",\n      onSubmit: handleSubmit(mapOnboardingFields),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        flexWrap: \"wrap\",\n        children: acceptedEmployeeOnboardingHeaders.map(header => /*#__PURE__*/_jsxDEV(Box, {\n          width: \"48%\",\n          mb: 5,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative w-full mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1\",\n              children: header\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Select, { ...register(`${header}`, {\n                required: requiredFields.includes(header)\n              }),\n              defaultValue: actualEmployeeOnboardingHeaders.includes(header) ? header : '__Empty',\n              children: [...actualEmployeeOnboardingHeaders, '__Empty'].map(actualHeader => /*#__PURE__*/_jsxDEV(\"option\", {\n                children: actualHeader\n              }, actualHeader, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 19\n            }, this), errors && errors[header] && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-youtube-regular text-sm\",\n              children: header\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 17\n          }, this)\n        }, `${header}div`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }, this), activeStep === 3 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        w: \"100%\",\n        p: 4,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          status: \"info\",\n          children: [/*#__PURE__*/_jsxDEV(AlertIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(AlertTitle, {\n            mr: 2,\n            children: \"Valid Rows\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(AlertDescription, {\n            children: [\"There are total \", mappedSheetDataValid.length, \"/\", sheetData.length, ' ', \"rows which are valid\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 11\n      }, this), mappedSheetDataInvalid.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n        w: \"100%\",\n        p: 4,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          status: \"error\",\n          children: [/*#__PURE__*/_jsxDEV(AlertIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(AlertTitle, {\n            mr: 2,\n            children: \"Invalid Rows\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(AlertDescription, {\n            children: [\"There are total \", mappedSheetDataInvalid.length, \"/\", sheetData.length, \" rows which are invalid\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 13\n      }, this), mappedSheetDataInvalid.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n        w: \"100%\",\n        p: 4,\n        style: {\n          overflowX: 'auto'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          variant: \"striped\",\n          size: \"lg\",\n          className: \"table-auto border-collapse border border-green-800\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            style: {\n              backgroundColor: '#1e293b',\n              color: '#ffffff'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: Object.keys(mappedSheetDataInvalid[0]).map((header, index) => {\n                if (header === 'isInvalid' || header === 'branchId') {} else {\n                  return /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-2 text-center\",\n                    style: {\n                      width: '150px',\n                      minWidth: '150px'\n                    },\n                    children: header.toUpperCase()\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 363,\n                    columnNumber: 29\n                  }, this);\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: mappedSheetDataInvalid.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: Object.keys(row).filter(header => header !== 'isInvalid' && header !== 'branchId').map((header, index) => {\n                var _ref2, _ref3;\n\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"px-2 text-center\",\n                  style: {\n                    width: '110px',\n                    minWidth: '110px',\n                    color: ((_ref2 = `${row[header]}`) === null || _ref2 === void 0 ? void 0 : _ref2.startsWith('_')) ? 'red' : 'black'\n                  },\n                  children: ((_ref3 = `${row[header]}`) === null || _ref3 === void 0 ? void 0 : _ref3.startsWith('_')) ? row[header].slice(1) : row[header]\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 29\n                }, this);\n              })\n            }, `${row.mobileNumber}${row.firstName}${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bulkButtonsContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"clrBtn\",\n        onClick: () => {\n          setMappedSheetDataValid([]);\n          setMappedSheetDataInvalid([]);\n          reset({}, {\n            keepDirty: false,\n            keepErrors: false,\n            keepValues: false\n          });\n        },\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmit(mapOnboardingFields),\n        style: {\n          backgroundColor: '#1e293b',\n          color: '#ffffff',\n          marginLeft: '20px'\n        },\n        mr: 3,\n        disabled: sheetData.length < 1,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(EmployeeBulk, \"vWK7UrSROznsPLP/vbUiTraTrIM=\", false, function () {\n  return [useSelector, useHistory, useSelector, useForm, useIntl, useDropzone];\n});\n\n_c = EmployeeBulk;\nEmployeeBulk.propTypes = {\n  isOpen: PropTypes.bool,\n  onClose: PropTypes.func\n};\nexport default _c2 = withToast(EmployeeBulk);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EmployeeBulk\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/components/EmployeeAddition/EmployeeBulk.js"],"names":["React","useMemo","useState","useEffect","useCallback","PropTypes","Button","Select","Alert","AlertIcon","AlertTitle","AlertDescription","Box","useForm","useDropzone","useIntl","Stepper","Step","XLSX","useSelector","toast","messages","publicAxios","axios","sheetValidation","useHistory","UseOnboardContext","withToast","baseStyle","flex","display","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","color","outline","transition","cursor","activeStyle","acceptStyle","rejectStyle","requiredFields","EmployeeBulk","notification","updateOnboard","auth","state","history","errorMessage","setErrorMessage","sheetData","setSheetData","activeStep","setActiveStep","actualEmployeeOnboardingHeaders","setActualEmployeeOnboardingHeaders","mappedSheetDataValid","setMappedSheetDataValid","mappedSheetDataInvalid","setMappedSheetDataInvalid","acceptedEmployeeOnboardingHeaders","app","register","formState","errors","handleSubmit","reset","mode","intl","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","acceptedFiles","inputRef","accept","maxFiles","noKeyboard","length","reader","FileReader","onload","evt","bstr","target","result","wb","read","type","wsname","SheetNames","ws","Sheets","jsonData","utils","sheet_to_json","defval","Object","keys","readAsBinaryString","style","onModalClose","e","splice","current","value","callback","data","mappedSheetDataTemp","filter","row","isInvalid","validLength","totalLength","status","title","description","post","employees","headers","Authorization","authToken","localStorage","onboard","push","err","keepDirty","keepErrors","keepValues","mapOnboardingFields","completedBgColor","activeBgColor","fontWeight","formatMessage","employeeDetailDocument","className","dropFilesHere","dragAndDropMessage","path","map","header","required","includes","actualHeader","overflowX","index","width","minWidth","toUpperCase","startsWith","slice","mobileNumber","firstName","marginLeft","propTypes","isOpen","bool","onClose","func"],"mappings":"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","sourcesContent":["import React, { useMemo, useState, useEffect, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Button,\r\n  Select,\r\n  Alert,\r\n  AlertIcon,\r\n  AlertTitle,\r\n  AlertDescription,\r\n  Box,\r\n} from '@chakra-ui/react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { useIntl } from 'react-intl';\r\nimport { Stepper, Step } from 'react-form-stepper';\r\nimport XLSX from 'xlsx';\r\nimport { useSelector } from 'react-redux';\r\nimport toast from 'react-hot-toast';\r\nimport messages from './messages';\r\nimport { publicAxios as axios } from '../../axios';\r\nimport { sheetValidation } from './helper';\r\nimport { useHistory } from 'react-router';\r\nimport { UseOnboardContext } from '../../App';\r\nimport withToast from '../../HOCs/withToast';\r\n\r\nconst baseStyle = {\r\n  flex: 1,\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  padding: '20px',\r\n  borderWidth: 2,\r\n  borderRadius: 2,\r\n  borderColor: '#eeeeee',\r\n  borderStyle: 'dashed',\r\n  backgroundColor: '#fafafa',\r\n  color: '#bdbdbd',\r\n  outline: 'none',\r\n  transition: 'border .24s ease-in-out',\r\n  cursor: 'pointer',\r\n};\r\n\r\nconst activeStyle = {\r\n  borderColor: '#2196f3',\r\n};\r\n\r\nconst acceptStyle = {\r\n  borderColor: '#00e676',\r\n};\r\n\r\nconst rejectStyle = {\r\n  borderColor: '#ff1744',\r\n};\r\n\r\nconst requiredFields = [\r\n  'Mobile Number',\r\n  'First Name',\r\n  'Last Name',\r\n  'Designation',\r\n  'Branch Code',\r\n];\r\n\r\nconst EmployeeBulk = ({ notification }) => {\r\n  const { updateOnboard } = UseOnboardContext();\r\n  const auth = useSelector((state) => state.auth);\r\n  const history = useHistory();\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [sheetData, setSheetData] = useState([]);\r\n  const [activeStep, setActiveStep] = useState(1);\r\n  const [actualEmployeeOnboardingHeaders, setActualEmployeeOnboardingHeaders] =\r\n    useState([]);\r\n\r\n  const [mappedSheetDataValid, setMappedSheetDataValid] = useState([]);\r\n  const [mappedSheetDataInvalid, setMappedSheetDataInvalid] = useState([]);\r\n\r\n  const acceptedEmployeeOnboardingHeaders = useSelector(\r\n    (state) => state.app.acceptedEmployeeOnboardingHeaders,\r\n  );\r\n\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    handleSubmit,\r\n    reset,\r\n  } = useForm({\r\n    mode: 'onSubmit',\r\n  });\r\n\r\n  const intl = useIntl();\r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive,\r\n    isDragAccept,\r\n    isDragReject,\r\n    acceptedFiles,\r\n    inputRef,\r\n  } = useDropzone({\r\n    accept:\r\n      'text/csv,application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n    maxFiles: 1,\r\n    noKeyboard: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (acceptedFiles.length > 0) {\r\n      const reader = new FileReader();\r\n      reader.onload = (evt) => {\r\n        const bstr = evt.target.result;\r\n        const wb = XLSX.read(bstr, { type: 'binary' });\r\n        const wsname = wb.SheetNames[0];\r\n        const ws = wb.Sheets[wsname];\r\n        const jsonData = XLSX.utils.sheet_to_json(ws, { defval: '' });\r\n        if (!jsonData.length) {\r\n          setErrorMessage('Either sheets is empty or the sheet is corrupted.');\r\n        } else {\r\n          setErrorMessage('');\r\n          setActualEmployeeOnboardingHeaders(Object.keys(jsonData[0]));\r\n          setSheetData(jsonData);\r\n        }\r\n      };\r\n      reader.readAsBinaryString(acceptedFiles[0]);\r\n    }\r\n  }, [acceptedFiles]);\r\n\r\n  useEffect(() => {\r\n    if (errorMessage) {\r\n      toast(errorMessage);\r\n    }\r\n  }, [errorMessage]);\r\n\r\n  const style = useMemo(\r\n    () => ({\r\n      ...baseStyle,\r\n      ...(isDragActive ? activeStyle : {}),\r\n      ...(isDragAccept ? acceptStyle : {}),\r\n      ...(isDragReject ? rejectStyle : {}),\r\n    }),\r\n    [isDragActive, isDragReject, isDragAccept],\r\n  );\r\n  const onModalClose = useCallback((e) => {\r\n    setActiveStep(1);\r\n    acceptedFiles.length = 0;\r\n    acceptedFiles.splice(0, acceptedFiles.length);\r\n    if (inputRef.current) {\r\n      inputRef.current.value = '';\r\n    }\r\n    setSheetData([]);\r\n  });\r\n\r\n  const callback = async (data) => {\r\n    if (activeStep < 3) setActiveStep(activeStep + 1);\r\n    if (activeStep === 2) {\r\n      const mappedSheetDataTemp = await sheetValidation(\r\n        sheetData,\r\n        acceptedEmployeeOnboardingHeaders,\r\n        data,\r\n        auth,\r\n        requiredFields,\r\n      );\r\n      setMappedSheetDataValid(\r\n        mappedSheetDataTemp.filter((row) => !row.isInvalid),\r\n      );\r\n      setMappedSheetDataInvalid(\r\n        mappedSheetDataTemp.filter((row) => row.isInvalid),\r\n      );\r\n    } else if (activeStep === 3) {\r\n      const validLength = mappedSheetDataValid.length;\r\n      const totalLength = sheetData.length;\r\n\r\n      if (mappedSheetDataInvalid.length > 0) {\r\n        notification({\r\n          status: 'error',\r\n          title: 'Invalid Fields',\r\n          description:\r\n            'Please remove row with invalid fields or provide correct values',\r\n        });\r\n        return;\r\n      }\r\n\r\n      try {\r\n        await axios.post(\r\n          `/employees`,\r\n          {\r\n            employees: mappedSheetDataValid,\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: auth.authToken,\r\n            },\r\n          },\r\n        );\r\n        toast('Employees onboarded successfully');\r\n        if (localStorage.onboard) {\r\n          history.push('/workshops');\r\n          localStorage.onboard = 4;\r\n          updateOnboard(4);\r\n        } else {\r\n          history.push('/employees');\r\n        }\r\n      } catch (err) {\r\n        toast('Something went wrong!');\r\n        // toast(err.response.data.message[0]);\r\n      }\r\n      toast(`Attempting to onboard ${validLength}/${totalLength} Employees.`);\r\n      reset(\r\n        {},\r\n        {\r\n          keepDirty: false,\r\n          keepErrors: false,\r\n          keepValues: false,\r\n        },\r\n      );\r\n    }\r\n  };\r\n\r\n  const mapOnboardingFields = useCallback(callback, [\r\n    activeStep,\r\n    setActiveStep,\r\n    mappedSheetDataValid,\r\n    mappedSheetDataInvalid,\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      <div className='w-full mb-3'>\r\n        <Stepper\r\n          styleConfig={{\r\n            completedBgColor: '#1e293b',\r\n            activeBgColor: '#da0032',\r\n          }}\r\n          activeStep={activeStep}\r\n        >\r\n          <Step label='File Upload' />\r\n          <Step label='Field Mappings' />\r\n          <Step label='Review' />\r\n        </Stepper>\r\n      </div>\r\n      {activeStep === 1 && (\r\n        <div className='w-full px-4 lg:w-full mb-3'>\r\n          <Box w='100%' mb='3'>\r\n            <Alert status='info'>\r\n              <AlertIcon />\r\n              <AlertDescription>\r\n                <label>Download a sample file from here.. </label>\r\n                <a\r\n                  style={{ fontWeight: 'bold' }}\r\n                  href={\r\n                    'https://docs.google.com/uc?id=1Ii55abGtxvlZeuEpJ70caygHQSO_1_mk&export=download'\r\n                  }\r\n                  download='Branch sample File'\r\n                >\r\n                  Download File\r\n                </a>\r\n              </AlertDescription>\r\n            </Alert>\r\n          </Box>\r\n          <label className='block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1'>\r\n            {intl.formatMessage(messages.employeeDetailDocument)}\r\n          </label>\r\n          <div\r\n            className='relative w-full'\r\n            {...getRootProps({ style, className: 'dropzone' })}\r\n          >\r\n            <input {...getInputProps()} />\r\n            {isDragActive && (\r\n              <p>{intl.formatMessage(messages.dropFilesHere)}</p>\r\n            )}\r\n            {!acceptedFiles ||\r\n              (acceptedFiles.length === 0 && !isDragActive && (\r\n                <p>{intl.formatMessage(messages.dragAndDropMessage)}</p>\r\n              ))}\r\n            {acceptedFiles && acceptedFiles.length > 0 && !isDragActive && (\r\n              <>\r\n                <p>\r\n                  <i className='far fa-file fa-2x' />\r\n                </p>\r\n                <p>{acceptedFiles[0].path}</p>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {activeStep === 2 && (\r\n        <form\r\n          id='row-mapping-form'\r\n          onSubmit={handleSubmit(mapOnboardingFields)}\r\n        >\r\n          <Box display='flex' justifyContent='space-between' flexWrap='wrap'>\r\n            {acceptedEmployeeOnboardingHeaders.map((header) => (\r\n              <Box key={`${header}div`} width='48%' mb={5}>\r\n                <div className='relative w-full mb-3'>\r\n                  <label className='block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1'>\r\n                    {header}\r\n                  </label>\r\n                  <Select\r\n                    {...register(`${header}`, {\r\n                      required: requiredFields.includes(header),\r\n                    })}\r\n                    defaultValue={\r\n                      actualEmployeeOnboardingHeaders.includes(header)\r\n                        ? header\r\n                        : '__Empty'\r\n                    }\r\n                  >\r\n                    {[...actualEmployeeOnboardingHeaders, '__Empty'].map(\r\n                      (actualHeader) => (\r\n                        <option key={actualHeader}>{actualHeader}</option>\r\n                      ),\r\n                    )}\r\n                  </Select>\r\n                  {errors && errors[header] && (\r\n                    <span className='text-youtube-regular text-sm'>\r\n                      {header}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </Box>\r\n            ))}\r\n          </Box>\r\n        </form>\r\n      )}\r\n      {activeStep === 3 && (\r\n        <>\r\n          <Box w='100%' p={4}>\r\n            <Alert status='info'>\r\n              <AlertIcon />\r\n              <AlertTitle mr={2}>Valid Rows</AlertTitle>\r\n              <AlertDescription>\r\n                There are total {mappedSheetDataValid.length}/{sheetData.length}{' '}\r\n                rows which are valid\r\n              </AlertDescription>\r\n            </Alert>\r\n          </Box>\r\n\r\n          {mappedSheetDataInvalid.length > 0 && (\r\n            <Box w='100%' p={4}>\r\n              <Alert status='error'>\r\n                <AlertIcon />\r\n                <AlertTitle mr={2}>Invalid Rows</AlertTitle>\r\n                <AlertDescription>\r\n                  There are total {mappedSheetDataInvalid.length}/\r\n                  {sheetData.length} rows which are invalid\r\n                </AlertDescription>\r\n              </Alert>\r\n            </Box>\r\n          )}\r\n          {mappedSheetDataInvalid.length > 0 && (\r\n            <Box w='100%' p={4} style={{ overflowX: 'auto' }}>\r\n              <table\r\n                variant='striped'\r\n                size='lg'\r\n                className='table-auto border-collapse border border-green-800'\r\n              >\r\n                <thead style={{ backgroundColor: '#1e293b', color: '#ffffff' }}>\r\n                  <tr>\r\n                    {Object.keys(mappedSheetDataInvalid[0]).map(\r\n                      (header, index) => {\r\n                        if (header === 'isInvalid' || header === 'branchId') {\r\n                        } else {\r\n                          return (\r\n                            <th\r\n                              key={index}\r\n                              className='px-2 text-center'\r\n                              style={{ width: '150px', minWidth: '150px' }}\r\n                            >\r\n                              {header.toUpperCase()}\r\n                            </th>\r\n                          );\r\n                        }\r\n                      },\r\n                    )}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {mappedSheetDataInvalid.map((row, index) => (\r\n                    <tr key={`${row.mobileNumber}${row.firstName }${index}`}>\r\n                      {Object.keys(row)\r\n                        .filter(\r\n                          (header) =>\r\n                            header !== 'isInvalid' && header !== 'branchId',\r\n                        )\r\n                        .map((header, index) => {\r\n                \r\n                          return (\r\n                            <td\r\n                              key={index}\r\n                              className='px-2 text-center'\r\n                              style={{\r\n                                width: '110px',\r\n                                minWidth: '110px',\r\n                                color:\r\n                                  `${row[header]}`?.startsWith('_') ? 'red' : 'black',\r\n                              }}\r\n                            >\r\n                              { `${row[header]}`?.startsWith('_')? row[header].slice(1,) : row[header] }\r\n                            </td>\r\n                          );\r\n                        })}\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </Box>\r\n          )}\r\n        </>\r\n      )}\r\n      <div className='bulkButtonsContainer'>\r\n        <Button\r\n          variant='clrBtn'\r\n          onClick={() => {\r\n            setMappedSheetDataValid([]);\r\n            setMappedSheetDataInvalid([]);\r\n            reset(\r\n              {},\r\n              {\r\n                keepDirty: false,\r\n                keepErrors: false,\r\n                keepValues: false,\r\n              },\r\n            );\r\n          }}\r\n        >\r\n          Clear\r\n        </Button>\r\n        <Button\r\n          onClick={handleSubmit(mapOnboardingFields)}\r\n          style={{\r\n            backgroundColor: '#1e293b',\r\n            color: '#ffffff',\r\n            marginLeft: '20px',\r\n          }}\r\n          mr={3}\r\n          disabled={sheetData.length < 1}\r\n        >\r\n          Next\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nEmployeeBulk.propTypes = {\r\n  isOpen: PropTypes.bool,\r\n  onClose: PropTypes.func,\r\n};\r\n\r\nexport default withToast(EmployeeBulk);\r\n"]},"metadata":{},"sourceType":"module"}