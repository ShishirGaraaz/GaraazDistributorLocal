{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Work\\\\garaaz-distributor\\\\src\\\\containers\\\\LanguageProvider\\\\index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { IntlProvider } from 'react-intl';\nimport { makeSelectLocale } from './selectors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function LanguageProvider(props) {\n  return /*#__PURE__*/_jsxDEV(IntlProvider, {\n    locale: props.locale,\n    messages: props.messages[props.locale],\n    children: React.Children.only(props.children)\n  }, props.locale, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = LanguageProvider;\nLanguageProvider.propTypes = {\n  locale: PropTypes.string,\n  messages: PropTypes.object,\n  children: PropTypes.element.isRequired\n};\nconst mapStateToProps = createSelector(makeSelectLocale(), locale => ({\n  locale\n}));\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LanguageProvider);\n\nvar _c;\n\n$RefreshReg$(_c, \"LanguageProvider\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/containers/LanguageProvider/index.js"],"names":["React","PropTypes","connect","createSelector","IntlProvider","makeSelectLocale","LanguageProvider","props","locale","messages","Children","only","children","propTypes","string","object","element","isRequired","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,UAA/B;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEA,SAASC,gBAAT,QAAiC,aAAjC;;AAEA,OAAO,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AACtC,sBACE,QAAC,YAAD;AACE,IAAA,MAAM,EAAEA,KAAK,CAACC,MADhB;AAGE,IAAA,QAAQ,EAAED,KAAK,CAACE,QAAN,CAAeF,KAAK,CAACC,MAArB,CAHZ;AAAA,cAKGR,KAAK,CAACU,QAAN,CAAeC,IAAf,CAAoBJ,KAAK,CAACK,QAA1B;AALH,KAEOL,KAAK,CAACC,MAFb;AAAA;AAAA;AAAA;AAAA,UADF;AASD;KAVeF,gB;AAYhBA,gBAAgB,CAACO,SAAjB,GAA6B;AAC3BL,EAAAA,MAAM,EAAEP,SAAS,CAACa,MADS;AAE3BL,EAAAA,QAAQ,EAAER,SAAS,CAACc,MAFO;AAG3BH,EAAAA,QAAQ,EAAEX,SAAS,CAACe,OAAV,CAAkBC;AAHD,CAA7B;AAMA,MAAMC,eAAe,GAAGf,cAAc,CACpCE,gBAAgB,EADoB,EAEpCG,MAAM,KAAK;AACTA,EAAAA;AADS,CAAL,CAF8B,CAAtC;;AAOA,SAASW,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLA,IAAAA;AADK,GAAP;AAGD;;AAED,eAAelB,OAAO,CACpBgB,eADoB,EAEpBC,kBAFoB,CAAP,CAGbb,gBAHa,CAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createSelector } from 'reselect';\r\nimport { IntlProvider } from 'react-intl';\r\n\r\nimport { makeSelectLocale } from './selectors';\r\n\r\nexport function LanguageProvider(props) {\r\n  return (\r\n    <IntlProvider\r\n      locale={props.locale}\r\n      key={props.locale}\r\n      messages={props.messages[props.locale]}\r\n    >\r\n      {React.Children.only(props.children)}\r\n    </IntlProvider>\r\n  );\r\n}\r\n\r\nLanguageProvider.propTypes = {\r\n  locale: PropTypes.string,\r\n  messages: PropTypes.object,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nconst mapStateToProps = createSelector(\r\n  makeSelectLocale(),\r\n  locale => ({\r\n    locale,\r\n  }),\r\n);\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    dispatch,\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(LanguageProvider);\r\n"]},"metadata":{},"sourceType":"module"}