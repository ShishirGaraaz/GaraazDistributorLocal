{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setSmallImageDimensionState = exports.resolveSmallImage = exports.imageToStrictDimensions = exports.capitalize = exports.styleToCssText = exports.isFluid = exports.isFluidDimension = exports.noop = void 0;\nconst fluidCheckRegexp = new RegExp(/(%|vh|vw|vmin|vmax|fit-content|max-content|min-content|auto|stretch|available)$/, 'gi');\n\nfunction noop() {// noop\n}\n\nexports.noop = noop;\n\nfunction isFluidDimension(value) {\n  let result = typeof value !== 'number';\n  result = result && value !== undefined && fluidCheckRegexp.test(value);\n  fluidCheckRegexp.lastIndex = 0;\n  return result;\n}\n\nexports.isFluidDimension = isFluidDimension;\n\nfunction isFluid(smallImage) {\n  const result = isFluidDimension(smallImage.height) && isFluidDimension(smallImage.width);\n  return smallImage.height === undefined || smallImage.width === undefined || result;\n}\n\nexports.isFluid = isFluid;\n\nfunction styleToCssText(style) {\n  return Object.entries(style).map(_ref => {\n    let [k, v] = _ref;\n    return `${k.replace(/[A-Z]/g, match => `-${match.toLowerCase()}`)}:${v}`;\n  }).join(';');\n}\n\nexports.styleToCssText = styleToCssText;\n\nfunction capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexports.capitalize = capitalize;\n\nfunction imageToStrictDimensions(imageProps, ref) {\n  if (typeof imageProps.height === 'number' && typeof imageProps.width === 'number') {\n    return {\n      height: imageProps.height,\n      width: imageProps.width\n    };\n  }\n\n  if (!(ref === null || ref === void 0 ? void 0 : ref.current)) {\n    return {\n      height: 0,\n      width: 0\n    };\n  }\n\n  return {\n    height: ref.current.offsetHeight,\n    width: ref.current.offsetWidth\n  };\n}\n\nexports.imageToStrictDimensions = imageToStrictDimensions;\n\nfunction resolveSmallImage(smallImageProp, smallImageHeight, smallImageWidth) {\n  const smallImage = Object.assign(Object.assign({}, smallImageProp), {\n    height: smallImageHeight || smallImageProp.height || '100%',\n    width: smallImageWidth || smallImageProp.width || '100%'\n  });\n\n  if (!smallImage.onLoad) {\n    smallImage.onLoad = noop;\n  }\n\n  return smallImage;\n}\n\nexports.resolveSmallImage = resolveSmallImage;\n\nfunction setSmallImageDimensionState(img, setSmallImage, smallImageProp) {\n  if (img) {\n    const {\n      naturalHeight,\n      naturalWidth,\n      offsetHeight,\n      offsetWidth\n    } = img;\n    const newSmallImage = resolveSmallImage(smallImageProp, isFluidDimension(smallImageProp.height) ? smallImageProp.height : offsetHeight || naturalHeight, isFluidDimension(smallImageProp.width) ? smallImageProp.width : offsetWidth || naturalWidth);\n    setSmallImage(newSmallImage);\n  }\n}\n\nexports.setSmallImageDimensionState = setSmallImageDimensionState;","map":{"version":3,"sources":["../../../src/utils/index.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n    CSSProperties, Dispatch, MutableRefObject, SetStateAction,\n} from 'react';\nimport type {\n    ContainerDimensions, ImageProps,\n} from 'src/types';\n\nconst fluidCheckRegexp = new RegExp(/(%|vh|vw|vmin|vmax|fit-content|max-content|min-content|auto|stretch|available)$/, 'gi');\n\nexport function noop(): void {\n    // noop\n}\n\nexport function isFluidDimension(value: string | number | undefined): boolean {\n    let result = typeof value !== 'number';\n\n    result = result && value !== undefined && fluidCheckRegexp.test(value as string);\n\n    fluidCheckRegexp.lastIndex = 0;\n\n    return result;\n}\n\nexport function isFluid(smallImage: ImageProps): boolean {\n    const result = isFluidDimension(smallImage.height) && isFluidDimension(smallImage.width);\n\n    return (smallImage.height === undefined || smallImage.width === undefined) || result;\n}\n\nexport function styleToCssText(style: CSSProperties): string {\n    return Object.entries(style).map(([k, v]) => `${k.replace(/[A-Z]/g, (match) => `-${match.toLowerCase()}`)}:${v}`).join(';');\n}\n\nexport function capitalize(str: string): string {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function imageToStrictDimensions(\n    imageProps: ImageProps,\n    ref?: MutableRefObject<HTMLImageElement | null> | null,\n): ContainerDimensions {\n    if (typeof imageProps.height === 'number' && typeof imageProps.width === 'number') {\n        return {\n            height: imageProps.height,\n            width: imageProps.width,\n        };\n    }\n\n    if (!ref?.current) {\n        return {\n            height: 0,\n            width: 0,\n        };\n    }\n\n    return {\n        height: ref.current.offsetHeight,\n        width: ref.current.offsetWidth,\n    };\n}\n\nexport function resolveSmallImage(\n    smallImageProp: ImageProps,\n    smallImageHeight?: number | string,\n    smallImageWidth?: number | string,\n): ImageProps {\n    const smallImage = {\n        ...smallImageProp,\n        height: smallImageHeight || smallImageProp.height || '100%',\n        width: smallImageWidth || smallImageProp.width || '100%',\n    };\n\n    if (!smallImage.onLoad) {\n        smallImage.onLoad = noop;\n    }\n\n    return smallImage;\n}\n\nexport function setSmallImageDimensionState(\n    img: HTMLImageElement | null,\n    setSmallImage: Dispatch<SetStateAction<ImageProps>>,\n    smallImageProp: ImageProps,\n): void {\n    if (img) {\n        const {\n            naturalHeight, naturalWidth, offsetHeight, offsetWidth,\n        } = img;\n        const newSmallImage = resolveSmallImage(\n            smallImageProp,\n            isFluidDimension(smallImageProp.height) ? smallImageProp.height : offsetHeight || naturalHeight,\n            isFluidDimension(smallImageProp.width) ? smallImageProp.width : offsetWidth || naturalWidth,\n        );\n\n        setSmallImage(newSmallImage);\n    }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}