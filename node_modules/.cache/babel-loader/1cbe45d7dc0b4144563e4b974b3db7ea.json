{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Work\\\\garaaz-distributor\\\\src\\\\containers\\\\OrderDetails\\\\OrderOverView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo, useEffect, useRef } from 'react';\nimport { useIntl } from 'react-intl';\nimport Layout from '../Layout';\nimport { Button, Box, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton, Modal, useDisclosure, Menu, MenuButton, MenuList, MenuItem } from '@chakra-ui/react';\nimport DynamicTable from '../../components/DynamicTable';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { OrderDetailInfo } from '../../components/OrderComponents/OrderDetailInfo';\nimport messages from './messages';\nimport { getOrderDetails, setOrderDetails, getQuantityAvailable, createUnavailableOrder } from './actions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { BackButton } from '../../components/BackButton';\nimport getPartIds from '../../utils/getPartIds';\nimport withToast from '../../HOCs/withToast';\nimport totalItemFromArray from '../../utils/getTotalFromArray';\nimport enums from '../../utils/enums';\nimport getMoneyFormat from '../../utils/getMoneyFormat';\nimport { MediaViewer } from './RequestOrder';\nimport { MdOutlineAirplaneTicket } from 'react-icons/md';\nimport { FaFileInvoice } from 'react-icons/fa';\nimport { FiDownload } from 'react-icons/fi';\nimport { InvoiceComponent } from './OrderSummary';\nimport routes from '../../routes';\nimport { ChevronDownIcon } from '@chakra-ui/icons';\nimport ReactToPrint from 'react-to-print';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst OrderOverview = _ref => {\n  _s();\n\n  var _orderDetails$media;\n\n  let {\n    notification\n  } = _ref;\n  const orderSummaryRef = useRef();\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const intl = useIntl();\n  const auth = useSelector(state => state.auth);\n  const {\n    orderDetails\n  } = useSelector(state => state.orderDetails);\n  const [hasAvailableQuantity, setHasAvailableQuantity] = useState(false);\n  const dispatcher = useDispatch();\n  const {\n    id\n  } = useParams();\n  const [summary, setSummary] = useState({\n    totalAmount: 0\n  });\n  const [cancelOrderProps, setCancelOrderProps] = useState({\n    loading: false\n  });\n  const [displayInvoice, setInvoice] = useState(false);\n  const history = useHistory();\n  const isStockTransferCompleted = orderDetails.status === enums.STOCK_TRANSFER_COMPLETED;\n  const isStockTransferPlaced = orderDetails.status === enums.STOCK_TRANSFER_PLACED;\n  const isCBO = orderDetails.status === enums.CBO;\n\n  const getStockQuantity = async (parts, branchId, orderDetails) => {\n    try {\n      const response = await getQuantityAvailable({\n        auth,\n        params: {\n          parts,\n          branchId\n        }\n      });\n      const data = [...orderDetails.items].map(item => {\n        var _response$data$item$p;\n\n        return { ...item,\n          availableQuantity: (_response$data$item$p = response.data[item.partId]) === null || _response$data$item$p === void 0 ? void 0 : _response$data$item$p.quantity\n        };\n      });\n\n      if (data.some(order => order.availableQuantity)) {\n        setHasAvailableQuantity(true);\n      }\n\n      dispatcher(setOrderDetails({ ...orderDetails,\n        items: data\n      }));\n    } catch (error) {\n      notification({\n        description: intl.formatMessage(messages.errorOccurred),\n        status: 'error'\n      });\n    }\n  };\n\n  const fetchOrderDetails = async function () {\n    let branchId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : id;\n\n    try {\n      var _data$media;\n\n      const data = await getOrderDetails(auth, branchId);\n\n      if ((data === null || data === void 0 ? void 0 : (_data$media = data.media) === null || _data$media === void 0 ? void 0 : _data$media.length) > 0) {\n        history.replace(`/orders/${id}/request-order`);\n      } else {\n        const isStockTransferPlaced = data.status === enums.STOCK_TRANSFER_PLACED;\n        const isCBO = data.status === enums.CBO;\n\n        if (isStockTransferPlaced || isCBO) {\n          getStockQuantity(getPartIds([...data.items]), data.branchId, data);\n        }\n\n        dispatcher(setOrderDetails(data));\n      }\n    } catch (error) {\n      notification({\n        status: 'error',\n        description: error.response ? error.response.data.message : intl.formatMessage(messages.errorOccurred)\n      });\n    }\n  };\n\n  useEffect(() => {\n    fetchOrderDetails();\n  }, []);\n  useEffect(() => {\n    const totalOrderedQuantity = totalItemFromArray(orderDetails.items, 'quantity');\n    const orderDetailsWithTotalAmount = orderDetails.items.map(el => {\n      const totalAmount = parseFloat(el === null || el === void 0 ? void 0 : el.price) * parseInt(el === null || el === void 0 ? void 0 : el.quantity);\n      return { ...el,\n        totalAmount\n      };\n    });\n    const totalAmount = totalItemFromArray(orderDetailsWithTotalAmount, 'totalAmount');\n    setSummary({\n      totalOrderedQuantity,\n      totalAmount\n    });\n  }, [orderDetails]);\n  const columns = useMemo(() => [{\n    Header: intl.formatMessage(messages.SNo),\n    accessor: 'SNo',\n    Cell: allData => {\n      var _allData$row;\n\n      return /*#__PURE__*/_jsxDEV(Box, {\n        children: (allData === null || allData === void 0 ? void 0 : (_allData$row = allData.row) === null || _allData$row === void 0 ? void 0 : _allData$row.index) + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 18\n      }, this);\n    }\n  }, {\n    Header: intl.formatMessage(messages.partNumber),\n    accessor: row => row.part.partNumber\n  }, {\n    Header: intl.formatMessage(messages.partDescription),\n    accessor: row => row.part.description\n  }, {\n    Header: intl.formatMessage(messages.quantityOrdered),\n    accessor: 'quantity'\n  }, {\n    Header: intl.formatMessage(messages.pricePerPiece),\n    accessor: 'price',\n    Cell: _ref2 => {\n      let {\n        value\n      } = _ref2;\n      return getMoneyFormat(value);\n    }\n  }, {\n    Header: intl.formatMessage(messages.totalAmount),\n    accessor: 'totalAmount',\n    Cell: allData => getMoneyFormat(allData.row.original.quantity * allData.row.original.price)\n  }], []);\n  const incompleteOrder = useMemo(() => [{\n    Header: intl.formatMessage(messages.SNo),\n    accessor: 'SNo',\n    Cell: allData => {\n      var _allData$row2;\n\n      return /*#__PURE__*/_jsxDEV(Box, {\n        children: (allData === null || allData === void 0 ? void 0 : (_allData$row2 = allData.row) === null || _allData$row2 === void 0 ? void 0 : _allData$row2.index) + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 18\n      }, this);\n    }\n  }, {\n    Header: intl.formatMessage(messages.partNumber),\n    accessor: row => row.part.partNumber\n  }, {\n    Header: intl.formatMessage(messages.partDescription),\n    accessor: row => row.part.description\n  }, {\n    Header: intl.formatMessage(messages.quantityOrdered),\n    accessor: 'quantity'\n  }, {\n    Header: intl.formatMessage(messages.availableQuantity),\n    accessor: 'availableQuantity'\n  }, {\n    Header: intl.formatMessage(messages.pricePerPiece),\n    accessor: 'price',\n    Cell: _ref3 => {\n      let {\n        value\n      } = _ref3;\n      return getMoneyFormat(value);\n    }\n  }, {\n    Header: intl.formatMessage(messages.totalAmount),\n    accessor: 'totalAmount',\n    Cell: allData => getMoneyFormat(allData.row.original.quantity * allData.row.original.price)\n  }], []);\n\n  const handleCancelOrder = async () => {\n    try {\n      const option = enums.CANCEL_ORDER;\n      setCancelOrderProps(prevState => ({ ...prevState,\n        loading: true\n      }));\n      let items = [];\n      items = [...orderDetails.items].map(item => ({\n        partId: item.partId,\n        quantity: item.quantity,\n        price: item.price\n      }));\n      let data = {};\n      data = {\n        option,\n        items,\n        comment: ''\n      };\n      const response = await createUnavailableOrder({\n        auth,\n        orderId: orderDetails._id,\n        data\n      });\n      await fetchOrderDetails(response.data.orderId);\n      notification({\n        status: 'success',\n        title: intl.formatMessage(messages.orderCancelled),\n        description: intl.formatMessage(messages.orderCancelledDescription)\n      });\n      setCancelOrderProps(prevState => ({ ...prevState,\n        loading: false\n      }));\n    } catch (error) {\n      setCancelOrderProps(prevState => ({ ...prevState,\n        loading: false\n      }));\n      notification({\n        status: 'error',\n        description: error.response ? error.response.data.message : intl.formatMessage(messages.errorOccurred)\n      });\n    }\n  };\n\n  const handleCompleteOrder = () => {\n    history.push(`/orders/${orderDetails._id}`);\n  };\n\n  const handleTopButtonClick = name => {\n    if (name === intl.formatMessage(messages.invoice)) {\n      setInvoice(true);\n    }\n\n    if (name === intl.formatMessage(messages.pickTicket)) {\n      window.open(`${process.env.REACT_APP_BASE_URL}${routes.orderRoute}/${orderDetails._id}/export?option=txt`, '_blank');\n    }\n  };\n\n  const handleExport = exportType => {\n    window.open(`${process.env.REACT_APP_BASE_URL}${routes.orderRoute}/${orderDetails._id}/export?option=${exportType}`, '_blank');\n  };\n\n  const actionButton = [{\n    name: intl.formatMessage(messages.pickTicket),\n    icon: /*#__PURE__*/_jsxDEV(MdOutlineAirplaneTicket, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }, this),\n    type: ''\n  }, {\n    name: intl.formatMessage(messages.invoice),\n    icon: /*#__PURE__*/_jsxDEV(FaFileInvoice, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 57\n    }, this)\n  }, {\n    name: intl.formatMessage(messages.excelCsv),\n    icon: /*#__PURE__*/_jsxDEV(FiDownload, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 58\n    }, this)\n  }];\n  const topActionButtons = actionButton.map(item => {\n    if (item.name === intl.formatMessage(messages.excelCsv)) {\n      return /*#__PURE__*/_jsxDEV(Menu, {\n        children: [/*#__PURE__*/_jsxDEV(MenuButton, {\n          ml: 3,\n          my: 4,\n          as: Button,\n          rightIcon: /*#__PURE__*/_jsxDEV(ChevronDownIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 60\n          }, this),\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuList, {\n          children: [/*#__PURE__*/_jsxDEV(ReactToPrint, {\n            trigger: () => {\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                children: intl.formatMessage(messages.downloadPDF)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 19\n              }, this);\n            },\n            content: () => orderSummaryRef.current\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: () => handleExport('csv'),\n            children: intl.formatMessage(messages.downloadCSV)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this)]\n      }, item.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => handleTopButtonClick(item.name),\n      ml: 3,\n      leftIcon: item.icon,\n      my: 4,\n      children: item.name\n    }, item.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this);\n  });\n\n  if (displayInvoice) {\n    return /*#__PURE__*/_jsxDEV(InvoiceComponent, {\n      handleAfterPrice: () => setInvoice(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BackButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      children: topActionButtons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrderDetailInfo, {\n      orderDetails: orderDetails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }, this), Object.keys((_orderDetails$media = orderDetails.media) !== null && _orderDetails$media !== void 0 ? _orderDetails$media : {}).length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n      mb: 2,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onOpen,\n        variant: \"normal\",\n        children: \"View Media\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DynamicTable, {\n      columns: isStockTransferCompleted || isStockTransferPlaced || isCBO ? incompleteOrder : columns,\n      data: orderDetails.items,\n      fetchData: data => 'fetch order details here',\n      hidePagination: true,\n      summary: summary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this), isStockTransferPlaced && /*#__PURE__*/_jsxDEV(Box, {\n      my: 4,\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: \"Stock transfer is in progress...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleCancelOrder,\n        isLoading: cancelOrderProps.loading,\n        variant: \"cancle\",\n        children: intl.formatMessage(messages.cancelOrder)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 9\n    }, this), (isStockTransferCompleted || isCBO && hasAvailableQuantity) && /*#__PURE__*/_jsxDEV(Box, {\n      my: 4,\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      children: [isStockTransferCompleted && /*#__PURE__*/_jsxDEV(Box, {\n        children: \"Stock transfer is in progress...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 13\n      }, this), isCBO && /*#__PURE__*/_jsxDEV(Box, {\n        children: \"Some quantities are available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"cancle\",\n          onClick: handleCancelOrder,\n          isLoading: cancelOrderProps.loading,\n          children: intl.formatMessage(messages.cancelOrder)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 13\n        }, this), !cancelOrderProps.loading && /*#__PURE__*/_jsxDEV(Button, {\n          ml: 3,\n          variant: \"normal\",\n          onClick: handleCompleteOrder,\n          children: intl.formatMessage(messages.completeOrder)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      size: \"full\",\n      isOpen: isOpen,\n      onClose: onClose,\n      children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          children: \"Media Viewer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            width: \"100%\",\n            children: /*#__PURE__*/_jsxDEV(MediaViewer, {\n              stageHeight: window.innerHeight * 80 / 100,\n              stageWidth: window.innerWidth * 80 / 100\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"blue\",\n            mr: 3,\n            onClick: onClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"ghost\",\n            children: \"Secondary Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(OrderOverview, \"rZsA2KBbNKAO2mPJcZToOwvlOv8=\", false, function () {\n  return [useDisclosure, useIntl, useSelector, useSelector, useDispatch, useParams, useHistory];\n});\n\n_c = OrderOverview;\nexport default _c2 = withToast(OrderOverview);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"OrderOverview\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/containers/OrderDetails/OrderOverView.js"],"names":["React","useState","useMemo","useEffect","useRef","useIntl","Layout","Button","Box","ModalOverlay","ModalContent","ModalHeader","ModalFooter","ModalBody","ModalCloseButton","Modal","useDisclosure","Menu","MenuButton","MenuList","MenuItem","DynamicTable","useHistory","useParams","OrderDetailInfo","messages","getOrderDetails","setOrderDetails","getQuantityAvailable","createUnavailableOrder","useSelector","useDispatch","BackButton","getPartIds","withToast","totalItemFromArray","enums","getMoneyFormat","MediaViewer","MdOutlineAirplaneTicket","FaFileInvoice","FiDownload","InvoiceComponent","routes","ChevronDownIcon","ReactToPrint","OrderOverview","notification","orderSummaryRef","isOpen","onOpen","onClose","intl","auth","state","orderDetails","hasAvailableQuantity","setHasAvailableQuantity","dispatcher","id","summary","setSummary","totalAmount","cancelOrderProps","setCancelOrderProps","loading","displayInvoice","setInvoice","history","isStockTransferCompleted","status","STOCK_TRANSFER_COMPLETED","isStockTransferPlaced","STOCK_TRANSFER_PLACED","isCBO","CBO","getStockQuantity","parts","branchId","response","params","data","items","map","item","availableQuantity","partId","quantity","some","order","error","description","formatMessage","errorOccurred","fetchOrderDetails","media","length","replace","message","totalOrderedQuantity","orderDetailsWithTotalAmount","el","parseFloat","price","parseInt","columns","Header","SNo","accessor","Cell","allData","row","index","partNumber","part","partDescription","quantityOrdered","pricePerPiece","value","original","incompleteOrder","handleCancelOrder","option","CANCEL_ORDER","prevState","comment","orderId","_id","title","orderCancelled","orderCancelledDescription","handleCompleteOrder","push","handleTopButtonClick","name","invoice","pickTicket","window","open","process","env","REACT_APP_BASE_URL","orderRoute","handleExport","exportType","actionButton","icon","type","excelCsv","topActionButtons","downloadPDF","current","downloadCSV","Object","keys","cancelOrder","completeOrder","innerHeight","innerWidth"],"mappings":"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","sourcesContent":["import React, { useState, useMemo, useEffect, useRef } from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport Layout from '../Layout';\r\nimport {\r\n  Button,\r\n  Box,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Modal,\r\n  useDisclosure,\r\n  Menu,\r\n  MenuButton,\r\n  MenuList,\r\n  MenuItem,\r\n} from '@chakra-ui/react';\r\n\r\nimport DynamicTable from '../../components/DynamicTable';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { OrderDetailInfo } from '../../components/OrderComponents/OrderDetailInfo';\r\nimport messages from './messages';\r\nimport {\r\n  getOrderDetails,\r\n  setOrderDetails,\r\n  getQuantityAvailable,\r\n  createUnavailableOrder,\r\n} from './actions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { BackButton } from '../../components/BackButton';\r\nimport getPartIds from '../../utils/getPartIds';\r\nimport withToast from '../../HOCs/withToast';\r\nimport totalItemFromArray from '../../utils/getTotalFromArray';\r\nimport enums from '../../utils/enums';\r\nimport getMoneyFormat from '../../utils/getMoneyFormat';\r\nimport { MediaViewer } from './RequestOrder';\r\nimport { MdOutlineAirplaneTicket } from 'react-icons/md';\r\nimport { FaFileInvoice } from 'react-icons/fa';\r\nimport { FiDownload } from 'react-icons/fi';\r\nimport { InvoiceComponent } from './OrderSummary';\r\nimport routes from '../../routes';\r\nimport { ChevronDownIcon } from '@chakra-ui/icons';\r\nimport ReactToPrint from 'react-to-print';\r\n\r\nconst OrderOverview = ({ notification }) => {\r\n  const orderSummaryRef = useRef();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const intl = useIntl();\r\n  const auth = useSelector((state) => state.auth);\r\n  const { orderDetails } = useSelector((state) => state.orderDetails);\r\n  const [hasAvailableQuantity, setHasAvailableQuantity] = useState(false);\r\n  const dispatcher = useDispatch();\r\n  const { id } = useParams();\r\n  const [summary, setSummary] = useState({\r\n    totalAmount: 0,\r\n  });\r\n  const [cancelOrderProps, setCancelOrderProps] = useState({\r\n    loading: false,\r\n  });\r\n  const [displayInvoice, setInvoice] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const isStockTransferCompleted =\r\n    orderDetails.status === enums.STOCK_TRANSFER_COMPLETED;\r\n  const isStockTransferPlaced =\r\n    orderDetails.status === enums.STOCK_TRANSFER_PLACED;\r\n  const isCBO = orderDetails.status === enums.CBO;\r\n\r\n  const getStockQuantity = async (parts, branchId, orderDetails) => {\r\n    try {\r\n      const response = await getQuantityAvailable({\r\n        auth,\r\n        params: { parts, branchId },\r\n      });\r\n      const data = [...orderDetails.items].map((item) => ({\r\n        ...item,\r\n        availableQuantity: response.data[item.partId]?.quantity,\r\n      }));\r\n\r\n      if (data.some((order) => order.availableQuantity)) {\r\n        setHasAvailableQuantity(true);\r\n      }\r\n\r\n      dispatcher(setOrderDetails({ ...orderDetails, items: data }));\r\n    } catch (error) {\r\n      notification({\r\n        description: intl.formatMessage(messages.errorOccurred),\r\n        status: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  const fetchOrderDetails = async (branchId = id) => {\r\n    try {\r\n      const data = await getOrderDetails(auth, branchId);\r\n      if (data?.media?.length > 0) {\r\n        history.replace(`/orders/${id}/request-order`);\r\n      } else {\r\n        const isStockTransferPlaced =\r\n          data.status === enums.STOCK_TRANSFER_PLACED;\r\n        const isCBO = data.status === enums.CBO;\r\n\r\n        if (isStockTransferPlaced || isCBO) {\r\n          getStockQuantity(getPartIds([...data.items]), data.branchId, data);\r\n        }\r\n\r\n        dispatcher(setOrderDetails(data));\r\n      }\r\n    } catch (error) {\r\n      notification({\r\n        status: 'error',\r\n        description: error.response\r\n          ? error.response.data.message\r\n          : intl.formatMessage(messages.errorOccurred),\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchOrderDetails();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const totalOrderedQuantity = totalItemFromArray(\r\n      orderDetails.items,\r\n      'quantity',\r\n    );\r\n\r\n    const orderDetailsWithTotalAmount = orderDetails.items.map((el) => {\r\n      const totalAmount = parseFloat(el?.price) * parseInt(el?.quantity);\r\n      return {\r\n        ...el,\r\n        totalAmount,\r\n      };\r\n    });\r\n    const totalAmount = totalItemFromArray(\r\n      orderDetailsWithTotalAmount,\r\n      'totalAmount',\r\n    );\r\n\r\n    setSummary({ totalOrderedQuantity, totalAmount });\r\n  }, [orderDetails]);\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: intl.formatMessage(messages.SNo),\r\n        accessor: 'SNo',\r\n        Cell: (allData) => {\r\n          return <Box>{allData?.row?.index + 1}</Box>;\r\n        },\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.partNumber),\r\n        accessor: (row) => row.part.partNumber,\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.partDescription),\r\n        accessor: (row) => row.part.description,\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.quantityOrdered),\r\n        accessor: 'quantity',\r\n      },\r\n\r\n      {\r\n        Header: intl.formatMessage(messages.pricePerPiece),\r\n        accessor: 'price',\r\n        Cell: ({ value }) => getMoneyFormat(value),\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.totalAmount),\r\n        accessor: 'totalAmount',\r\n        Cell: (allData) =>\r\n          getMoneyFormat(\r\n            allData.row.original.quantity * allData.row.original.price,\r\n          ),\r\n      },\r\n    ],\r\n    [],\r\n  );\r\n\r\n  const incompleteOrder = useMemo(\r\n    () => [\r\n      {\r\n        Header: intl.formatMessage(messages.SNo),\r\n        accessor: 'SNo',\r\n        Cell: (allData) => {\r\n          return <Box>{allData?.row?.index + 1}</Box>;\r\n        },\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.partNumber),\r\n        accessor: (row) => row.part.partNumber,\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.partDescription),\r\n        accessor: (row) => row.part.description,\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.quantityOrdered),\r\n        accessor: 'quantity',\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.availableQuantity),\r\n        accessor: 'availableQuantity',\r\n      },\r\n\r\n      {\r\n        Header: intl.formatMessage(messages.pricePerPiece),\r\n        accessor: 'price',\r\n        Cell: ({ value }) => getMoneyFormat(value),\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.totalAmount),\r\n        accessor: 'totalAmount',\r\n        Cell: (allData) =>\r\n          getMoneyFormat(\r\n            allData.row.original.quantity * allData.row.original.price,\r\n          ),\r\n      },\r\n    ],\r\n    [],\r\n  );\r\n\r\n  const handleCancelOrder = async () => {\r\n    try {\r\n      const option = enums.CANCEL_ORDER;\r\n      setCancelOrderProps((prevState) => ({ ...prevState, loading: true }));\r\n\r\n      let items = [];\r\n\r\n      items = [...orderDetails.items].map((item) => ({\r\n        partId: item.partId,\r\n        quantity: item.quantity,\r\n        price: item.price,\r\n      }));\r\n\r\n      let data = {};\r\n      data = {\r\n        option,\r\n        items,\r\n        comment: '',\r\n      };\r\n\r\n      const response = await createUnavailableOrder({\r\n        auth,\r\n        orderId: orderDetails._id,\r\n        data,\r\n      });\r\n\r\n      await fetchOrderDetails(response.data.orderId);\r\n      notification({\r\n        status: 'success',\r\n        title: intl.formatMessage(messages.orderCancelled),\r\n        description: intl.formatMessage(messages.orderCancelledDescription),\r\n      });\r\n\r\n      setCancelOrderProps((prevState) => ({ ...prevState, loading: false }));\r\n    } catch (error) {\r\n      setCancelOrderProps((prevState) => ({ ...prevState, loading: false }));\r\n      notification({\r\n        status: 'error',\r\n        description: error.response\r\n          ? error.response.data.message\r\n          : intl.formatMessage(messages.errorOccurred),\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleCompleteOrder = () => {\r\n    history.push(`/orders/${orderDetails._id}`);\r\n  };\r\n\r\n  const handleTopButtonClick = (name) => {\r\n    if (name === intl.formatMessage(messages.invoice)) {\r\n      setInvoice(true);\r\n    }\r\n\r\n    if (name === intl.formatMessage(messages.pickTicket)) {\r\n      window.open(\r\n        `${process.env.REACT_APP_BASE_URL}${routes.orderRoute}/${orderDetails._id}/export?option=txt`,\r\n        '_blank',\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleExport = (exportType) => {\r\n    window.open(\r\n      `${process.env.REACT_APP_BASE_URL}${routes.orderRoute}/${orderDetails._id}/export?option=${exportType}`,\r\n      '_blank',\r\n    );\r\n  };\r\n\r\n  const actionButton = [\r\n    {\r\n      name: intl.formatMessage(messages.pickTicket),\r\n      icon: <MdOutlineAirplaneTicket />,\r\n      type: '',\r\n    },\r\n    { name: intl.formatMessage(messages.invoice), icon: <FaFileInvoice /> },\r\n    { name: intl.formatMessage(messages.excelCsv), icon: <FiDownload /> },\r\n  ];\r\n\r\n  const topActionButtons = actionButton.map((item) => {\r\n    if (item.name === intl.formatMessage(messages.excelCsv)) {\r\n      return (\r\n        <Menu key={item.name}>\r\n          <MenuButton ml={3} my={4} as={Button} rightIcon={<ChevronDownIcon />}>\r\n            {item.name}\r\n          </MenuButton>\r\n          <MenuList>\r\n            <ReactToPrint\r\n              trigger={() => {\r\n                return (\r\n                  <MenuItem>\r\n                    {intl.formatMessage(messages.downloadPDF)}\r\n                  </MenuItem>\r\n                );\r\n              }}\r\n              content={() => orderSummaryRef.current}\r\n            />\r\n\r\n            <MenuItem onClick={() => handleExport('csv')}>\r\n              {intl.formatMessage(messages.downloadCSV)}\r\n            </MenuItem>\r\n            {/* <MenuItem onClick={() => handleExport('txt')}>\r\n              {intl.formatMessage(messages.downloadDOC)}\r\n            </MenuItem> */}\r\n          </MenuList>\r\n        </Menu>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Button\r\n        key={item.name}\r\n        onClick={() => handleTopButtonClick(item.name)}\r\n        ml={3}\r\n        leftIcon={item.icon}\r\n        my={4}\r\n      >\r\n        {item.name}\r\n      </Button>\r\n    );\r\n  });\r\n\r\n  if (displayInvoice) {\r\n    return <InvoiceComponent handleAfterPrice={() => setInvoice(false)} />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <BackButton />\r\n      <Box display='flex' justifyContent='flex-end'>\r\n        {topActionButtons}\r\n      </Box>\r\n      <OrderDetailInfo orderDetails={orderDetails} />\r\n      {Object.keys(orderDetails.media ?? {}).length > 0 && (\r\n        <Box mb={2}>\r\n          <Button onClick={onOpen} variant='normal'>\r\n            View Media\r\n          </Button>\r\n        </Box>\r\n      )}\r\n      <DynamicTable\r\n        columns={\r\n          isStockTransferCompleted || isStockTransferPlaced || isCBO\r\n            ? incompleteOrder\r\n            : columns\r\n        }\r\n        data={orderDetails.items}\r\n        fetchData={(data) => 'fetch order details here'}\r\n        hidePagination={true}\r\n        summary={summary}\r\n      />\r\n\r\n      {isStockTransferPlaced && (\r\n        <Box\r\n          my={4}\r\n          display='flex'\r\n          justifyContent='space-between'\r\n          alignItems='center'\r\n        >\r\n          <Box>Stock transfer is in progress...</Box>\r\n          <Button\r\n            onClick={handleCancelOrder}\r\n            isLoading={cancelOrderProps.loading}\r\n            variant='cancle'\r\n          >\r\n            {intl.formatMessage(messages.cancelOrder)}\r\n          </Button>\r\n        </Box>\r\n      )}\r\n      {(isStockTransferCompleted || (isCBO && hasAvailableQuantity)) && (\r\n        <Box\r\n          my={4}\r\n          display='flex'\r\n          justifyContent='space-between'\r\n          alignItems='center'\r\n        >\r\n          {isStockTransferCompleted && (\r\n            <Box>Stock transfer is in progress...</Box>\r\n          )}\r\n          {isCBO && <Box>Some quantities are available</Box>}\r\n          <Box>\r\n            <Button\r\n              variant='cancle'\r\n              onClick={handleCancelOrder}\r\n              isLoading={cancelOrderProps.loading}\r\n            >\r\n              {intl.formatMessage(messages.cancelOrder)}\r\n            </Button>\r\n            {!cancelOrderProps.loading && (\r\n              <Button ml={3} variant='normal' onClick={handleCompleteOrder}>\r\n                {intl.formatMessage(messages.completeOrder)}\r\n              </Button>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      )}\r\n      <Modal size='full' isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Media Viewer</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <Box width='100%'>\r\n              <MediaViewer\r\n                stageHeight={(window.innerHeight * 80) / 100}\r\n                stageWidth={(window.innerWidth * 80) / 100}\r\n              />\r\n            </Box>\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button colorScheme='blue' mr={3} onClick={onClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant='ghost'>Secondary Action</Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withToast(OrderOverview);\r\n"]},"metadata":{},"sourceType":"module"}