{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Work\\\\garaaz-distributor\\\\src\\\\components\\\\PartsList\\\\Table\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useMemo } from 'react';\nimport { getParts } from '../actions';\nimport { useSelector } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport PartsTable from './Table';\nimport messages from '../messages';\nimport { useTable, useSortBy, useFilters, useExpanded, usePagination } from 'react-table';\nimport garaazLogo from '../../../images/placeholderImage.jpg';\nimport { Button, Popover, PopoverTrigger, PopoverContent, PopoverBody, PopoverArrow, Skeleton, Stack, IconButton, Center, Image } from '@chakra-ui/react';\nimport TableTop from './TableTop';\nimport { SaleStatus } from './constants';\nimport { useIntl } from 'react-intl';\nimport { getCategories } from '../../../containers/PartAddition/action';\nimport Loader from '../../../utils/Loader';\nimport { FiMoreVertical } from 'react-icons/fi';\nimport AdditionOption from '../../../utils/AdditionOptions';\nimport { optionsProp } from '../constants';\nimport getMoneyFormat from '../../../utils/getMoneyFormat';\nimport { selectGlobalState } from '../../../globalSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Table = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const auth = useSelector(state => state.auth);\n  const history = useHistory();\n  const [categories, setCategories] = useState([]);\n  const [parts, setParts] = useState([]);\n  const {\n    isDistributor\n  } = useSelector(selectGlobalState);\n  useEffect(() => {\n    const doFetch = async () => {\n      try {\n        // const [brands, categories] = await Promise.all([await getBrands(), await getCategories()])\n        const [parts, categories] = await Promise.all([await getParts(auth), await getCategories()]);\n        setData(parts);\n        setIsLoading(false);\n        setTableData(parts);\n        setCategories(categories.map(cat => {\n          return {\n            label: cat.category,\n            value: cat.category\n          };\n        }));\n      } catch (error) {}\n    };\n\n    doFetch();\n  }, []);\n\n  const renderImage = value => {\n    return /*#__PURE__*/_jsxDEV(Center, {\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Image, {\n        width: \"5vw\",\n        src: value || garaazLogo,\n        alt: \"part\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  };\n\n  const columns = useMemo(() => isDistributor ? [{\n    Header: 'Image',\n    accessor: 'media[0]',\n    disableSortBy: true,\n    filter: 'equals',\n    Cell: _ref => {\n      let {\n        value\n      } = _ref;\n      return renderImage(value);\n    }\n  }, {\n    Header: 'Part Number',\n    accessor: 'part.partNumber'\n  }, {\n    Header: 'Part Description',\n    accessor: 'part.partName'\n  }, {\n    Header: 'Category',\n    accessor: 'category'\n  }, {\n    Header: 'Part Type',\n    accessor: 'part.partType'\n  }, {\n    Header: 'MRP',\n    accessor: 'mrp',\n    Cell: _ref2 => {\n      let {\n        value\n      } = _ref2;\n      return getMoneyFormat(value);\n    }\n  }, // {\n  //   Header: 'Description',\n  //   accessor: 'description',\n  // },\n  // {\n  //   Header: 'Sale Status',\n  //   accessor: 'saleStatus',\n  // },\n  {\n    Header: 'Actions',\n    accessor: '_id',\n    Cell: _ref3 => {\n      let {\n        value\n      } = _ref3;\n      return /*#__PURE__*/_jsxDEV(Popover, {\n        children: [/*#__PURE__*/_jsxDEV(PopoverTrigger, {\n          className: \"menu-dots\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            children: /*#__PURE__*/_jsxDEV(FiMoreVertical, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(PopoverContent, {\n          style: {\n            width: 170\n          },\n          children: [/*#__PURE__*/_jsxDEV(PopoverArrow, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(PopoverBody, {\n            style: {\n              justifyContent: 'space-between',\n              display: 'flex'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                history.push(`/part/${value}/view`);\n              },\n              style: {\n                backgroundColor: '#1e293b',\n                color: '#fff'\n              },\n              children: \"View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                history.push(`/part/${value}/edit`);\n              },\n              style: {\n                backgroundColor: 'gray',\n                color: '#ffffff'\n              },\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 19\n      }, this);\n    }\n  }] : [{\n    Header: 'Image',\n    accessor: 'media[0]',\n    disableSortBy: true,\n    filter: 'equals',\n    Cell: _ref4 => {\n      let {\n        value\n      } = _ref4;\n      return renderImage(value);\n    }\n  }, {\n    Header: 'Part Number',\n    accessor: 'part.partNumber'\n  }, {\n    Header: 'Part Description',\n    accessor: 'part.partName'\n  }, {\n    Header: 'Category',\n    accessor: 'category'\n  }, {\n    Header: 'Part Type',\n    accessor: 'part.partType'\n  }, {\n    Header: 'MRP',\n    accessor: 'mrp',\n    Cell: _ref5 => {\n      let {\n        value\n      } = _ref5;\n      return getMoneyFormat(value);\n    }\n  }], [isDistributor]);\n  const {\n    headerGroups\n  } = useTable({\n    columns,\n    data,\n    defaultColumn: {\n      Filter: ''\n    },\n    initialState: {\n      pageIndex: 0,\n      pageSize: 10\n    }\n  }, useFilters, useSortBy, useExpanded, usePagination);\n  const intl = useIntl();\n  const inputData = [{\n    title: 'Filter by part number',\n    type: 'text',\n    placeholder: 'Enter Part Number',\n    name: 'partNumber'\n  }, {\n    title: 'Filter by part description',\n    type: 'text',\n    placeholder: 'Enter Part Description',\n    name: 'partName'\n  }, // {\n  //   title: 'Filter by mrp',\n  //   type: 'text',\n  //   placeholder: 'Enter MRP',\n  //   name: 'mrp',\n  // },\n  {\n    title: 'Filter by Category',\n    type: 'text',\n    placeholder: 'Enter Category',\n    name: 'category'\n  } // {\n  //   title: 'Filter by category',\n  //   type: 'select',\n  //   placeholder: 'Select Category',\n  //   name: 'category',\n  //   options: categories,\n  // },\n  // {\n  //   title: 'Filter by Status',\n  //   type: 'select',\n  //   placeholder: 'Select Sale Status',\n  //   name: 'saleStatus',\n  //   options: SaleStatus,\n  // },\n  ];\n  const [filters, setFilters] = useState({\n    partNumber: '',\n    partName: '',\n    mrp: '',\n    category: '',\n    saleStatus: ''\n  });\n\n  const handleTableTopChange = (e, name) => {\n    setTableData(data);\n    const value = e.hasOwnProperty('target') ? e.target.value : e;\n    setFilters({ ...filters,\n      [name]: value.trim()\n    });\n  };\n\n  useEffect(() => {\n    const doFilter = async () => setTableData(data.filter(d => {\n      var _d$part$category;\n\n      return new RegExp(filters === null || filters === void 0 ? void 0 : filters.partNumber, 'ig').test(d === null || d === void 0 ? void 0 : d.part.partNumber) && `${d.part.partName.toLowerCase()}`.indexOf(filters.partName.toLowerCase()) !== -1 && `${d.mrp}`.indexOf(filters.mrp) !== -1 && `${(_d$part$category = d.part.category) === null || _d$part$category === void 0 ? void 0 : _d$part$category.toLowerCase()}`.indexOf(filters === null || filters === void 0 ? void 0 : filters.category.toLowerCase()) !== -1 && `${d.saleStatus}`.indexOf(filters.saleStatus) !== -1;\n    }));\n\n    doFilter();\n  }, [filters]);\n\n  const fetchData = async state => {// const newData = await getParts(auth, state.limit, state.offset)\n    // setTableData([...tableData, ...newData])\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isDistributor && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center flex w-full items-center justify-between\",\n      style: {\n        justifyContent: 'flex-end'\n      },\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/part/add\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"addition\",\n          size: \"md\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-tools mr-2 text-sm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this), intl.formatMessage(messages.addPart)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 9\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 9\n    }, this) : data.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TableTop, {\n        inputData: inputData,\n        onChange: handleTableTopChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PartsTable, {\n        columns: columns,\n        data: tableData.reverse(),\n        totalCount: data.length,\n        fetchData: fetchData,\n        loading: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(AdditionOption, { ...optionsProp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Table, \"b7v0J2Q8H7yvqUYbe4JaVamNjJQ=\", false, function () {\n  return [useSelector, useHistory, useSelector, useTable, useIntl];\n});\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/components/PartsList/Table/index.js"],"names":["React","useEffect","useState","useMemo","getParts","useSelector","Link","useHistory","PartsTable","messages","useTable","useSortBy","useFilters","useExpanded","usePagination","garaazLogo","Button","Popover","PopoverTrigger","PopoverContent","PopoverBody","PopoverArrow","Skeleton","Stack","IconButton","Center","Image","TableTop","SaleStatus","useIntl","getCategories","Loader","FiMoreVertical","AdditionOption","optionsProp","getMoneyFormat","selectGlobalState","Table","data","setData","tableData","setTableData","isLoading","setIsLoading","auth","state","history","categories","setCategories","parts","setParts","isDistributor","doFetch","Promise","all","map","cat","label","category","value","error","renderImage","columns","Header","accessor","disableSortBy","filter","Cell","width","justifyContent","display","push","backgroundColor","color","headerGroups","defaultColumn","Filter","initialState","pageIndex","pageSize","intl","inputData","title","type","placeholder","name","filters","setFilters","partNumber","partName","mrp","saleStatus","handleTableTopChange","e","hasOwnProperty","target","trim","doFilter","d","RegExp","test","part","toLowerCase","indexOf","fetchData","formatMessage","addPart","length","reverse"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useMemo } from 'react';\r\nimport { getParts } from '../actions';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport PartsTable from './Table';\r\nimport messages from '../messages';\r\nimport {\r\n  useTable,\r\n  useSortBy,\r\n  useFilters,\r\n  useExpanded,\r\n  usePagination,\r\n} from 'react-table';\r\nimport garaazLogo from '../../../images/placeholderImage.jpg';\r\nimport {\r\n  Button,\r\n  Popover,\r\n  PopoverTrigger,\r\n  PopoverContent,\r\n  PopoverBody,\r\n  PopoverArrow,\r\n  Skeleton,\r\n  Stack,\r\n  IconButton,\r\n  Center,\r\n  Image,\r\n} from '@chakra-ui/react';\r\nimport TableTop from './TableTop';\r\nimport { SaleStatus } from './constants';\r\nimport { useIntl } from 'react-intl';\r\nimport { getCategories } from '../../../containers/PartAddition/action';\r\nimport Loader from '../../../utils/Loader';\r\nimport { FiMoreVertical } from 'react-icons/fi';\r\nimport AdditionOption from '../../../utils/AdditionOptions';\r\nimport { optionsProp } from '../constants';\r\nimport getMoneyFormat from '../../../utils/getMoneyFormat';\r\nimport { selectGlobalState } from '../../../globalSlice';\r\n\r\nconst Table = () => {\r\n  const [data, setData] = useState([]);\r\n  const [tableData, setTableData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const auth = useSelector((state) => state.auth);\r\n  const history = useHistory();\r\n  const [categories, setCategories] = useState([]);\r\n  const [parts, setParts] = useState([]);\r\n  const { isDistributor } = useSelector(selectGlobalState);\r\n\r\n  useEffect(() => {\r\n    const doFetch = async () => {\r\n      try {\r\n        // const [brands, categories] = await Promise.all([await getBrands(), await getCategories()])\r\n        const [parts, categories] = await Promise.all([\r\n          await getParts(auth),\r\n          await getCategories(),\r\n        ]);\r\n\r\n        setData(parts);\r\n        setIsLoading(false);\r\n        setTableData(parts);\r\n        setCategories(\r\n          categories.map((cat) => {\r\n            return { label: cat.category, value: cat.category };\r\n          }),\r\n        );\r\n      } catch (error) {}\r\n    };\r\n    doFetch();\r\n  }, []);\r\n\r\n  const renderImage = (value) => {\r\n    return (\r\n      <Center justifyContent='center'>\r\n        <Image width='5vw' src={value || garaazLogo} alt='part' />\r\n      </Center>\r\n    );\r\n  };\r\n\r\n  const columns = useMemo(\r\n    () =>\r\n      isDistributor\r\n        ? [\r\n            {\r\n              Header: 'Image',\r\n              accessor: 'media[0]',\r\n              disableSortBy: true,\r\n              filter: 'equals',\r\n              Cell: ({ value }) => renderImage(value),\r\n            },\r\n            {\r\n              Header: 'Part Number',\r\n              accessor: 'part.partNumber',\r\n            },\r\n            {\r\n              Header: 'Part Description',\r\n              accessor: 'part.partName',\r\n            },\r\n            {\r\n              Header: 'Category',\r\n              accessor: 'category',\r\n            },\r\n            {\r\n              Header: 'Part Type',\r\n              accessor: 'part.partType',\r\n            },\r\n            {\r\n              Header: 'MRP',\r\n              accessor: 'mrp',\r\n              Cell: ({ value }) => getMoneyFormat(value),\r\n            },\r\n            // {\r\n            //   Header: 'Description',\r\n            //   accessor: 'description',\r\n            // },\r\n            // {\r\n            //   Header: 'Sale Status',\r\n            //   accessor: 'saleStatus',\r\n            // },\r\n            {\r\n              Header: 'Actions',\r\n              accessor: '_id',\r\n              Cell: ({ value }) => {\r\n                return (\r\n                  <Popover>\r\n                    <PopoverTrigger className='menu-dots'>\r\n                      <IconButton>\r\n                        <FiMoreVertical />\r\n                      </IconButton>\r\n                    </PopoverTrigger>\r\n                    <PopoverContent style={{ width: 170 }}>\r\n                      <PopoverArrow />\r\n                      <PopoverBody\r\n                        style={{\r\n                          justifyContent: 'space-between',\r\n                          display: 'flex',\r\n                        }}\r\n                      >\r\n                        <Button\r\n                          onClick={() => {\r\n                            history.push(`/part/${value}/view`);\r\n                          }}\r\n                          style={{ backgroundColor: '#1e293b', color: '#fff' }}\r\n                        >\r\n                          View\r\n                        </Button>\r\n                        <Button\r\n                          onClick={() => {\r\n                            history.push(`/part/${value}/edit`);\r\n                          }}\r\n                          style={{ backgroundColor: 'gray', color: '#ffffff' }}\r\n                        >\r\n                          Edit\r\n                        </Button>\r\n                      </PopoverBody>\r\n                    </PopoverContent>\r\n                  </Popover>\r\n                );\r\n              },\r\n            },\r\n          ]\r\n        : [\r\n            {\r\n              Header: 'Image',\r\n              accessor: 'media[0]',\r\n              disableSortBy: true,\r\n              filter: 'equals',\r\n              Cell: ({ value }) => renderImage(value),\r\n            },\r\n            {\r\n              Header: 'Part Number',\r\n              accessor: 'part.partNumber',\r\n            },\r\n            {\r\n              Header: 'Part Description',\r\n              accessor: 'part.partName',\r\n            },\r\n            {\r\n              Header: 'Category',\r\n              accessor: 'category',\r\n            },\r\n            {\r\n              Header: 'Part Type',\r\n              accessor: 'part.partType',\r\n            },\r\n            {\r\n              Header: 'MRP',\r\n              accessor: 'mrp',\r\n              Cell: ({ value }) => getMoneyFormat(value),\r\n            },\r\n          ],\r\n    [isDistributor],\r\n  );\r\n  const { headerGroups } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn: { Filter: '' },\r\n      initialState: { pageIndex: 0, pageSize: 10 },\r\n    },\r\n    useFilters,\r\n    useSortBy,\r\n    useExpanded,\r\n    usePagination,\r\n  );\r\n  const intl = useIntl();\r\n  const inputData = [\r\n    {\r\n      title: 'Filter by part number',\r\n      type: 'text',\r\n      placeholder: 'Enter Part Number',\r\n      name: 'partNumber',\r\n    },\r\n    {\r\n      title: 'Filter by part description',\r\n      type: 'text',\r\n      placeholder: 'Enter Part Description',\r\n      name: 'partName',\r\n    },\r\n    // {\r\n    //   title: 'Filter by mrp',\r\n    //   type: 'text',\r\n    //   placeholder: 'Enter MRP',\r\n    //   name: 'mrp',\r\n    // },\r\n    {\r\n      title: 'Filter by Category',\r\n      type: 'text',\r\n      placeholder: 'Enter Category',\r\n      name: 'category',\r\n    },\r\n    // {\r\n    //   title: 'Filter by category',\r\n    //   type: 'select',\r\n    //   placeholder: 'Select Category',\r\n    //   name: 'category',\r\n    //   options: categories,\r\n    // },\r\n    // {\r\n    //   title: 'Filter by Status',\r\n    //   type: 'select',\r\n    //   placeholder: 'Select Sale Status',\r\n    //   name: 'saleStatus',\r\n    //   options: SaleStatus,\r\n    // },\r\n  ];\r\n  const [filters, setFilters] = useState({\r\n    partNumber: '',\r\n    partName: '',\r\n    mrp: '',\r\n    category: '',\r\n    saleStatus: '',\r\n  });\r\n  const handleTableTopChange = (e, name) => {\r\n    setTableData(data);\r\n    const value = e.hasOwnProperty('target') ? e.target.value : e;\r\n    setFilters({ ...filters, [name]: value.trim() });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const doFilter = async () =>\r\n      setTableData(\r\n        data.filter((d) => {\r\n          return (\r\n            new RegExp(filters?.partNumber, 'ig').test(d?.part.partNumber) &&\r\n            `${d.part.partName.toLowerCase()}`.indexOf(\r\n              filters.partName.toLowerCase(),\r\n            ) !== -1 &&\r\n            `${d.mrp}`.indexOf(filters.mrp) !== -1 &&\r\n            `${d.part.category?.toLowerCase()}`.indexOf(\r\n              filters?.category.toLowerCase(),\r\n            ) !== -1 &&\r\n            `${d.saleStatus}`.indexOf(filters.saleStatus) !== -1\r\n          );\r\n        }),\r\n      );\r\n    doFilter();\r\n  }, [filters]);\r\n\r\n  const fetchData = async (state) => {\r\n    // const newData = await getParts(auth, state.limit, state.offset)\r\n    // setTableData([...tableData, ...newData])\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isDistributor && (\r\n        <div\r\n          className='text-center flex w-full items-center justify-between'\r\n          style={{ justifyContent: 'flex-end' }}\r\n        >\r\n          <Link to='/part/add'>\r\n            <Button variant='addition' size='md'>\r\n              <i className='fas fa-tools mr-2 text-sm' />\r\n              {intl.formatMessage(messages.addPart)}\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n      )}\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : data.length > 0 ? (\r\n        <>\r\n          <TableTop inputData={inputData} onChange={handleTableTopChange} />\r\n          <PartsTable\r\n            columns={columns}\r\n            data={tableData.reverse()}\r\n            totalCount={data.length}\r\n            fetchData={fetchData}\r\n            loading={isLoading}\r\n          />\r\n        </>\r\n      ) : (\r\n        <AdditionOption {...optionsProp} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n"]},"metadata":{},"sourceType":"module"}