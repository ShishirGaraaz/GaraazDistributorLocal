{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Work\\\\garaaz-distributor\\\\src\\\\utils\\\\InputScaffold.js\",\n    _s = $RefreshSig$();\n\nimport { Input } from \"@chakra-ui/input\";\nimport { useIntl } from 'react-intl';\nimport { Box } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst InputScaffold = _ref => {\n  _s();\n\n  let {\n    width,\n    label,\n    inputName,\n    maxVal = null,\n    defaultVal = undefined,\n    inputType,\n    isRequired,\n    errors,\n    requiredLabel,\n    register,\n    value = undefined,\n    isReadOnly,\n    length = {},\n    errMsg = {}\n  } = _ref;\n  const intl = useIntl();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    width: {\n      base: '100%',\n      lg: width\n    },\n    mt: {\n      base: 6,\n      lg: 0\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1\",\n      children: intl.formatMessage(label)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      max: inputType === 'number' || maxVal ? maxVal : null,\n      type: inputType,\n      step: inputType === 'number' ? \".001\" : \"\",\n      placeholder: intl.formatMessage(label) // value={defaultVal}\n      ,\n      defaultValue: value,\n      ...register(inputName, {\n        required: isRequired || false,\n        maxLength: length.max || null,\n        minLength: length.min || null,\n        pattern: inputName === 'mobileNumber' || inputName === 'alternateNumbers' ? /^\\d{10}$/ : inputName === 'email' ? /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/ : ''\n      }),\n      isReadOnly: isReadOnly\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), errors && inputName in errors && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-youtube-regular text-sm\",\n      children: errors[inputName].type === 'required' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: intl.formatMessage(requiredLabel)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: intl.formatMessage(errMsg)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 7\n  }, this);\n};\n\n_s(InputScaffold, \"rlSgSjbewJ1PrR/Ile8g/kr050o=\", false, function () {\n  return [useIntl];\n});\n\n_c = InputScaffold;\nexport default InputScaffold;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputScaffold\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/utils/InputScaffold.js"],"names":["Input","useIntl","Box","InputScaffold","width","label","inputName","maxVal","defaultVal","undefined","inputType","isRequired","errors","requiredLabel","register","value","isReadOnly","length","errMsg","intl","base","lg","formatMessage","required","maxLength","max","minLength","min","pattern","type"],"mappings":";;;AAAA,SAASA,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,GAAT,QAAoB,kBAApB;;;;AAEA,MAAMC,aAAa,GAAG,QAIF;AAAA;;AAAA,MAJG;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA,SAAhB;AACrBC,IAAAA,MAAM,GAAG,IADY;AACNC,IAAAA,UAAU,GAAGC,SADP;AACkBC,IAAAA,SADlB;AAErBC,IAAAA,UAFqB;AAETC,IAAAA,MAFS;AAEDC,IAAAA,aAFC;AAEcC,IAAAA,QAFd;AAGrBC,IAAAA,KAAK,GAAGN,SAHa;AAGFO,IAAAA,UAHE;AAGUC,IAAAA,MAAM,GAAG,EAHnB;AAIrBC,IAAAA,MAAM,GAAG;AAJY,GAIH;AAClB,QAAMC,IAAI,GAAGlB,OAAO,EAApB;AACA,sBACI,QAAC,GAAD;AAAK,IAAA,KAAK,EAAE;AAACmB,MAAAA,IAAI,EAAE,MAAP;AAAeC,MAAAA,EAAE,EAAEjB;AAAnB,KAAZ;AAAuC,IAAA,EAAE,EAAE;AAACgB,MAAAA,IAAI,EAAE,CAAP;AAAUC,MAAAA,EAAE,EAAE;AAAd,KAA3C;AAAA,4BACE;AACE,MAAA,SAAS,EAAC,+DADZ;AAAA,gBAIGF,IAAI,CAACG,aAAL,CAAmBjB,KAAnB;AAJH;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,KAAD;AACE,MAAA,GAAG,EAAEK,SAAS,KAAK,QAAd,IAA0BH,MAA1B,GAAmCA,MAAnC,GAA4C,IADnD;AAEE,MAAA,IAAI,EAAEG,SAFR;AAGE,MAAA,IAAI,EAAEA,SAAS,KAAK,QAAd,GAAyB,MAAzB,GAAkC,EAH1C;AAIE,MAAA,WAAW,EAAES,IAAI,CAACG,aAAL,CAAmBjB,KAAnB,CAJf,CAKE;AALF;AAME,MAAA,YAAY,EAAEU,KANhB;AAAA,SAOMD,QAAQ,CAACR,SAAD,EAAY;AACtBiB,QAAAA,QAAQ,EAAEZ,UAAU,IAAI,KADF;AAEtBa,QAAAA,SAAS,EAAEP,MAAM,CAACQ,GAAP,IAAc,IAFH;AAGtBC,QAAAA,SAAS,EAAET,MAAM,CAACU,GAAP,IAAc,IAHH;AAItBC,QAAAA,OAAO,EAAEtB,SAAS,KAAK,cAAd,IAAgCA,SAAS,KAAK,kBAA9C,GAAmE,UAAnE,GAAgFA,SAAS,KAAK,OAAd,GAAwB,uJAAxB,GAAkL;AAJrP,OAAZ,CAPd;AAaE,MAAA,UAAU,EAAEU;AAbd;AAAA;AAAA;AAAA;AAAA,YAPF,EAsBGJ,MAAM,IAAIN,SAAS,IAAIM,MAAvB,iBACC;AAAM,MAAA,SAAS,EAAC,8BAAhB;AAAA,gBACGA,MAAM,CAACN,SAAD,CAAN,CAAkBuB,IAAlB,KAA2B,UAA3B,gBACC;AAAA,kBAAGV,IAAI,CAACG,aAAL,CAAmBT,aAAnB;AAAH,uBADD,gBAGC;AAAA,kBAAGM,IAAI,CAACG,aAAL,CAAmBJ,MAAnB;AAAH;AAJJ;AAAA;AAAA;AAAA;AAAA,YAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkCD,CAxCD;;GAAMf,a;UAKSF,O;;;KALTE,a;AAyCN,eAAeA,aAAf","sourcesContent":["import { Input } from \"@chakra-ui/input\";\r\nimport { useIntl } from 'react-intl';\r\nimport { Box } from '@chakra-ui/react';\r\n\r\nconst InputScaffold = ({ width, label, inputName,\r\n  maxVal = null, defaultVal = undefined, inputType,\r\n  isRequired, errors, requiredLabel, register,\r\n  value = undefined, isReadOnly, length = {},\r\n  errMsg = {} }) => {\r\n  const intl = useIntl();\r\n  return (\r\n      <Box width={{base: '100%', lg: width}} mt={{base: 6, lg: 0}}>\r\n        <label\r\n          className=\"block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1\"\r\n\r\n        >\r\n          {intl.formatMessage(label)}\r\n        </label>\r\n        <Input\r\n          max={inputType === 'number' || maxVal ? maxVal : null}\r\n          type={inputType}\r\n          step={inputType === 'number' ? \".001\" : \"\"}\r\n          placeholder={intl.formatMessage(label)}\r\n          // value={defaultVal}\r\n          defaultValue={value}\r\n          {...register(inputName, {\r\n            required: isRequired || false,\r\n            maxLength: length.max || null,\r\n            minLength: length.min || null,\r\n            pattern: inputName === 'mobileNumber' || inputName === 'alternateNumbers' ? /^\\d{10}$/ : inputName === 'email' ? /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/ : ''\r\n          })}\r\n          isReadOnly={isReadOnly}\r\n        />\r\n        {errors && inputName in errors && (\r\n          <span className=\"text-youtube-regular text-sm\">\r\n            {errors[inputName].type === 'required' ? (\r\n              <>{intl.formatMessage(requiredLabel)}</>\r\n            ) : (\r\n              <>{intl.formatMessage(errMsg)}</>\r\n            )}\r\n          </span>\r\n        )}\r\n    </Box>\r\n  );\r\n}\r\nexport default InputScaffold;"]},"metadata":{},"sourceType":"module"}