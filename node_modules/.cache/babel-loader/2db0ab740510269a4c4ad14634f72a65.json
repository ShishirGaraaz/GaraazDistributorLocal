{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Work\\\\garaaz-distributor\\\\src\\\\components\\\\ErrorBoundary.js\";\nimport React from 'react';\nimport serverErrorIllustrator from \"../assets/img/serverError.svg\";\nimport Error from './Error';\nimport { withRouter } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return {\n      hasError: true\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {// You can also log the error to an error reporting service\n  }\n\n  render() {\n    const {\n      history\n    } = this.props;\n\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return /*#__PURE__*/_jsxDEV(Error, {\n        onRetry: () => {\n          history.replace('/distributor');\n          this.setState({\n            hasError: false\n          });\n        },\n        title: \"Server Error\",\n        message: \"Something went wrong, please try again!\",\n        illustrator: serverErrorIllustrator\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this);\n    }\n\n    return this.props.children;\n  }\n\n}\nexport default _c = withRouter(ErrorBoundary);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/components/ErrorBoundary.js"],"names":["React","Error","withRouter","ErrorBoundary","Component","constructor","props","state","hasError","getDerivedStateFromError","error","componentDidCatch","errorInfo","render","history","replace","setState","serverErrorIllustrator","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,OAAO,MAAMC,aAAN,SAA4BH,KAAK,CAACI,SAAlC,CAA4C;AAC/CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AACD;;AAE8B,SAAxBC,wBAAwB,CAACC,KAAD,EAAQ;AAErC;AACA,WAAO;AAAEF,MAAAA,QAAQ,EAAE;AAAZ,KAAP;AACD;;AAEDG,EAAAA,iBAAiB,CAACD,KAAD,EAAQE,SAAR,EAAmB,CAClC;AAED;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKR,KAAzB;;AAEA,QAAI,KAAKC,KAAL,CAAWC,QAAf,EAAyB;AACvB;AACA,0BAAQ,QAAC,KAAD;AACN,QAAA,OAAO,EAAE,MAAM;AACbM,UAAAA,OAAO,CAACC,OAAR,CAAgB,cAAhB;AACA,eAAKC,QAAL,CAAc;AAACR,YAAAA,QAAQ,EAAE;AAAX,WAAd;AACD,SAJK;AAKN,QAAA,KAAK,EAAC,cALA;AAMN,QAAA,OAAO,EAAC,yCANF;AAON,QAAA,WAAW,EAAES;AAPP;AAAA;AAAA;AAAA;AAAA,cAAR;AAUD;;AAED,WAAO,KAAKX,KAAL,CAAWY,QAAlB;AACD;;AAnC8C;AAuCnD,oBAAehB,UAAU,CAACC,aAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport serverErrorIllustrator from '../assets/img/serverError.svg';\r\nimport Error from './Error';\r\nimport { withRouter } from 'react-router-dom'    \r\n\r\nexport class ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { hasError: false };\r\n    }\r\n  \r\n    static getDerivedStateFromError(error) {\r\n    \r\n      // Update state so the next render will show the fallback UI.\r\n      return { hasError: true };\r\n    }\r\n  \r\n    componentDidCatch(error, errorInfo) {\r\n      // You can also log the error to an error reporting service\r\n  \r\n    }\r\n  \r\n    render() {\r\n      const { history } = this.props;\r\n\r\n      if (this.state.hasError) {\r\n        // You can render any custom fallback UI\r\n        return( <Error\r\n          onRetry={() => {\r\n            history.replace('/distributor');\r\n            this.setState({hasError: false})\r\n          }}\r\n          title='Server Error'\r\n          message='Something went wrong, please try again!'\r\n          illustrator={serverErrorIllustrator}\r\n        />\r\n        );\r\n      }\r\n  \r\n      return this.props.children; \r\n    }\r\n  }\r\n  \r\n\r\nexport default withRouter(ErrorBoundary);\r\n"]},"metadata":{},"sourceType":"module"}