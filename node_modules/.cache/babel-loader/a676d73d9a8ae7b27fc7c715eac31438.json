{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Work\\\\garaaz-distributor\\\\src\\\\components\\\\ContactDetailsForm\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { Input, InputGroup, InputLeftAddon } from '@chakra-ui/react';\nimport { useIntl } from 'react-intl';\nimport toast from 'react-hot-toast';\nimport { useSelector } from 'react-redux';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\nimport messages from './messages';\nimport { publicAxios as axios } from '../../axios';\nimport { isUndefined } from 'lodash';\nimport { useParams } from 'react-router';\nimport FormactionButtons from '../../utils/FormactionButtons';\nimport InputScaffold from '../../utils/InputScaffold';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactDetailsForm = _ref => {\n  _s();\n\n  let {\n    setActiveStep,\n    currentBranch,\n    setContactId,\n    getBranchDetails\n  } = _ref;\n  const {\n    branchId\n  } = useParams();\n  const [contactDetails, setContactDetails] = useState({});\n  const auth = useSelector(state => state.auth);\n  const {\n    contactId,\n    contact = []\n  } = currentBranch;\n  const intl = useIntl();\n  const {\n    register,\n    formState: {\n      errors\n    },\n    handleSubmit,\n    reset,\n    setValue\n  } = useForm({\n    mode: 'onSubmit'\n  });\n\n  const getBranchData = async () => {\n    if (!isUndefined(branchId) || !isUndefined(currentBranch._id)) {\n      const {\n        contact\n      } = await getBranchDetails(branchId || currentBranch._id);\n      setContactDetails(contact[0]);\n    } else if (!isEmpty(currentBranch.contact)) {\n      setContactDetails(currentBranch.contact[0]);\n    }\n  };\n\n  useEffect(() => {\n    getBranchData();\n  }, []);\n  useEffect(() => {\n    if (!isEmpty(contactDetails)) {\n      let modifiedContactDetails = { ...contactDetails\n      };\n\n      if (modifiedContactDetails.alternateNumbers[0].length > 10 && modifiedContactDetails.alternateNumbers[0].startsWith(\"91\")) {\n        modifiedContactDetails.alternateNumbers = [modifiedContactDetails.alternateNumbers[0].slice(2)];\n      }\n\n      setValue('mobileNumbers', get(contactDetails, 'mobileNumbers', ''));\n      setValue('alternateNumbers', get(modifiedContactDetails, 'alternateNumbers', ''));\n      setValue('landlineNumbers', get(contactDetails, 'landlineNumbers', ''));\n      setValue('whatsAppNumbers', get(contactDetails, 'whatsAppNumbers', ''));\n      setValue('emails', get(contactDetails, 'emails', ''));\n      setValue('website', get(contactDetails, 'website', ''));\n      setValue('socialLink1', get(contactDetails, 'socialLink1', ''));\n      setValue('socialLink2', get(contactDetails, 'socialLink2', ''));\n    }\n  }, [contactDetails]);\n\n  const handleFormSubmit = async data => {\n    //data.alternateNumbers\n    if (!Array.isArray(data.alternateNumbers) && !data.alternateNumbers.startsWith(\"91\")) {\n      data.alternateNumbers = `91${data.alternateNumbers}`;\n    }\n\n    if (Array.isArray(data.alternateNumbers) && !data.alternateNumbers[0].startsWith(\"91\")) {\n      data.alternateNumbers[0] = `91${data.alternateNumbers[0]}`;\n    }\n\n    let refinedData = Object.fromEntries(Object.entries(data).filter(_ref2 => {\n      let [key, value] = _ref2;\n      return value;\n    }));\n\n    try {\n      const api = `/branches/${currentBranch._id}/contacts`;\n\n      if (!isEmpty(contactId)) {\n        await axios.patch(api, refinedData, {\n          headers: {\n            Authorization: auth.authToken\n          }\n        });\n      } else {\n        const {\n          data\n        } = await axios.post(api, refinedData, {\n          headers: {\n            Authorization: auth.authToken\n          }\n        });\n        setContactId(data.contact);\n      }\n\n      setActiveStep(4);\n      toast(intl.formatMessage(messages.contactDetailsSaveSuccess));\n    } catch (err) {\n      toast(intl.formatMessage(messages.somethingWentWrong));\n    }\n  };\n\n  const onReset = () => reset({}, {\n    keepDirty: false,\n    keepErrors: false,\n    keepValues: false\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(handleFormSubmit),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"mt-6 mb-2 font-bold\",\n        children: intl.formatMessage(messages.contactDetails)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"mb-6 border-b-1 border-blueGray-200\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap -mx-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full px-4 lg:w-4/12\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1\",\n            children: intl.formatMessage(messages.mobileNumber)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            children: [/*#__PURE__*/_jsxDEV(InputLeftAddon, {\n              children: \"91\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              inputType: \"tel\",\n              requiredLabel: messages.mobileNumberRequired,\n              ...register('alternateNumbers', {\n                pattern: /^\\d{10}$/,\n                maxLength: 10,\n                minLength: 10,\n                required: true\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this), errors && errors.alternateNumbers && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-youtube-regular text-sm\",\n            children: intl.formatMessage(messages.mobileNumberRequired)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full px-4 lg:w-4/12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative w-full mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1\",\n              children: intl.formatMessage(messages.landlineNumber)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"tel\",\n              placeholder: intl.formatMessage(messages.landlineNumber),\n              ...register('landlineNumbers', {\n                pattern: /^\\d{10}$/,\n                maxLength: 10,\n                minLength: 10,\n                required: false\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this), errors && errors.landlineNumbers && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-youtube-regular text-sm\",\n              children: intl.formatMessage(messages.landlineNumberRequired)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full px-4 lg:w-4/12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative w-full mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1\",\n              children: intl.formatMessage(messages.whatsappNumber)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"tel\",\n              placeholder: intl.formatMessage(messages.whatsappNumber),\n              ...register('whatsAppNumbers', {\n                pattern: /^\\d{10}$/,\n                maxLength: 10,\n                minLength: 10,\n                required: false\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this), errors && errors.whatsAppNumbers && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-youtube-regular text-sm\",\n              children: intl.formatMessage(messages.whatsappNumberRequired)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full px-4 lg:w-4/12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative w-full mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1\",\n              children: intl.formatMessage(messages.emailAddress)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: intl.formatMessage(messages.emailAddress),\n              ...register('emails', {\n                required: false,\n                pattern: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this), errors && errors.emails && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-youtube-regular text-sm\",\n              children: errors.emails.type === 'required' ? intl.formatMessage(messages.emailAddressRequired) : intl.formatMessage(messages.invalidemailAddress)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full px-4 lg:w-4/12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative w-full mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1\",\n              children: intl.formatMessage(messages.website)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: intl.formatMessage(messages.website),\n              ...register('website', {\n                required: false\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this), errors && errors.website && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-youtube-regular text-sm\",\n              children: intl.formatMessage(messages.websiteRequired)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormactionButtons, {\n        saveLabel: messages.saveButtonText,\n        onReset: onReset,\n        cancleLabel: messages.cancelButtonLabe\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactDetailsForm, \"mT+WK890sMD2TfqePvAF0fAa8S4=\", false, function () {\n  return [useParams, useSelector, useIntl, useForm];\n});\n\n_c = ContactDetailsForm;\nContactDetailsForm.propTypes = {\n  bankingDetails: PropTypes.object\n};\nexport default ContactDetailsForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactDetailsForm\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/components/ContactDetailsForm/index.js"],"names":["React","useEffect","useState","PropTypes","useForm","Input","InputGroup","InputLeftAddon","useIntl","toast","useSelector","get","isEmpty","messages","publicAxios","axios","isUndefined","useParams","FormactionButtons","InputScaffold","ContactDetailsForm","setActiveStep","currentBranch","setContactId","getBranchDetails","branchId","contactDetails","setContactDetails","auth","state","contactId","contact","intl","register","formState","errors","handleSubmit","reset","setValue","mode","getBranchData","_id","modifiedContactDetails","alternateNumbers","length","startsWith","slice","handleFormSubmit","data","Array","isArray","refinedData","Object","fromEntries","entries","filter","key","value","api","patch","headers","Authorization","authToken","post","formatMessage","contactDetailsSaveSuccess","err","somethingWentWrong","onReset","keepDirty","keepErrors","keepValues","mobileNumber","mobileNumberRequired","pattern","maxLength","minLength","required","landlineNumber","landlineNumbers","landlineNumberRequired","whatsappNumber","whatsAppNumbers","whatsappNumberRequired","emailAddress","emails","type","emailAddressRequired","invalidemailAddress","website","websiteRequired","saveButtonText","cancelButtonLabe","propTypes","bankingDetails","object"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Input, InputGroup, InputLeftAddon } from '@chakra-ui/react';\r\nimport { useIntl } from 'react-intl';\r\nimport toast from 'react-hot-toast';\r\nimport { useSelector } from 'react-redux';\r\nimport get from 'lodash/get';\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport messages from './messages';\r\nimport { publicAxios as axios } from '../../axios';\r\nimport { isUndefined } from 'lodash';\r\nimport { useParams } from 'react-router';\r\nimport FormactionButtons from '../../utils/FormactionButtons';\r\nimport InputScaffold from '../../utils/InputScaffold';\r\n\r\nconst ContactDetailsForm = ({\r\n  setActiveStep,\r\n  currentBranch,\r\n  setContactId,\r\n  getBranchDetails,\r\n}) => {\r\n  const { branchId } = useParams();\r\n  const [contactDetails, setContactDetails] = useState({});\r\n  const auth = useSelector((state) => state.auth);\r\n  const { contactId, contact = [] } = currentBranch;\r\n  const intl = useIntl();\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    handleSubmit,\r\n    reset,\r\n    setValue,\r\n  } = useForm({ mode: 'onSubmit' });\r\n\r\n\r\n  const getBranchData = async () => {\r\n    if (!isUndefined(branchId) || !isUndefined(currentBranch._id)) {\r\n      const { contact } = await getBranchDetails(branchId || currentBranch._id);\r\n      setContactDetails(contact[0]);\r\n    } else if (!isEmpty(currentBranch.contact)) {\r\n      setContactDetails(currentBranch.contact[0]);\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    getBranchData();\r\n  }, []);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (!isEmpty(contactDetails)) {\r\n     let  modifiedContactDetails = {...contactDetails};\r\n\r\n      if(modifiedContactDetails.alternateNumbers[0].length > 10 && modifiedContactDetails.alternateNumbers[0].startsWith(\"91\")){\r\n        modifiedContactDetails.alternateNumbers = [modifiedContactDetails.alternateNumbers[0].slice(2,)];\r\n      }\r\n      setValue('mobileNumbers', get(contactDetails, 'mobileNumbers', ''));\r\n      setValue('alternateNumbers', get(modifiedContactDetails, 'alternateNumbers', ''));\r\n      setValue('landlineNumbers', get(contactDetails, 'landlineNumbers', ''));\r\n      setValue('whatsAppNumbers', get(contactDetails, 'whatsAppNumbers', ''));\r\n      setValue('emails', get(contactDetails, 'emails', ''));\r\n      setValue('website', get(contactDetails, 'website', ''));\r\n      setValue('socialLink1', get(contactDetails, 'socialLink1', ''));\r\n      setValue('socialLink2', get(contactDetails, 'socialLink2', ''));\r\n    }\r\n  }, [contactDetails]);\r\n\r\n  const handleFormSubmit = async (data) => {\r\n    //data.alternateNumbers\r\n\r\n    if (!Array.isArray(data.alternateNumbers) && !data.alternateNumbers.startsWith(\"91\")){\r\n      data.alternateNumbers = `91${data.alternateNumbers}`\r\n    }\r\n\r\n    if (Array.isArray(data.alternateNumbers) && !data.alternateNumbers[0].startsWith(\"91\")){\r\n      data.alternateNumbers[0] = `91${data.alternateNumbers[0]}`\r\n    }\r\n\r\n\r\n   let refinedData = Object.fromEntries(\r\n      Object.entries(data).filter(([key, value]) => value),\r\n    );\r\n\r\n    try {\r\n      const api = `/branches/${currentBranch._id}/contacts`;\r\n      if (!isEmpty(contactId)) {\r\n        await axios.patch(\r\n          api,\r\n\r\n          refinedData,\r\n\r\n          {\r\n            headers: {\r\n              Authorization: auth.authToken,\r\n            },\r\n          },\r\n        );\r\n      } else {\r\n        const { data } = await axios.post(api, refinedData, {\r\n          headers: {\r\n            Authorization: auth.authToken,\r\n          },\r\n        });\r\n        setContactId(data.contact);\r\n      }\r\n      setActiveStep(4);\r\n      toast(intl.formatMessage(messages.contactDetailsSaveSuccess));\r\n    } catch (err) {\r\n      toast(intl.formatMessage(messages.somethingWentWrong));\r\n    } \r\n  };\r\n  const onReset = () =>\r\n    reset(\r\n      {},\r\n      {\r\n        keepDirty: false,\r\n        keepErrors: false,\r\n        keepValues: false,\r\n      },\r\n    );\r\n  return (\r\n    <form onSubmit={handleSubmit(handleFormSubmit)}>\r\n      <div>\r\n        <h6 className='mt-6 mb-2 font-bold'>\r\n          {intl.formatMessage(messages.contactDetails)}\r\n        </h6>\r\n        <hr className='mb-6 border-b-1 border-blueGray-200' />\r\n        <div className='flex flex-wrap -mx-4'>\r\n          {/* <CustomInput width=\"6/12\" label={messages.mobileNumber} inputName=\"mobileNumber\" inputType=\"tel\" isRequired={true} errors={errors} requiredLabel={messages.addressLine1Required} register={register} /> */}\r\n          {/* <div className=\"w-full px-4 lg:w-4/12\">\r\n            <div className=\"relative w-full mb-3\">\r\n              <label\r\n                className=\"block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1\"\r\n                \r\n              >\r\n                {intl.formatMessage(messages.mobileNumber)}\r\n              </label>\r\n              <Input\r\n                type=\"number\"\r\n                placeholder={intl.formatMessage(messages.mobileNumber)}\r\n                {...register('mobileNumber', {\r\n                  pattern: /^\\d{10}$/,\r\n                  maxLength: 10,\r\n                  minLength: 10,\r\n                  required: true\r\n                })}\r\n              />\r\n              {errors && errors.mobileNumber && (\r\n                <span className=\"text-youtube-regular text-sm\">\r\n                  {errors.mobileNumber.type === 'required' ? (\r\n                    <>{intl.formatMessage(messages.mobileNumberRequired)}</>\r\n                  ) : (\r\n                    <>{intl.formatMessage(messages.mobileNumberInvalid)}</>\r\n                  )}\r\n                </span>\r\n              )}\r\n            </div>\r\n          </div> */}\r\n\r\n          {/* <div className='w-full px-4 lg:w-4/12'>\r\n            <div className='relative w-full mb-3'>\r\n              <label className='block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1'>\r\n                {intl.formatMessage(messages.mobileNumber)}\r\n              </label>\r\n              <Input\r\n                type='number'\r\n                placeholder={intl.formatMessage(messages.mobileNumber)}\r\n                {...register('alternateNumbers', {\r\n                  pattern: /^\\d{10}$/,\r\n                  maxLength: 10,\r\n                  minLength: 10,\r\n                  required: false,\r\n                })}\r\n              />\r\n              {errors && errors.alternateNumbers && (\r\n                <span className='text-youtube-regular text-sm'>\r\n                  {intl.formatMessage(messages.alternateMobileNumberRequired)}\r\n                </span>\r\n              )}\r\n            </div>\r\n          </div> */}\r\n          <div className='w-full px-4 lg:w-4/12'>\r\n          <label className='block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1'>\r\n                {intl.formatMessage(messages.mobileNumber)}\r\n              </label>\r\n              <InputGroup>\r\n              <InputLeftAddon children='91' />\r\n            <Input\r\n              inputType='tel'\r\n              requiredLabel={messages.mobileNumberRequired}\r\n              {...register('alternateNumbers',{\r\n                  pattern: /^\\d{10}$/,\r\n                  maxLength: 10,\r\n                  minLength: 10,\r\n                  required: true,\r\n                })\r\n              }\r\n            />\r\n            </InputGroup>\r\n            {errors && errors.alternateNumbers && (\r\n                <span className='text-youtube-regular text-sm'>\r\n                  {intl.formatMessage(messages.mobileNumberRequired)}\r\n                </span>\r\n              )}\r\n          </div>\r\n\r\n          <div className='w-full px-4 lg:w-4/12'>\r\n            <div className='relative w-full mb-3'>\r\n              <label className='block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1'>\r\n                {intl.formatMessage(messages.landlineNumber)}\r\n              </label>\r\n              <Input\r\n                type='tel'\r\n                placeholder={intl.formatMessage(messages.landlineNumber)}\r\n                {...register('landlineNumbers', {\r\n                  pattern: /^\\d{10}$/,\r\n                  maxLength: 10,\r\n                  minLength: 10,\r\n                  required: false,\r\n                })}\r\n              />\r\n              {errors && errors.landlineNumbers && (\r\n                <span className='text-youtube-regular text-sm'>\r\n                  {intl.formatMessage(messages.landlineNumberRequired)}\r\n                </span>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className='w-full px-4 lg:w-4/12'>\r\n            <div className='relative w-full mb-3'>\r\n              <label className='block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1'>\r\n                {intl.formatMessage(messages.whatsappNumber)}\r\n              </label>\r\n              <Input\r\n                type='tel'\r\n                placeholder={intl.formatMessage(messages.whatsappNumber)}\r\n                {...register('whatsAppNumbers', {\r\n                  pattern: /^\\d{10}$/,\r\n                  maxLength: 10,\r\n                  minLength: 10,\r\n                  required: false,\r\n                })}\r\n              />\r\n              {errors && errors.whatsAppNumbers && (\r\n                <span className='text-youtube-regular text-sm'>\r\n                  {intl.formatMessage(messages.whatsappNumberRequired)}\r\n                </span>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className='w-full px-4 lg:w-4/12'>\r\n            <div className='relative w-full mb-3'>\r\n              <label className='block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1'>\r\n                {intl.formatMessage(messages.emailAddress)}\r\n              </label>\r\n              <Input\r\n                placeholder={intl.formatMessage(messages.emailAddress)}\r\n                {...register('emails', {\r\n                  required: false,\r\n                  pattern: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\r\n                })}\r\n              />\r\n              {errors && errors.emails && (\r\n                <span className='text-youtube-regular text-sm'>\r\n                  {errors.emails.type === 'required'\r\n                    ? intl.formatMessage(messages.emailAddressRequired)\r\n                    : intl.formatMessage(messages.invalidemailAddress)}\r\n                </span>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className='w-full px-4 lg:w-4/12'>\r\n            <div className='relative w-full mb-3'>\r\n              <label className='block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1'>\r\n                {intl.formatMessage(messages.website)}\r\n              </label>\r\n              <Input\r\n                placeholder={intl.formatMessage(messages.website)}\r\n                {...register('website', {\r\n                  required: false,\r\n                })}\r\n              />\r\n              {errors && errors.website && (\r\n                <span className='text-youtube-regular text-sm'>\r\n                  {intl.formatMessage(messages.websiteRequired)}\r\n                </span>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* <div className=\"w-full px-4 lg:w-4/12\">\r\n            <div className=\"relative w-full mb-3\">\r\n              <label\r\n                className=\"block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1\"\r\n                \r\n              >\r\n                {intl.formatMessage(messages.socialLink1)}\r\n              </label>\r\n              <Input\r\n                placeholder={intl.formatMessage(messages.socialLink1)}\r\n                {...register('socialLink1', {\r\n                })}\r\n              />\r\n              {errors && errors.socialLink1 && (\r\n                <span className=\"text-youtube-regular text-sm\">\r\n                  {intl.formatMessage(messages.socialLink1Required)}\r\n                </span>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"w-full px-4 lg:w-4/12\">\r\n            <div className=\"relative w-full mb-3\">\r\n              <label\r\n                className=\"block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1\"\r\n                \r\n              >\r\n                {intl.formatMessage(messages.socialLink2)}\r\n              </label>\r\n              <Input\r\n                placeholder={intl.formatMessage(messages.socialLink2)}\r\n                {...register('socialLink2', {\r\n                })}\r\n              />\r\n              {errors && errors.socialLink2 && (\r\n                <span className=\"text-youtube-regular text-sm\">\r\n                  {intl.formatMessage(messages.socialLink2Required)}\r\n                </span>\r\n              )}\r\n            </div>\r\n          </div> */}\r\n\r\n          {/* <div className=\"w-full px-4 lg:w-6/12\">\r\n            <div className=\"relative w-full mb-3\">\r\n              <Button type=\"submit\" style={{ backgroundColor: \"#1e293b\", color: \"#ffffff\", marginRight: \"20px\" }}>\r\n                {intl.formatMessage(messages.saveButtonLabel)}\r\n              </Button>\r\n              <Button\r\n                type=\"button\"\r\n                onClick={() =>\r\n                  reset(\r\n                    {},\r\n                    {\r\n                      keepDirty: false,\r\n                      keepErrors: false,\r\n                      keepValues: false,\r\n                    },\r\n                  )\r\n                }\r\n                color=\"light\"\r\n              >\r\n                {intl.formatMessage(messages.cancelButtonLabe)}\r\n              </Button>\r\n            </div>\r\n          </div> */}\r\n        </div>\r\n        <FormactionButtons\r\n          saveLabel={messages.saveButtonText}\r\n          onReset={onReset}\r\n          cancleLabel={messages.cancelButtonLabe}\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nContactDetailsForm.propTypes = {\r\n  bankingDetails: PropTypes.object,\r\n};\r\n\r\nexport default ContactDetailsForm;\r\n"]},"metadata":{},"sourceType":"module"}