{"ast":null,"code":"import { publicAxios as axios } from '../../axios';\nimport routes from '../../routes';\nimport getURLParams from '../../utils/getURLParams';\n\nclass Services {\n  static async getInventoryStat(payload) {\n    const params = getURLParams(payload.params);\n    return await axios.get(`${routes.inventoryRoute}/stats${params}`, {\n      headers: {\n        Authorization: payload.auth.authToken\n      }\n    });\n  }\n\n  static async getSalesStat(payload) {\n    const params = getURLParams(payload.params);\n    return await axios.get(`${routes.salesRoute}/stats${params}`, {\n      headers: {\n        Authorization: payload.auth.authToken\n      }\n    });\n  }\n\n  static async getCollectionsStat(payload) {\n    const params = getURLParams(payload.params);\n    return await axios.get(`${routes.accountRoute}${routes.collectionsRoute}/stats${params}`, {\n      headers: {\n        Authorization: payload.auth.authToken\n      }\n    });\n  }\n\n  static async getOutstandingStat(payload) {\n    const params = getURLParams(payload.params);\n    return await axios.get(`${routes.accountRoute}${routes.outstandingRoute}s/stats${params}`, {\n      headers: {\n        Authorization: payload.auth.authToken\n      }\n    });\n  }\n\n  static async getOrderStat(payload) {\n    const params = getURLParams(payload.params);\n    return await axios.get(`${routes.orderRoute}/stats${params}`, {\n      headers: {\n        Authorization: payload.auth.authToken\n      }\n    });\n  }\n\n}\n\nexport default Services;","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/containers/Dashboard/services.js"],"names":["publicAxios","axios","routes","getURLParams","Services","getInventoryStat","payload","params","get","inventoryRoute","headers","Authorization","auth","authToken","getSalesStat","salesRoute","getCollectionsStat","accountRoute","collectionsRoute","getOutstandingStat","outstandingRoute","getOrderStat","orderRoute"],"mappings":"AAAA,SAASA,WAAW,IAAIC,KAAxB,QAAqC,aAArC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;;AAIA,MAAMC,QAAN,CAAc;AACqB,eAAhBC,gBAAgB,CAACC,OAAD,EAAS;AACpC,UAAMC,MAAM,GAAGJ,YAAY,CAACG,OAAO,CAACC,MAAT,CAA3B;AAEA,WAAO,MAAMN,KAAK,CAACO,GAAN,CAAW,GAAEN,MAAM,CAACO,cAAe,SAAQF,MAAO,EAAlD,EACT;AACAG,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAEL,OAAO,CAACM,IAAR,CAAaC;AADrB;AADT,KADS,CAAb;AAMD;;AAEwB,eAAZC,YAAY,CAACR,OAAD,EAAS;AAChC,UAAMC,MAAM,GAAGJ,YAAY,CAACG,OAAO,CAACC,MAAT,CAA3B;AAEA,WAAO,MAAMN,KAAK,CAACO,GAAN,CAAW,GAAEN,MAAM,CAACa,UAAW,SAAQR,MAAO,EAA9C,EACT;AACAG,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAEL,OAAO,CAACM,IAAR,CAAaC;AADrB;AADT,KADS,CAAb;AAMD;;AAE8B,eAAlBG,kBAAkB,CAACV,OAAD,EAAS;AACtC,UAAMC,MAAM,GAAGJ,YAAY,CAACG,OAAO,CAACC,MAAT,CAA3B;AACA,WAAO,MAAMN,KAAK,CAACO,GAAN,CAAW,GAAEN,MAAM,CAACe,YAAa,GAAEf,MAAM,CAACgB,gBAAiB,SAAQX,MAAO,EAA1E,EACT;AACAG,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAEL,OAAO,CAACM,IAAR,CAAaC;AADrB;AADT,KADS,CAAb;AAMD;;AAE8B,eAAlBM,kBAAkB,CAACb,OAAD,EAAS;AACtC,UAAMC,MAAM,GAAGJ,YAAY,CAACG,OAAO,CAACC,MAAT,CAA3B;AACA,WAAO,MAAMN,KAAK,CAACO,GAAN,CAAW,GAAEN,MAAM,CAACe,YAAa,GAAEf,MAAM,CAACkB,gBAAiB,UAASb,MAAO,EAA3E,EACT;AACAG,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAEL,OAAO,CAACM,IAAR,CAAaC;AADrB;AADT,KADS,CAAb;AAMD;;AAEwB,eAAZQ,YAAY,CAACf,OAAD,EAAS;AAChC,UAAMC,MAAM,GAAGJ,YAAY,CAACG,OAAO,CAACC,MAAT,CAA3B;AACA,WAAO,MAAMN,KAAK,CAACO,GAAN,CAAW,GAAEN,MAAM,CAACoB,UAAW,SAAQf,MAAO,EAA9C,EACT;AACAG,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAEL,OAAO,CAACM,IAAR,CAAaC;AADrB;AADT,KADS,CAAb;AAMD;;AAnDO;;AAuDd,eAAeT,QAAf","sourcesContent":["import { publicAxios as axios } from '../../axios';\r\nimport routes from '../../routes';\r\nimport getURLParams from '../../utils/getURLParams';\r\n\r\n\r\n\r\nclass Services{\r\n      static async getInventoryStat(payload){\r\n        const params = getURLParams(payload.params)\r\n\r\n        return await axios.get(`${routes.inventoryRoute}/stats${params}`\r\n          , {\r\n            headers: {\r\n              Authorization: payload.auth.authToken,\r\n            },\r\n          });\r\n      };\r\n\r\n      static async getSalesStat(payload){\r\n        const params = getURLParams(payload.params)\r\n\r\n        return await axios.get(`${routes.salesRoute}/stats${params}`\r\n          , {\r\n            headers: {\r\n              Authorization: payload.auth.authToken,\r\n            },\r\n          });\r\n      };\r\n\r\n      static async getCollectionsStat(payload){\r\n        const params = getURLParams(payload.params)\r\n        return await axios.get(`${routes.accountRoute}${routes.collectionsRoute}/stats${params}`\r\n          , {\r\n            headers: {\r\n              Authorization: payload.auth.authToken,\r\n            },\r\n          });\r\n      };\r\n\r\n      static async getOutstandingStat(payload){\r\n        const params = getURLParams(payload.params)\r\n        return await axios.get(`${routes.accountRoute}${routes.outstandingRoute}s/stats${params}`\r\n          , {\r\n            headers: {\r\n              Authorization: payload.auth.authToken,\r\n            },\r\n          });\r\n      };\r\n\r\n      static async getOrderStat(payload){\r\n        const params = getURLParams(payload.params)\r\n        return await axios.get(`${routes.orderRoute}/stats${params}`\r\n          , {\r\n            headers: {\r\n              Authorization: payload.auth.authToken,\r\n            },\r\n          });\r\n      };\r\n}\r\n\r\n\r\nexport default Services;"]},"metadata":{},"sourceType":"module"}