{"ast":null,"code":"import { Factory } from './Factory.js';\nimport { Node } from './Node.js';\nimport { getNumberValidator } from './Validators.js';\nexport class Container extends Node {\n  constructor() {\n    super(...arguments);\n    this.children = [];\n  }\n\n  getChildren(filterFunc) {\n    if (!filterFunc) {\n      return this.children || [];\n    }\n\n    const children = this.children || [];\n    var results = [];\n    children.forEach(function (child) {\n      if (filterFunc(child)) {\n        results.push(child);\n      }\n    });\n    return results;\n  }\n\n  hasChildren() {\n    return this.getChildren().length > 0;\n  }\n\n  removeChildren() {\n    this.getChildren().forEach(child => {\n      child.parent = null;\n      child.index = 0;\n      child.remove();\n    });\n    this.children = [];\n\n    this._requestDraw();\n\n    return this;\n  }\n\n  destroyChildren() {\n    this.getChildren().forEach(child => {\n      child.parent = null;\n      child.index = 0;\n      child.destroy();\n    });\n    this.children = [];\n\n    this._requestDraw();\n\n    return this;\n  }\n\n  add() {\n    for (var _len = arguments.length, children = new Array(_len), _key = 0; _key < _len; _key++) {\n      children[_key] = arguments[_key];\n    }\n\n    if (arguments.length > 1) {\n      for (var i = 0; i < arguments.length; i++) {\n        this.add(arguments[i]);\n      }\n\n      return this;\n    }\n\n    var child = children[0];\n\n    if (child.getParent()) {\n      child.moveTo(this);\n      return this;\n    }\n\n    this._validateAdd(child);\n\n    child.index = this.getChildren().length;\n    child.parent = this;\n\n    child._clearCaches();\n\n    this.getChildren().push(child);\n\n    this._fire('add', {\n      child: child\n    });\n\n    this._requestDraw();\n\n    return this;\n  }\n\n  destroy() {\n    if (this.hasChildren()) {\n      this.destroyChildren();\n    }\n\n    super.destroy();\n    return this;\n  }\n\n  find(selector) {\n    return this._generalFind(selector, false);\n  }\n\n  findOne(selector) {\n    var result = this._generalFind(selector, true);\n\n    return result.length > 0 ? result[0] : undefined;\n  }\n\n  _generalFind(selector, findOne) {\n    var retArr = [];\n\n    this._descendants(node => {\n      const valid = node._isMatch(selector);\n\n      if (valid) {\n        retArr.push(node);\n      }\n\n      if (valid && findOne) {\n        return true;\n      }\n\n      return false;\n    });\n\n    return retArr;\n  }\n\n  _descendants(fn) {\n    let shouldStop = false;\n    const children = this.getChildren();\n\n    for (const child of children) {\n      shouldStop = fn(child);\n\n      if (shouldStop) {\n        return true;\n      }\n\n      if (!child.hasChildren()) {\n        continue;\n      }\n\n      shouldStop = child._descendants(fn);\n\n      if (shouldStop) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  toObject() {\n    var obj = Node.prototype.toObject.call(this);\n    obj.children = [];\n    this.getChildren().forEach(child => {\n      obj.children.push(child.toObject());\n    });\n    return obj;\n  }\n\n  isAncestorOf(node) {\n    var parent = node.getParent();\n\n    while (parent) {\n      if (parent._id === this._id) {\n        return true;\n      }\n\n      parent = parent.getParent();\n    }\n\n    return false;\n  }\n\n  clone(obj) {\n    var node = Node.prototype.clone.call(this, obj);\n    this.getChildren().forEach(function (no) {\n      node.add(no.clone());\n    });\n    return node;\n  }\n\n  getAllIntersections(pos) {\n    var arr = [];\n    this.find('Shape').forEach(function (shape) {\n      if (shape.isVisible() && shape.intersects(pos)) {\n        arr.push(shape);\n      }\n    });\n    return arr;\n  }\n\n  _clearSelfAndDescendantCache(attr) {\n    var _a;\n\n    super._clearSelfAndDescendantCache(attr);\n\n    if (this.isCached()) {\n      return;\n    }\n\n    (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (node) {\n      node._clearSelfAndDescendantCache(attr);\n    });\n  }\n\n  _setChildrenIndices() {\n    var _a;\n\n    (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (child, n) {\n      child.index = n;\n    });\n\n    this._requestDraw();\n  }\n\n  drawScene(can, top) {\n    var layer = this.getLayer(),\n        canvas = can || layer && layer.getCanvas(),\n        context = canvas && canvas.getContext(),\n        cachedCanvas = this._getCanvasCache(),\n        cachedSceneCanvas = cachedCanvas && cachedCanvas.scene;\n\n    var caching = canvas && canvas.isCache;\n\n    if (!this.isVisible() && !caching) {\n      return this;\n    }\n\n    if (cachedSceneCanvas) {\n      context.save();\n      var m = this.getAbsoluteTransform(top).getMatrix();\n      context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n\n      this._drawCachedSceneCanvas(context);\n\n      context.restore();\n    } else {\n      this._drawChildren('drawScene', canvas, top);\n    }\n\n    return this;\n  }\n\n  drawHit(can, top) {\n    if (!this.shouldDrawHit(top)) {\n      return this;\n    }\n\n    var layer = this.getLayer(),\n        canvas = can || layer && layer.hitCanvas,\n        context = canvas && canvas.getContext(),\n        cachedCanvas = this._getCanvasCache(),\n        cachedHitCanvas = cachedCanvas && cachedCanvas.hit;\n\n    if (cachedHitCanvas) {\n      context.save();\n      var m = this.getAbsoluteTransform(top).getMatrix();\n      context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n\n      this._drawCachedHitCanvas(context);\n\n      context.restore();\n    } else {\n      this._drawChildren('drawHit', canvas, top);\n    }\n\n    return this;\n  }\n\n  _drawChildren(drawMethod, canvas, top) {\n    var _a;\n\n    var context = canvas && canvas.getContext(),\n        clipWidth = this.clipWidth(),\n        clipHeight = this.clipHeight(),\n        clipFunc = this.clipFunc(),\n        hasClip = clipWidth && clipHeight || clipFunc;\n    const selfCache = top === this;\n\n    if (hasClip) {\n      context.save();\n      var transform = this.getAbsoluteTransform(top);\n      var m = transform.getMatrix();\n      context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n      context.beginPath();\n\n      if (clipFunc) {\n        clipFunc.call(this, context, this);\n      } else {\n        var clipX = this.clipX();\n        var clipY = this.clipY();\n        context.rect(clipX, clipY, clipWidth, clipHeight);\n      }\n\n      context.clip();\n      m = transform.copy().invert().getMatrix();\n      context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n    }\n\n    var hasComposition = !selfCache && this.globalCompositeOperation() !== 'source-over' && drawMethod === 'drawScene';\n\n    if (hasComposition) {\n      context.save();\n\n      context._applyGlobalCompositeOperation(this);\n    }\n\n    (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {\n      child[drawMethod](canvas, top);\n    });\n\n    if (hasComposition) {\n      context.restore();\n    }\n\n    if (hasClip) {\n      context.restore();\n    }\n  }\n\n  getClientRect(config) {\n    var _a;\n\n    config = config || {};\n    var skipTransform = config.skipTransform;\n    var relativeTo = config.relativeTo;\n    var minX, minY, maxX, maxY;\n    var selfRect = {\n      x: Infinity,\n      y: Infinity,\n      width: 0,\n      height: 0\n    };\n    var that = this;\n    (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {\n      if (!child.visible()) {\n        return;\n      }\n\n      var rect = child.getClientRect({\n        relativeTo: that,\n        skipShadow: config.skipShadow,\n        skipStroke: config.skipStroke\n      });\n\n      if (rect.width === 0 && rect.height === 0) {\n        return;\n      }\n\n      if (minX === undefined) {\n        minX = rect.x;\n        minY = rect.y;\n        maxX = rect.x + rect.width;\n        maxY = rect.y + rect.height;\n      } else {\n        minX = Math.min(minX, rect.x);\n        minY = Math.min(minY, rect.y);\n        maxX = Math.max(maxX, rect.x + rect.width);\n        maxY = Math.max(maxY, rect.y + rect.height);\n      }\n    });\n    var shapes = this.find('Shape');\n    var hasVisible = false;\n\n    for (var i = 0; i < shapes.length; i++) {\n      var shape = shapes[i];\n\n      if (shape._isVisible(this)) {\n        hasVisible = true;\n        break;\n      }\n    }\n\n    if (hasVisible && minX !== undefined) {\n      selfRect = {\n        x: minX,\n        y: minY,\n        width: maxX - minX,\n        height: maxY - minY\n      };\n    } else {\n      selfRect = {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n      };\n    }\n\n    if (!skipTransform) {\n      return this._transformedRect(selfRect, relativeTo);\n    }\n\n    return selfRect;\n  }\n\n}\nFactory.addComponentsGetterSetter(Container, 'clip', ['x', 'y', 'width', 'height']);\nFactory.addGetterSetter(Container, 'clipX', undefined, getNumberValidator());\nFactory.addGetterSetter(Container, 'clipY', undefined, getNumberValidator());\nFactory.addGetterSetter(Container, 'clipWidth', undefined, getNumberValidator());\nFactory.addGetterSetter(Container, 'clipHeight', undefined, getNumberValidator());\nFactory.addGetterSetter(Container, 'clipFunc');","map":{"version":3,"sources":["../src/Container.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { Factory } from './Factory.js';\nimport { Node } from './Node.js';\nimport { getNumberValidator } from './Validators.js';\nexport class Container extends Node {\n    constructor() {\n        super(...arguments);\n        this.children = [];\n    }\n    getChildren(filterFunc) {\n        if (!filterFunc) {\n            return this.children || [];\n        }\n        const children = this.children || [];\n        var results = [];\n        children.forEach(function (child) {\n            if (filterFunc(child)) {\n                results.push(child);\n            }\n        });\n        return results;\n    }\n    hasChildren() {\n        return this.getChildren().length > 0;\n    }\n    removeChildren() {\n        this.getChildren().forEach((child) => {\n            child.parent = null;\n            child.index = 0;\n            child.remove();\n        });\n        this.children = [];\n        this._requestDraw();\n        return this;\n    }\n    destroyChildren() {\n        this.getChildren().forEach((child) => {\n            child.parent = null;\n            child.index = 0;\n            child.destroy();\n        });\n        this.children = [];\n        this._requestDraw();\n        return this;\n    }\n    add(...children) {\n        if (arguments.length > 1) {\n            for (var i = 0; i < arguments.length; i++) {\n                this.add(arguments[i]);\n            }\n            return this;\n        }\n        var child = children[0];\n        if (child.getParent()) {\n            child.moveTo(this);\n            return this;\n        }\n        this._validateAdd(child);\n        child.index = this.getChildren().length;\n        child.parent = this;\n        child._clearCaches();\n        this.getChildren().push(child);\n        this._fire('add', {\n            child: child,\n        });\n        this._requestDraw();\n        return this;\n    }\n    destroy() {\n        if (this.hasChildren()) {\n            this.destroyChildren();\n        }\n        super.destroy();\n        return this;\n    }\n    find(selector) {\n        return this._generalFind(selector, false);\n    }\n    findOne(selector) {\n        var result = this._generalFind(selector, true);\n        return result.length > 0 ? result[0] : undefined;\n    }\n    _generalFind(selector, findOne) {\n        var retArr = [];\n        this._descendants((node) => {\n            const valid = node._isMatch(selector);\n            if (valid) {\n                retArr.push(node);\n            }\n            if (valid && findOne) {\n                return true;\n            }\n            return false;\n        });\n        return retArr;\n    }\n    _descendants(fn) {\n        let shouldStop = false;\n        const children = this.getChildren();\n        for (const child of children) {\n            shouldStop = fn(child);\n            if (shouldStop) {\n                return true;\n            }\n            if (!child.hasChildren()) {\n                continue;\n            }\n            shouldStop = child._descendants(fn);\n            if (shouldStop) {\n                return true;\n            }\n        }\n        return false;\n    }\n    toObject() {\n        var obj = Node.prototype.toObject.call(this);\n        obj.children = [];\n        this.getChildren().forEach((child) => {\n            obj.children.push(child.toObject());\n        });\n        return obj;\n    }\n    isAncestorOf(node) {\n        var parent = node.getParent();\n        while (parent) {\n            if (parent._id === this._id) {\n                return true;\n            }\n            parent = parent.getParent();\n        }\n        return false;\n    }\n    clone(obj) {\n        var node = Node.prototype.clone.call(this, obj);\n        this.getChildren().forEach(function (no) {\n            node.add(no.clone());\n        });\n        return node;\n    }\n    getAllIntersections(pos) {\n        var arr = [];\n        this.find('Shape').forEach(function (shape) {\n            if (shape.isVisible() && shape.intersects(pos)) {\n                arr.push(shape);\n            }\n        });\n        return arr;\n    }\n    _clearSelfAndDescendantCache(attr) {\n        var _a;\n        super._clearSelfAndDescendantCache(attr);\n        if (this.isCached()) {\n            return;\n        }\n        (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (node) {\n            node._clearSelfAndDescendantCache(attr);\n        });\n    }\n    _setChildrenIndices() {\n        var _a;\n        (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (child, n) {\n            child.index = n;\n        });\n        this._requestDraw();\n    }\n    drawScene(can, top) {\n        var layer = this.getLayer(), canvas = can || (layer && layer.getCanvas()), context = canvas && canvas.getContext(), cachedCanvas = this._getCanvasCache(), cachedSceneCanvas = cachedCanvas && cachedCanvas.scene;\n        var caching = canvas && canvas.isCache;\n        if (!this.isVisible() && !caching) {\n            return this;\n        }\n        if (cachedSceneCanvas) {\n            context.save();\n            var m = this.getAbsoluteTransform(top).getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n            this._drawCachedSceneCanvas(context);\n            context.restore();\n        }\n        else {\n            this._drawChildren('drawScene', canvas, top);\n        }\n        return this;\n    }\n    drawHit(can, top) {\n        if (!this.shouldDrawHit(top)) {\n            return this;\n        }\n        var layer = this.getLayer(), canvas = can || (layer && layer.hitCanvas), context = canvas && canvas.getContext(), cachedCanvas = this._getCanvasCache(), cachedHitCanvas = cachedCanvas && cachedCanvas.hit;\n        if (cachedHitCanvas) {\n            context.save();\n            var m = this.getAbsoluteTransform(top).getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n            this._drawCachedHitCanvas(context);\n            context.restore();\n        }\n        else {\n            this._drawChildren('drawHit', canvas, top);\n        }\n        return this;\n    }\n    _drawChildren(drawMethod, canvas, top) {\n        var _a;\n        var context = canvas && canvas.getContext(), clipWidth = this.clipWidth(), clipHeight = this.clipHeight(), clipFunc = this.clipFunc(), hasClip = (clipWidth && clipHeight) || clipFunc;\n        const selfCache = top === this;\n        if (hasClip) {\n            context.save();\n            var transform = this.getAbsoluteTransform(top);\n            var m = transform.getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n            context.beginPath();\n            if (clipFunc) {\n                clipFunc.call(this, context, this);\n            }\n            else {\n                var clipX = this.clipX();\n                var clipY = this.clipY();\n                context.rect(clipX, clipY, clipWidth, clipHeight);\n            }\n            context.clip();\n            m = transform.copy().invert().getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n        }\n        var hasComposition = !selfCache &&\n            this.globalCompositeOperation() !== 'source-over' &&\n            drawMethod === 'drawScene';\n        if (hasComposition) {\n            context.save();\n            context._applyGlobalCompositeOperation(this);\n        }\n        (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {\n            child[drawMethod](canvas, top);\n        });\n        if (hasComposition) {\n            context.restore();\n        }\n        if (hasClip) {\n            context.restore();\n        }\n    }\n    getClientRect(config) {\n        var _a;\n        config = config || {};\n        var skipTransform = config.skipTransform;\n        var relativeTo = config.relativeTo;\n        var minX, minY, maxX, maxY;\n        var selfRect = {\n            x: Infinity,\n            y: Infinity,\n            width: 0,\n            height: 0,\n        };\n        var that = this;\n        (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {\n            if (!child.visible()) {\n                return;\n            }\n            var rect = child.getClientRect({\n                relativeTo: that,\n                skipShadow: config.skipShadow,\n                skipStroke: config.skipStroke,\n            });\n            if (rect.width === 0 && rect.height === 0) {\n                return;\n            }\n            if (minX === undefined) {\n                minX = rect.x;\n                minY = rect.y;\n                maxX = rect.x + rect.width;\n                maxY = rect.y + rect.height;\n            }\n            else {\n                minX = Math.min(minX, rect.x);\n                minY = Math.min(minY, rect.y);\n                maxX = Math.max(maxX, rect.x + rect.width);\n                maxY = Math.max(maxY, rect.y + rect.height);\n            }\n        });\n        var shapes = this.find('Shape');\n        var hasVisible = false;\n        for (var i = 0; i < shapes.length; i++) {\n            var shape = shapes[i];\n            if (shape._isVisible(this)) {\n                hasVisible = true;\n                break;\n            }\n        }\n        if (hasVisible && minX !== undefined) {\n            selfRect = {\n                x: minX,\n                y: minY,\n                width: maxX - minX,\n                height: maxY - minY,\n            };\n        }\n        else {\n            selfRect = {\n                x: 0,\n                y: 0,\n                width: 0,\n                height: 0,\n            };\n        }\n        if (!skipTransform) {\n            return this._transformedRect(selfRect, relativeTo);\n        }\n        return selfRect;\n    }\n}\nFactory.addComponentsGetterSetter(Container, 'clip', [\n    'x',\n    'y',\n    'width',\n    'height',\n]);\nFactory.addGetterSetter(Container, 'clipX', undefined, getNumberValidator());\nFactory.addGetterSetter(Container, 'clipY', undefined, getNumberValidator());\nFactory.addGetterSetter(Container, 'clipWidth', undefined, getNumberValidator());\nFactory.addGetterSetter(Container, 'clipHeight', undefined, getNumberValidator());\nFactory.addGetterSetter(Container, 'clipFunc');\n//# sourceMappingURL=Container.js.map"]},"metadata":{},"sourceType":"module"}