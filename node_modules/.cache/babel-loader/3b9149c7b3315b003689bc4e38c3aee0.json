{"ast":null,"code":"import { Konva } from './Global.js';\nconst Captures = new Map();\nconst SUPPORT_POINTER_EVENTS = Konva._global['PointerEvent'] !== undefined;\nexport function getCapturedShape(pointerId) {\n  return Captures.get(pointerId);\n}\nexport function createEvent(evt) {\n  return {\n    evt,\n    pointerId: evt.pointerId\n  };\n}\nexport function hasPointerCapture(pointerId, shape) {\n  return Captures.get(pointerId) === shape;\n}\nexport function setPointerCapture(pointerId, shape) {\n  releaseCapture(pointerId);\n  const stage = shape.getStage();\n  if (!stage) return;\n  Captures.set(pointerId, shape);\n\n  if (SUPPORT_POINTER_EVENTS) {\n    shape._fire('gotpointercapture', createEvent(new PointerEvent('gotpointercapture')));\n  }\n}\nexport function releaseCapture(pointerId, target) {\n  const shape = Captures.get(pointerId);\n  if (!shape) return;\n  const stage = shape.getStage();\n\n  if (stage && stage.content) {}\n\n  Captures.delete(pointerId);\n\n  if (SUPPORT_POINTER_EVENTS) {\n    shape._fire('lostpointercapture', createEvent(new PointerEvent('lostpointercapture')));\n  }\n}","map":{"version":3,"sources":["../src/PointerEvents.ts"],"names":[],"mappings":"AACA,SAAS,KAAT,QAAsB,aAAtB;AAKA,MAAM,QAAQ,GAAG,IAAI,GAAJ,EAAjB;AAIA,MAAM,sBAAsB,GAAG,KAAK,CAAC,OAAN,CAAc,cAAd,MAAkC,SAAjE;AAMA,OAAM,SAAU,gBAAV,CAA2B,SAA3B,EAA4C;AAChD,SAAO,QAAQ,CAAC,GAAT,CAAa,SAAb,CAAP;AACD;AAED,OAAM,SAAU,WAAV,CAAsB,GAAtB,EAAuC;AAC3C,SAAO;AACL,IAAA,GADK;AAEL,IAAA,SAAS,EAAE,GAAG,CAAC;AAFV,GAAP;AAID;AAED,OAAM,SAAU,iBAAV,CAA4B,SAA5B,EAA+C,KAA/C,EAAmE;AACvE,SAAO,QAAQ,CAAC,GAAT,CAAa,SAAb,MAA4B,KAAnC;AACD;AAED,OAAM,SAAU,iBAAV,CAA4B,SAA5B,EAA+C,KAA/C,EAAmE;AACvE,EAAA,cAAc,CAAC,SAAD,CAAd;AAEA,QAAM,KAAK,GAAG,KAAK,CAAC,QAAN,EAAd;AACA,MAAI,CAAC,KAAL,EAAY;AAEZ,EAAA,QAAQ,CAAC,GAAT,CAAa,SAAb,EAAwB,KAAxB;;AAEA,MAAI,sBAAJ,EAA4B;AAC1B,IAAA,KAAK,CAAC,KAAN,CACE,mBADF,EAEE,WAAW,CAAC,IAAI,YAAJ,CAAiB,mBAAjB,CAAD,CAFb;AAID;AACF;AAED,OAAM,SAAU,cAAV,CAAyB,SAAzB,EAA4C,MAA5C,EAAkE;AACtE,QAAM,KAAK,GAAG,QAAQ,CAAC,GAAT,CAAa,SAAb,CAAd;AAEA,MAAI,CAAC,KAAL,EAAY;AAEZ,QAAM,KAAK,GAAG,KAAK,CAAC,QAAN,EAAd;;AAEA,MAAI,KAAK,IAAI,KAAK,CAAC,OAAnB,EAA4B,CAE3B;;AAED,EAAA,QAAQ,CAAC,MAAT,CAAgB,SAAhB;;AAEA,MAAI,sBAAJ,EAA4B;AAC1B,IAAA,KAAK,CAAC,KAAN,CACE,oBADF,EAEE,WAAW,CAAC,IAAI,YAAJ,CAAiB,oBAAjB,CAAD,CAFb;AAID;AACF","sourceRoot":"","sourcesContent":["import { Konva } from './Global.js';\nconst Captures = new Map();\nconst SUPPORT_POINTER_EVENTS = Konva._global['PointerEvent'] !== undefined;\nexport function getCapturedShape(pointerId) {\n    return Captures.get(pointerId);\n}\nexport function createEvent(evt) {\n    return {\n        evt,\n        pointerId: evt.pointerId,\n    };\n}\nexport function hasPointerCapture(pointerId, shape) {\n    return Captures.get(pointerId) === shape;\n}\nexport function setPointerCapture(pointerId, shape) {\n    releaseCapture(pointerId);\n    const stage = shape.getStage();\n    if (!stage)\n        return;\n    Captures.set(pointerId, shape);\n    if (SUPPORT_POINTER_EVENTS) {\n        shape._fire('gotpointercapture', createEvent(new PointerEvent('gotpointercapture')));\n    }\n}\nexport function releaseCapture(pointerId, target) {\n    const shape = Captures.get(pointerId);\n    if (!shape)\n        return;\n    const stage = shape.getStage();\n    if (stage && stage.content) {\n    }\n    Captures.delete(pointerId);\n    if (SUPPORT_POINTER_EVENTS) {\n        shape._fire('lostpointercapture', createEvent(new PointerEvent('lostpointercapture')));\n    }\n}\n//# sourceMappingURL=PointerEvents.js.map"]},"metadata":{},"sourceType":"module"}