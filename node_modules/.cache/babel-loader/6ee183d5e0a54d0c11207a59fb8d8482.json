{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Work\\\\garaaz-distributor\\\\src\\\\components\\\\WorkshopContactForm\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { useIntl } from 'react-intl';\nimport CustomInput from '../../utils/Input';\nimport toast from 'react-hot-toast';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\nimport messages from './messages';\nimport FormactionButtons from '../../utils/FormactionButtons';\nimport { Box } from '@chakra-ui/react';\nimport InputScaffold from '../../utils/InputScaffold';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WorkshopContactForm = _ref => {\n  _s();\n\n  let {\n    currentWorkshop,\n    onFormSubmit\n  } = _ref;\n  const [contactDetails, setContactDetails] = useState({});\n  const intl = useIntl();\n  const {\n    register,\n    formState: {\n      errors\n    },\n    handleSubmit,\n    reset,\n    setValue\n  } = useForm({\n    mode: 'onSubmit'\n  });\n\n  const getBranchData = async () => {\n    setContactDetails(currentWorkshop);\n  };\n\n  useEffect(() => {\n    let mounted = true;\n    getBranchData();\n    mounted = false;\n  }, []);\n  useEffect(() => {\n    if (!isEmpty(contactDetails)) {\n      setValue('ownerFullName', get(contactDetails, 'ownerFullName', ''));\n      setValue('mobileNumber', get(contactDetails, 'mobileNumber', ''));\n      setValue('alternateNumber', get(contactDetails, 'alternateNumber', ''));\n      setValue('email', get(contactDetails, 'email', ''));\n    }\n  }, [contactDetails]);\n\n  const handleFormSubmit = async Data => {\n    try {\n      if (Data.email === '') {\n        delete Data.email;\n      }\n\n      onFormSubmit(Data, 3);\n    } catch (err) {\n      toast(intl.formatMessage(messages.somethingWentWrong));\n    }\n  };\n\n  const onReset = () => reset({}, {\n    keepDirty: false,\n    keepErrors: false,\n    keepValues: false\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(handleFormSubmit),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"mt-6 mb-2 font-bold\",\n        children: intl.formatMessage(messages.contactDetails)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"mb-6 border-b-1 border-blueGray-200\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        flexWrap: \"wrap\",\n        children: [/*#__PURE__*/_jsxDEV(InputScaffold, {\n          width: \"48%\",\n          label: messages.ownerName,\n          inputName: \"ownerFullName\",\n          inputType: \"text\",\n          isRequired: false,\n          errors: errors,\n          requiredLabel: messages.ownerNameRequired,\n          register: register\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputScaffold, {\n          width: \"48%\",\n          label: messages.mobileNumber,\n          inputName: \"mobileNumber\",\n          inputType: \"number\",\n          length: {\n            max: 10,\n            min: 10\n          },\n          isRequired: true,\n          errors: errors,\n          requiredLabel: messages.mobileNumberRequired,\n          errMsg: messages.mobileNumberInvalid,\n          register: register\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        flexWrap: \"wrap\",\n        mt: {\n          base: 0,\n          lg: 6\n        },\n        mb: 6,\n        children: [/*#__PURE__*/_jsxDEV(InputScaffold, {\n          width: \"48%\",\n          label: messages.alternateMobileNumber,\n          inputName: \"alternateNumber\",\n          inputType: \"number\",\n          length: {\n            max: 10,\n            min: 10\n          },\n          isRequired: false,\n          errors: errors,\n          register: register,\n          errMsg: messages.mobileNumberInvalid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputScaffold, {\n          width: \"48%\",\n          label: messages.emailAddress,\n          inputName: \"email\",\n          inputType: \"text\",\n          isRequired: false,\n          errors: errors,\n          errMsg: messages.invalidemailAddress,\n          register: register\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormactionButtons, {\n        saveLabel: messages.saveButtonText,\n        onReset: onReset,\n        cancleLabel: messages.cancelButtonLabe\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WorkshopContactForm, \"x0En12MjDcG6qfV+lN9prxBeB84=\", false, function () {\n  return [useIntl, useForm];\n});\n\n_c = WorkshopContactForm;\nWorkshopContactForm.propTypes = {\n  onFormSubmit: PropTypes.func,\n  currentWorkshop: PropTypes.object\n};\nexport default WorkshopContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkshopContactForm\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/components/WorkshopContactForm/index.js"],"names":["React","useEffect","useState","PropTypes","useForm","useIntl","CustomInput","toast","get","isEmpty","messages","FormactionButtons","Box","InputScaffold","WorkshopContactForm","currentWorkshop","onFormSubmit","contactDetails","setContactDetails","intl","register","formState","errors","handleSubmit","reset","setValue","mode","getBranchData","mounted","handleFormSubmit","Data","email","err","formatMessage","somethingWentWrong","onReset","keepDirty","keepErrors","keepValues","ownerName","ownerNameRequired","mobileNumber","max","min","mobileNumberRequired","mobileNumberInvalid","base","lg","alternateMobileNumber","emailAddress","invalidemailAddress","saveButtonText","cancelButtonLabe","propTypes","func","object"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useIntl } from 'react-intl';\r\nimport CustomInput from '../../utils/Input';\r\nimport toast from 'react-hot-toast';\r\nimport get from 'lodash/get';\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport messages from './messages';\r\nimport FormactionButtons from '../../utils/FormactionButtons';\r\nimport { Box } from '@chakra-ui/react';\r\nimport InputScaffold from '../../utils/InputScaffold';\r\n\r\nconst WorkshopContactForm = ({ currentWorkshop, onFormSubmit }) => {\r\n  const [contactDetails, setContactDetails] = useState({});\r\n  const intl = useIntl();\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    handleSubmit,\r\n    reset,\r\n    setValue,\r\n  } = useForm({ mode: 'onSubmit' });\r\n  const getBranchData = async () => {\r\n    setContactDetails(currentWorkshop);\r\n  };\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    getBranchData();\r\n    mounted = false;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!isEmpty(contactDetails)) {\r\n      setValue('ownerFullName', get(contactDetails, 'ownerFullName', ''));\r\n      setValue('mobileNumber', get(contactDetails, 'mobileNumber', ''));\r\n      setValue('alternateNumber', get(contactDetails, 'alternateNumber', ''));\r\n      setValue('email', get(contactDetails, 'email', ''));\r\n    }\r\n  }, [contactDetails]);\r\n  const handleFormSubmit = async (Data) => {\r\n    try {\r\n      if (Data.email === '') {\r\n        delete Data.email;\r\n      }\r\n      onFormSubmit(Data, 3);\r\n    } catch (err) {\r\n      toast(intl.formatMessage(messages.somethingWentWrong));\r\n    }\r\n  };\r\n  const onReset = () =>\r\n    reset(\r\n      {},\r\n      {\r\n        keepDirty: false,\r\n        keepErrors: false,\r\n        keepValues: false,\r\n      },\r\n    );\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(handleFormSubmit)}>\r\n      <div>\r\n        <h6 className='mt-6 mb-2 font-bold'>\r\n          {intl.formatMessage(messages.contactDetails)}\r\n        </h6>\r\n        <hr className='mb-6 border-b-1 border-blueGray-200' />\r\n\r\n        <Box display='flex' justifyContent='space-between' flexWrap='wrap'>\r\n          <InputScaffold\r\n            width='48%'\r\n            label={messages.ownerName}\r\n            inputName='ownerFullName'\r\n            inputType='text'\r\n            isRequired={false}\r\n            errors={errors}\r\n            requiredLabel={messages.ownerNameRequired}\r\n            register={register}\r\n          />\r\n          <InputScaffold\r\n            width='48%'\r\n            label={messages.mobileNumber}\r\n            inputName='mobileNumber'\r\n            inputType='number'\r\n            length={{ max: 10, min: 10 }}\r\n            isRequired={true}\r\n            errors={errors}\r\n            requiredLabel={messages.mobileNumberRequired}\r\n            errMsg={messages.mobileNumberInvalid}\r\n            register={register}\r\n          />\r\n        </Box>\r\n        <Box display='flex' justifyContent='space-between' flexWrap='wrap' mt={{base: 0, lg: 6}} mb={6}>\r\n          <InputScaffold\r\n            width='48%'\r\n            label={messages.alternateMobileNumber}\r\n            inputName='alternateNumber'\r\n            inputType='number'\r\n            length={{ max: 10, min: 10 }}\r\n            isRequired={false}\r\n            errors={errors}\r\n            register={register}\r\n            errMsg={messages.mobileNumberInvalid}\r\n          />\r\n          <InputScaffold\r\n            width='48%'\r\n            label={messages.emailAddress}\r\n            inputName='email'\r\n            inputType='text'\r\n            isRequired={false}\r\n            errors={errors}\r\n            errMsg={messages.invalidemailAddress}\r\n            register={register}\r\n          />\r\n        </Box>\r\n        <FormactionButtons\r\n          saveLabel={messages.saveButtonText}\r\n          onReset={onReset}\r\n          cancleLabel={messages.cancelButtonLabe}\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nWorkshopContactForm.propTypes = {\r\n  onFormSubmit: PropTypes.func,\r\n  currentWorkshop: PropTypes.object,\r\n};\r\n\r\nexport default WorkshopContactForm;\r\n"]},"metadata":{},"sourceType":"module"}