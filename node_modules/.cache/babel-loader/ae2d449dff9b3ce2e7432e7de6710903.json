{"ast":null,"code":"import { Factory } from '../Factory.js';\nimport { Node } from '../Node.js';\nimport { getNumberValidator } from '../Validators.js';\nexport const HSV = function (imageData) {\n  var data = imageData.data,\n      nPixels = data.length,\n      v = Math.pow(2, this.value()),\n      s = Math.pow(2, this.saturation()),\n      h = Math.abs(this.hue() + 360) % 360,\n      i;\n  var vsu = v * s * Math.cos(h * Math.PI / 180),\n      vsw = v * s * Math.sin(h * Math.PI / 180);\n  var rr = 0.299 * v + 0.701 * vsu + 0.167 * vsw,\n      rg = 0.587 * v - 0.587 * vsu + 0.33 * vsw,\n      rb = 0.114 * v - 0.114 * vsu - 0.497 * vsw;\n  var gr = 0.299 * v - 0.299 * vsu - 0.328 * vsw,\n      gg = 0.587 * v + 0.413 * vsu + 0.035 * vsw,\n      gb = 0.114 * v - 0.114 * vsu + 0.293 * vsw;\n  var br = 0.299 * v - 0.3 * vsu + 1.25 * vsw,\n      bg = 0.587 * v - 0.586 * vsu - 1.05 * vsw,\n      bb = 0.114 * v + 0.886 * vsu - 0.2 * vsw;\n  var r, g, b, a;\n\n  for (i = 0; i < nPixels; i += 4) {\n    r = data[i + 0];\n    g = data[i + 1];\n    b = data[i + 2];\n    a = data[i + 3];\n    data[i + 0] = rr * r + rg * g + rb * b;\n    data[i + 1] = gr * r + gg * g + gb * b;\n    data[i + 2] = br * r + bg * g + bb * b;\n    data[i + 3] = a;\n  }\n};\nFactory.addGetterSetter(Node, 'hue', 0, getNumberValidator(), Factory.afterSetFilter);\nFactory.addGetterSetter(Node, 'saturation', 0, getNumberValidator(), Factory.afterSetFilter);\nFactory.addGetterSetter(Node, 'value', 0, getNumberValidator(), Factory.afterSetFilter);","map":{"version":3,"sources":["../../src/filters/HSV.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { Factory } from '../Factory.js';\nimport { Node } from '../Node.js';\nimport { getNumberValidator } from '../Validators.js';\nexport const HSV = function (imageData) {\n    var data = imageData.data, nPixels = data.length, v = Math.pow(2, this.value()), s = Math.pow(2, this.saturation()), h = Math.abs(this.hue() + 360) % 360, i;\n    var vsu = v * s * Math.cos((h * Math.PI) / 180), vsw = v * s * Math.sin((h * Math.PI) / 180);\n    var rr = 0.299 * v + 0.701 * vsu + 0.167 * vsw, rg = 0.587 * v - 0.587 * vsu + 0.33 * vsw, rb = 0.114 * v - 0.114 * vsu - 0.497 * vsw;\n    var gr = 0.299 * v - 0.299 * vsu - 0.328 * vsw, gg = 0.587 * v + 0.413 * vsu + 0.035 * vsw, gb = 0.114 * v - 0.114 * vsu + 0.293 * vsw;\n    var br = 0.299 * v - 0.3 * vsu + 1.25 * vsw, bg = 0.587 * v - 0.586 * vsu - 1.05 * vsw, bb = 0.114 * v + 0.886 * vsu - 0.2 * vsw;\n    var r, g, b, a;\n    for (i = 0; i < nPixels; i += 4) {\n        r = data[i + 0];\n        g = data[i + 1];\n        b = data[i + 2];\n        a = data[i + 3];\n        data[i + 0] = rr * r + rg * g + rb * b;\n        data[i + 1] = gr * r + gg * g + gb * b;\n        data[i + 2] = br * r + bg * g + bb * b;\n        data[i + 3] = a;\n    }\n};\nFactory.addGetterSetter(Node, 'hue', 0, getNumberValidator(), Factory.afterSetFilter);\nFactory.addGetterSetter(Node, 'saturation', 0, getNumberValidator(), Factory.afterSetFilter);\nFactory.addGetterSetter(Node, 'value', 0, getNumberValidator(), Factory.afterSetFilter);\n//# sourceMappingURL=HSV.js.map"]},"metadata":{},"sourceType":"module"}