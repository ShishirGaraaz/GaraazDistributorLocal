{"ast":null,"code":"\"use strict\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PositiveSpaceLens = void 0;\n\nconst jsx_runtime_1 = require(\"react/jsx-runtime\");\n\nconst clamp_1 = require(\"../../lib/clamp\");\n\nconst textured_lens_data_uri_1 = require(\"./assets/textured-lens-data-uri\");\n\nconst react_1 = require(\"react\");\n\nexports.PositiveSpaceLens = (0, react_1.forwardRef)((props, ref) => {\n  const {\n    isActive,\n    isPositionOutside,\n    fadeDurationInMs,\n    cursorOffset: {\n      x: cursorOffsetX,\n      y: cursorOffsetY\n    },\n    position: {\n      x: positionX,\n      y: positionY\n    },\n    style: userSpecifiedStyle\n  } = props,\n        rest = __rest(props, [\"isActive\", \"isPositionOutside\", \"fadeDurationInMs\", \"cursorOffset\", \"position\", \"style\"]);\n\n  const typedRef = ref;\n\n  if (!(typedRef === null || typedRef === void 0 ? void 0 : typedRef.current)) {\n    return null;\n  }\n\n  const defaultStyle = {\n    transition: `opacity ${fadeDurationInMs}ms ease-in`,\n    backgroundImage: `url(${textured_lens_data_uri_1.dataUri})`\n  };\n  const width = cursorOffsetX * 2;\n  const height = cursorOffsetY * 2;\n  const isVisible = isActive && !isPositionOutside;\n  const top = positionY - cursorOffsetY;\n  const left = positionX - cursorOffsetX;\n  const maxTop = typedRef.current.offsetHeight - height;\n  const maxLeft = typedRef.current.offsetWidth - width;\n  const minOffset = 0;\n  const priorityStyle = {\n    position: 'absolute',\n    top: `${(0, clamp_1.clamp)(top, minOffset, maxTop)}px`,\n    left: `${(0, clamp_1.clamp)(left, minOffset, maxLeft)}px`,\n    width: `${width}px`,\n    height: `${height}px`,\n    opacity: isVisible ? 1 : 0\n  };\n  return (0, jsx_runtime_1.jsx)(\"div\", Object.assign({\n    style: Object.assign(Object.assign(Object.assign({}, defaultStyle), userSpecifiedStyle), priorityStyle)\n  }, rest), void 0);\n});\nexports.PositiveSpaceLens.displayName = 'PositiveSpaceLens';","map":{"version":3,"sources":["../../../../src/lens/positive-space/index.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,MAAA,OAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,MAAA,wBAAA,GAAA,OAAA,CAAA,iCAAA,CAAA;;AAEA,MAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AAEa,OAAA,CAAA,iBAAA,GAAoB,CAAA,GAAA,OAAA,CAAA,UAAA,EAAwC,CAAC,KAAD,EAAQ,GAAR,KAAmC;AACxG,QAAM;AACF,IAAA,QADE;AAEF,IAAA,iBAFE;AAGF,IAAA,gBAHE;AAIF,IAAA,YAAY,EAAE;AACV,MAAA,CAAC,EAAE,aADO;AAEV,MAAA,CAAC,EAAE;AAFO,KAJZ;AAQF,IAAA,QAAQ,EAAE;AACN,MAAA,CAAC,EAAE,SADG;AAEN,MAAA,CAAC,EAAE;AAFG,KARR;AAYF,IAAA,KAAK,EAAE;AAZL,MAcF,KAdJ;AAAA,QAaO,IAAI,GAAA,MAAA,CACP,KADO,EAbL,CAAA,UAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,cAAA,EAAA,UAAA,EAAA,OAAA,CAaK,CAbX;;AAeA,QAAM,QAAQ,GAAI,GAAlB;;AAEA,MAAI,EAAC,QAAQ,KAAA,IAAR,IAAA,QAAQ,KAAA,KAAA,CAAR,GAAQ,KAAA,CAAR,GAAA,QAAQ,CAAE,OAAX,CAAJ,EAAwB;AACpB,WAAO,IAAP;AACH;;AAED,QAAM,YAAY,GAAG;AACjB,IAAA,UAAU,EAAE,WAAW,gBAAgB,YADtB;AAEjB,IAAA,eAAe,EAAE,OAAO,wBAAA,CAAA,OAAO;AAFd,GAArB;AAKA,QAAM,KAAK,GAAG,aAAa,GAAG,CAA9B;AACA,QAAM,MAAM,GAAG,aAAa,GAAG,CAA/B;AACA,QAAM,SAAS,GAAG,QAAQ,IAAI,CAAC,iBAA/B;AACA,QAAM,GAAG,GAAG,SAAS,GAAG,aAAxB;AACA,QAAM,IAAI,GAAG,SAAS,GAAG,aAAzB;AACA,QAAM,MAAM,GAAG,QAAQ,CAAC,OAAT,CAAiB,YAAjB,GAAgC,MAA/C;AACA,QAAM,OAAO,GAAG,QAAQ,CAAC,OAAT,CAAiB,WAAjB,GAA+B,KAA/C;AACA,QAAM,SAAS,GAAG,CAAlB;AAEA,QAAM,aAAa,GAAG;AAClB,IAAA,QAAQ,EAAE,UADQ;AAElB,IAAA,GAAG,EAAE,GAAG,CAAA,GAAA,OAAA,CAAA,KAAA,EAAM,GAAN,EAAW,SAAX,EAAsB,MAAtB,CAA6B,IAFnB;AAGlB,IAAA,IAAI,EAAE,GAAG,CAAA,GAAA,OAAA,CAAA,KAAA,EAAM,IAAN,EAAY,SAAZ,EAAuB,OAAvB,CAA+B,IAHtB;AAIlB,IAAA,KAAK,EAAE,GAAG,KAAK,IAJG;AAKlB,IAAA,MAAM,EAAE,GAAG,MAAM,IALC;AAMlB,IAAA,OAAO,EAAE,SAAS,GAAG,CAAH,GAAO;AANP,GAAtB;AASA,SACI,CAAA,GAAA,aAAA,CAAA,GAAA,EAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AACI,IAAA,KAAK,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACE,YADF,CAAA,EAEE,kBAFF,CAAA,EAGE,aAHF;AADT,GAAA,EAMQ,IANR,CAAA,EAMY,KAAA,CANZ,CADJ;AAUH,CAvDgC,CAApB;AAyDb,OAAA,CAAA,iBAAA,CAAkB,WAAlB,GAAgC,mBAAhC","sourcesContent":["import { clamp } from 'src/lib/clamp';\nimport { dataUri } from 'src/lens/positive-space/assets/textured-lens-data-uri';\nimport type { LensProps } from 'src/types';\nimport { forwardRef, MutableRefObject } from 'react';\n\nexport const PositiveSpaceLens = forwardRef<HTMLImageElement, LensProps>((props, ref): JSX.Element | null => {\n    const {\n        isActive,\n        isPositionOutside,\n        fadeDurationInMs,\n        cursorOffset: {\n            x: cursorOffsetX,\n            y: cursorOffsetY,\n        },\n        position: {\n            x: positionX,\n            y: positionY,\n        },\n        style: userSpecifiedStyle,\n        ...rest\n    } = props;\n    const typedRef = (ref as MutableRefObject<HTMLImageElement>);\n\n    if (!typedRef?.current) {\n        return null;\n    }\n\n    const defaultStyle = {\n        transition: `opacity ${fadeDurationInMs}ms ease-in`,\n        backgroundImage: `url(${dataUri})`,\n    };\n\n    const width = cursorOffsetX * 2;\n    const height = cursorOffsetY * 2;\n    const isVisible = isActive && !isPositionOutside;\n    const top = positionY - cursorOffsetY;\n    const left = positionX - cursorOffsetX;\n    const maxTop = typedRef.current.offsetHeight - height;\n    const maxLeft = typedRef.current.offsetWidth - width;\n    const minOffset = 0;\n\n    const priorityStyle = {\n        position: 'absolute',\n        top: `${clamp(top, minOffset, maxTop)}px`,\n        left: `${clamp(left, minOffset, maxLeft)}px`,\n        width: `${width}px`,\n        height: `${height}px`,\n        opacity: isVisible ? 1 : 0,\n    } as LensProps['style'];\n\n    return (\n        <div\n            style={{\n                ...defaultStyle,\n                ...userSpecifiedStyle,\n                ...priorityStyle,\n            }}\n            {...rest}\n        />\n    );\n});\n\nPositiveSpaceLens.displayName = 'PositiveSpaceLens';\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}