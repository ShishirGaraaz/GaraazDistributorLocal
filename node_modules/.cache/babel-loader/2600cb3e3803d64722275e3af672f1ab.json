{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Work\\\\garaaz-distributor\\\\src\\\\containers\\\\Accounting\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState, useRef, useEffect } from 'react';\nimport DynamicTable from '../../components/DynamicTable';\nimport { useIntl } from 'react-intl';\nimport { Box, Button, Link, Tabs, TabList, Tab, TabPanels, TabPanel, Badge } from '@chakra-ui/react';\nimport ModifiedTableTop from '../../components/TableTop/ModifiedTableTop';\nimport readXlsxFile from 'read-excel-file';\nimport { getQueuedFiles, getAllAccounts, selectAccounts } from './slice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport { useRouteMatch, Switch, Route, Link as ReactLink, useHistory } from 'react-router-dom';\nimport WorkshopAcct from './WorkShopAccount';\nimport withToast from '../../HOCs/withToast';\nimport messages from './messages';\nimport getMoneyFormat from '../../utils/getMoneyFormat';\nimport AccountBulk from '../../components/AccountBulk/Loadable';\nimport enums from '../../utils/enums';\nimport SimpleModal from '../../components/Modal';\nimport { selectGlobalState } from '../../globalSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Accounts = _ref => {\n  _s();\n\n  let {\n    notification\n  } = _ref;\n  const [inputValues, setInputValue] = useState({\n    end: moment().add(1, 'days').format('YYYY-MM-DD'),\n    start: moment().startOf('month').format('YYYY-MM-DD')\n  });\n  const intl = useIntl();\n  const [isLoading, setIsLoading] = useState(false);\n  const auth = useSelector(state => state.auth);\n  const {\n    allAccounts,\n    queuedFile\n  } = useSelector(selectAccounts);\n  const dispatcher = useDispatch();\n  const {\n    url,\n    path\n  } = useRouteMatch();\n  const [tableLoading, setTableLoading] = useState(false);\n  const [tableData, setTableData] = useState([]);\n  const [fileQueueLoading, setFileQueueLoading] = useState(false);\n  const [openCommentModal, setOpenCommentModal] = useState({\n    isOpen: false,\n    comment: ''\n  });\n  const {\n    isDistributor\n  } = useSelector(selectGlobalState);\n  const history = useHistory();\n  useEffect(() => {\n    (async () => {\n      setTableLoading(true);\n      await dispatcher(getAllAccounts({\n        auth,\n        params: {}\n      }));\n      setTableLoading(false);\n      setFileQueueLoading(true);\n      dispatcher(getQueuedFiles({\n        auth\n      }));\n      setFileQueueLoading(false);\n    })();\n  }, []);\n  useEffect(() => {\n    setTableData(allAccounts);\n  }, [allAccounts]);\n  const inputData = useMemo(() => [{\n    title: intl.formatMessage(messages.accountDetailSearch),\n    type: 'text',\n    placeholder: '',\n    name: 'searchAccount'\n  }, {\n    title: intl.formatMessage(messages.groupBy),\n    type: 'select',\n    placeholder: 'Select option',\n    name: 'groupBy',\n    options: [{\n      value: 'none',\n      label: 'None'\n    }, {\n      value: 'branch',\n      label: intl.formatMessage(messages.branch)\n    }, {\n      value: 'salesRep',\n      label: intl.formatMessage(messages.salesRep)\n    }, {\n      value: 'workshopType',\n      label: intl.formatMessage(messages.workshopType)\n    }]\n  }, {\n    title: intl.formatMessage(messages.date),\n    type: 'date',\n    placeholder: 'Enter order No',\n    name: ['start', 'end'],\n    defaultValue: [moment().startOf('month').format('YYYY-MM-DD'), moment().format('YYYY-MM-DD')]\n  }], []);\n  const queueFileColumn = useMemo(() => [{\n    Header: intl.formatMessage(messages.sNo),\n    accessor: 'sno',\n    Cell: allData => {\n      var _allData$row;\n\n      return /*#__PURE__*/_jsxDEV(Box, {\n        children: (allData === null || allData === void 0 ? void 0 : (_allData$row = allData.row) === null || _allData$row === void 0 ? void 0 : _allData$row.index) + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 18\n      }, this);\n    }\n  }, {\n    Header: intl.formatMessage(messages.mediaId),\n    accessor: 'media',\n    Cell: _ref2 => {\n      let {\n        value\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(Link, {\n        href: value === null || value === void 0 ? void 0 : value.path,\n        target: \"_blank\",\n        children: \"Download File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this);\n    }\n  }, {\n    Header: intl.formatMessage(messages.dateAndTime),\n    accessor: 'createdAt',\n    Cell: _ref3 => {\n      let {\n        value\n      } = _ref3;\n      return moment(value).format('DD/MM/YYYY h:mm:ss a');\n    }\n  }, {\n    Header: intl.formatMessage(messages.status),\n    accessor: 'status',\n    Cell: _ref4 => {\n      let {\n        value\n      } = _ref4;\n      return value === enums.PENDING ? /*#__PURE__*/_jsxDEV(Badge, {\n        colorScheme: \"yellow\",\n        children: intl.formatMessage(messages.pendingStatus)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }, this) : value === enums.COMPLETED ? /*#__PURE__*/_jsxDEV(Badge, {\n        colorScheme: \"green\",\n        children: intl.formatMessage(messages.completedStatus)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Badge, {\n        colorScheme: \"orange\",\n        children: value.replace(/_/g, ' ')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }, this);\n    }\n  }, {\n    Header: 'comments',\n    accessor: 'comments',\n    Cell: _ref5 => {\n      let {\n        value\n      } = _ref5;\n      return /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setOpenCommentModal({\n          isOpen: true,\n          comment: value !== null && value !== void 0 ? value : 'No Comment'\n        }),\n        variant: \"ghost\",\n        children: \"View Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this);\n    }\n  }], []);\n  const columns = useMemo(() => [{\n    Header: intl.formatMessage(messages.sNo),\n    accessor: 'sno',\n    Cell: allData => {\n      var _allData$row2;\n\n      return /*#__PURE__*/_jsxDEV(Box, {\n        children: (allData === null || allData === void 0 ? void 0 : (_allData$row2 = allData.row) === null || _allData$row2 === void 0 ? void 0 : _allData$row2.index) + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 18\n      }, this);\n    }\n  }, {\n    Header: intl.formatMessage(messages.workshopName),\n    accessor: 'workshopName',\n    Cell: allData => {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        as: ReactLink,\n        to: `${url}/${allData.row.original.workshopId}/acounts`,\n        children: allData.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }, this);\n    }\n  }, {\n    Header: 'Workshop Code',\n    accessor: 'code'\n  }, {\n    Header: intl.formatMessage(messages.workshopType),\n    accessor: 'workshopType'\n  }, {\n    Header: intl.formatMessage(messages.branch),\n    accessor: 'branch'\n  }, {\n    Header: intl.formatMessage(messages.salesRep),\n    accessor: 'salesRep'\n  }, {\n    Header: intl.formatMessage(messages.totalDebit),\n    accessor: 'debit',\n    Cell: _ref6 => {\n      let {\n        value\n      } = _ref6;\n      return getMoneyFormat(value);\n    }\n  }, {\n    Header: intl.formatMessage(messages.totalCredit),\n    accessor: 'credit',\n    Cell: _ref7 => {\n      let {\n        value\n      } = _ref7;\n      return getMoneyFormat(value);\n    }\n  }], []);\n  const groupedByBranchColumn = useMemo(() => [{\n    Header: intl.formatMessage(messages.sNo),\n    accessor: 'sno',\n    Cell: allData => {\n      var _allData$row3;\n\n      return /*#__PURE__*/_jsxDEV(Box, {\n        children: (allData === null || allData === void 0 ? void 0 : (_allData$row3 = allData.row) === null || _allData$row3 === void 0 ? void 0 : _allData$row3.index) + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 18\n      }, this);\n    }\n  }, {\n    Header: intl.formatMessage(messages.branchName),\n    accessor: 'branchName'\n  }, {\n    Header: intl.formatMessage(messages.totalCustomer),\n    accessor: 'customers',\n    Cell: _ref8 => {\n      let {\n        value\n      } = _ref8;\n      return /*#__PURE__*/_jsxDEV(Box, {\n        children: value === null || value === void 0 ? void 0 : value.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 18\n      }, this);\n    }\n  }, {\n    Header: intl.formatMessage(messages.totalDebit),\n    accessor: 'debit',\n    Cell: _ref9 => {\n      let {\n        value\n      } = _ref9;\n      return getMoneyFormat(value);\n    }\n  }, {\n    Header: intl.formatMessage(messages.totalCredit),\n    accessor: 'credit',\n    Cell: _ref10 => {\n      let {\n        value\n      } = _ref10;\n      return getMoneyFormat(value);\n    }\n  }], []);\n  const groupedBySalesColumn = useMemo(() => [{\n    Header: intl.formatMessage(messages.sNo),\n    accessor: 'sno',\n    Cell: allData => {\n      var _allData$row4;\n\n      return /*#__PURE__*/_jsxDEV(Box, {\n        children: (allData === null || allData === void 0 ? void 0 : (_allData$row4 = allData.row) === null || _allData$row4 === void 0 ? void 0 : _allData$row4.index) + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 18\n      }, this);\n    }\n  }, {\n    Header: intl.formatMessage(messages.salesRep),\n    accessor: 'salesRep'\n  }, {\n    Header: intl.formatMessage(messages.totalCustomer),\n    accessor: 'customers',\n    Cell: _ref11 => {\n      let {\n        value\n      } = _ref11;\n      return /*#__PURE__*/_jsxDEV(Box, {\n        children: value === null || value === void 0 ? void 0 : value.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 18\n      }, this);\n    }\n  }, {\n    Header: intl.formatMessage(messages.totalDebit),\n    accessor: 'debit',\n    Cell: _ref12 => {\n      let {\n        value\n      } = _ref12;\n      return getMoneyFormat(value);\n    }\n  }, {\n    Header: intl.formatMessage(messages.totalCredit),\n    accessor: 'credit',\n    Cell: _ref13 => {\n      let {\n        value\n      } = _ref13;\n      return getMoneyFormat(value);\n    }\n  }], []);\n  const groupedByCustomerColumn = useMemo(() => [{\n    Header: intl.formatMessage(messages.sNo),\n    accessor: 'sno',\n    Cell: allData => {\n      var _allData$row5;\n\n      return /*#__PURE__*/_jsxDEV(Box, {\n        children: (allData === null || allData === void 0 ? void 0 : (_allData$row5 = allData.row) === null || _allData$row5 === void 0 ? void 0 : _allData$row5.index) + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 18\n      }, this);\n    }\n  }, {\n    Header: intl.formatMessage(messages.workshopType),\n    accessor: 'workshopType'\n  }, {\n    Header: intl.formatMessage(messages.totalCustomer),\n    accessor: 'customers',\n    Cell: _ref14 => {\n      let {\n        value\n      } = _ref14;\n      return /*#__PURE__*/_jsxDEV(Box, {\n        children: value === null || value === void 0 ? void 0 : value.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 18\n      }, this);\n    }\n  }, {\n    Header: intl.formatMessage(messages.totalDebit),\n    accessor: 'debit',\n    Cell: _ref15 => {\n      let {\n        value\n      } = _ref15;\n      return getMoneyFormat(value);\n    }\n  }, {\n    Header: intl.formatMessage(messages.totalCredit),\n    accessor: 'credit',\n    Cell: _ref16 => {\n      let {\n        value\n      } = _ref16;\n      return getMoneyFormat(value);\n    }\n  }], []);\n\n  const handleTableTopChange = async (e, name) => {\n    setTableLoading(true);\n    let value = e.hasOwnProperty('target') ? `${e.target.value}`.trim() : `${e.value}`.trim();\n\n    if (name === 'searchAccount') {\n      setTableData([...allAccounts].filter(account => {\n        return `${account.code}`.toLowerCase().indexOf(value.toLowerCase()) !== -1 || `${account.workshopName}`.toLowerCase().indexOf(value.toLowerCase()) !== -1 || `${account.branchName}`.toLowerCase().indexOf(value.toLowerCase()) !== -1 || `${account.workshopType}`.toLowerCase().indexOf(value.toLowerCase()) !== -1 || `${account.salesRep}`.toLowerCase().indexOf(value.toLowerCase()) !== -1 || `${account.branch}`.toLowerCase().indexOf(value.toLowerCase()) !== -1;\n      }));\n      setTableLoading(false);\n      return;\n    }\n\n    if (name === 'start') {\n      value = moment(value).format('YYYY-MM-DD');\n    } else if (name === 'end') {\n      value = moment(value).add(1, 'days').format('YYYY-MM-DD');\n    }\n\n    setInputValue(prevState => ({ ...prevState,\n      [name]: typeof value !== 'object' && value !== 'none' ? value : value === 'none' ? '' : value.value\n    }));\n\n    try {\n      await dispatcher(getAllAccounts({\n        auth,\n        params: { ...inputValues,\n          [name]: typeof value !== 'object' && value !== 'none' ? value : value === 'none' ? '' : value.value\n        }\n      }));\n      setTableLoading(false);\n    } catch (error) {\n      setTableLoading(false);\n    }\n  };\n\n  const activeColumn = useMemo(() => {\n    return (inputValues === null || inputValues === void 0 ? void 0 : inputValues.groupBy) === 'branch' ? groupedByBranchColumn : (inputValues === null || inputValues === void 0 ? void 0 : inputValues.groupBy) === 'salesRep' ? groupedBySalesColumn : (inputValues === null || inputValues === void 0 ? void 0 : inputValues.groupBy) === 'workshopType' ? groupedByCustomerColumn : columns;\n  }, [inputValues === null || inputValues === void 0 ? void 0 : inputValues.groupBy]);\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: path,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"right\",\n        mb: \"5px\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          isLoading: isLoading,\n          variant: \"normal\",\n          onClick: () => history.push(`${url}/add-bulk-account`),\n          children: \"+ Upload Accounts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        isLoading: isLoading,\n        variant: \"normal\",\n        onClick: () => history.push(`${url}/add-bulk-account`),\n        children: \"+ Upload Accounts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 7\n      }, this), isDistributor && /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        mt: \"-65px\",\n        mb: 6,\n        width: \"100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n        children: [/*#__PURE__*/_jsxDEV(TabList, {\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            children: \"Accounts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            children: \"Uploaded Files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabPanels, {\n          children: [/*#__PURE__*/_jsxDEV(TabPanel, {\n            children: [/*#__PURE__*/_jsxDEV(ModifiedTableTop, {\n              inputData: inputData,\n              onChange: handleTableTopChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DynamicTable, {\n              columns: activeColumn,\n              data: tableData,\n              fetchData: () => console.log('...fetching'),\n              skipPageReset: true,\n              loading: tableLoading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n            children: /*#__PURE__*/_jsxDEV(DynamicTable, {\n              columns: queueFileColumn,\n              data: queuedFile,\n              fetchData: () => console.log('...fetching'),\n              skipPageReset: true,\n              loading: fileQueueLoading,\n              hidePagination: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SimpleModal, {\n        onClose: () => setOpenCommentModal({\n          isOpen: false,\n          comment: ''\n        }),\n        isOpen: openCommentModal.isOpen,\n        title: \"Comments on Uploaded file\",\n        hidefooter: true,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          children: openCommentModal.comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${path}/:id/acounts`,\n      children: /*#__PURE__*/_jsxDEV(WorkshopAcct, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${path}/add-bulk-account`,\n      children: /*#__PURE__*/_jsxDEV(AccountBulk, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 416,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Accounts, \"D+3YIVpEVrKDa2REtsCTWo50bX4=\", false, function () {\n  return [useIntl, useSelector, useSelector, useDispatch, useRouteMatch, useSelector, useHistory];\n});\n\n_c = Accounts;\nexport default _c2 = withToast(Accounts);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Accounts\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/containers/Accounting/index.js"],"names":["React","useMemo","useState","useRef","useEffect","DynamicTable","useIntl","Box","Button","Link","Tabs","TabList","Tab","TabPanels","TabPanel","Badge","ModifiedTableTop","readXlsxFile","getQueuedFiles","getAllAccounts","selectAccounts","useSelector","useDispatch","moment","useRouteMatch","Switch","Route","ReactLink","useHistory","WorkshopAcct","withToast","messages","getMoneyFormat","AccountBulk","enums","SimpleModal","selectGlobalState","Accounts","notification","inputValues","setInputValue","end","add","format","start","startOf","intl","isLoading","setIsLoading","auth","state","allAccounts","queuedFile","dispatcher","url","path","tableLoading","setTableLoading","tableData","setTableData","fileQueueLoading","setFileQueueLoading","openCommentModal","setOpenCommentModal","isOpen","comment","isDistributor","history","params","inputData","title","formatMessage","accountDetailSearch","type","placeholder","name","groupBy","options","value","label","branch","salesRep","workshopType","date","defaultValue","queueFileColumn","Header","sNo","accessor","Cell","allData","row","index","mediaId","dateAndTime","status","PENDING","pendingStatus","COMPLETED","completedStatus","replace","columns","workshopName","original","workshopId","totalDebit","totalCredit","groupedByBranchColumn","branchName","totalCustomer","length","groupedBySalesColumn","groupedByCustomerColumn","handleTableTopChange","e","hasOwnProperty","target","trim","filter","account","code","toLowerCase","indexOf","prevState","error","activeColumn","push","console","log"],"mappings":"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","sourcesContent":["import React, { useMemo, useState, useRef, useEffect } from 'react';\r\nimport DynamicTable from '../../components/DynamicTable';\r\nimport { useIntl } from 'react-intl';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Link,\r\n  Tabs,\r\n  TabList,\r\n  Tab,\r\n  TabPanels,\r\n  TabPanel,\r\n  Badge,\r\n} from '@chakra-ui/react';\r\nimport ModifiedTableTop from '../../components/TableTop/ModifiedTableTop';\r\nimport readXlsxFile from 'read-excel-file';\r\nimport { getQueuedFiles, getAllAccounts, selectAccounts } from './slice';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport moment from 'moment';\r\nimport {\r\n  useRouteMatch,\r\n  Switch,\r\n  Route,\r\n  Link as ReactLink,\r\n  useHistory,\r\n} from 'react-router-dom';\r\nimport WorkshopAcct from './WorkShopAccount';\r\nimport withToast from '../../HOCs/withToast';\r\nimport messages from './messages';\r\nimport getMoneyFormat from '../../utils/getMoneyFormat';\r\nimport AccountBulk from '../../components/AccountBulk/Loadable';\r\nimport enums from '../../utils/enums';\r\nimport SimpleModal from '../../components/Modal';\r\nimport { selectGlobalState } from '../../globalSlice';\r\n\r\nconst Accounts = ({ notification }) => {\r\n  const [inputValues, setInputValue] = useState({\r\n    end: moment().add(1, 'days').format('YYYY-MM-DD'),\r\n    start: moment().startOf('month').format('YYYY-MM-DD'),\r\n  });\r\n  const intl = useIntl();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const auth = useSelector((state) => state.auth);\r\n  const { allAccounts, queuedFile } = useSelector(selectAccounts);\r\n  const dispatcher = useDispatch();\r\n  const { url, path } = useRouteMatch();\r\n  const [tableLoading, setTableLoading] = useState(false);\r\n  const [tableData, setTableData] = useState([]);\r\n  const [fileQueueLoading, setFileQueueLoading] = useState(false);\r\n  const [openCommentModal, setOpenCommentModal] = useState({\r\n    isOpen: false,\r\n    comment: '',\r\n  });\r\n  const { isDistributor } = useSelector(selectGlobalState);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setTableLoading(true);\r\n      await dispatcher(getAllAccounts({ auth, params: {} }));\r\n      setTableLoading(false);\r\n      setFileQueueLoading(true);\r\n      dispatcher(getQueuedFiles({ auth }));\r\n      setFileQueueLoading(false);\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setTableData(allAccounts);\r\n  }, [allAccounts]);\r\n\r\n  const inputData = useMemo(\r\n    () => [\r\n      {\r\n        title: intl.formatMessage(messages.accountDetailSearch),\r\n        type: 'text',\r\n        placeholder: '',\r\n        name: 'searchAccount',\r\n      },\r\n      {\r\n        title: intl.formatMessage(messages.groupBy),\r\n        type: 'select',\r\n        placeholder: 'Select option',\r\n        name: 'groupBy',\r\n        options: [\r\n          {\r\n            value: 'none',\r\n            label: 'None',\r\n          },\r\n          {\r\n            value: 'branch',\r\n            label: intl.formatMessage(messages.branch),\r\n          },\r\n          {\r\n            value: 'salesRep',\r\n            label: intl.formatMessage(messages.salesRep),\r\n          },\r\n          {\r\n            value: 'workshopType',\r\n            label: intl.formatMessage(messages.workshopType),\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        title: intl.formatMessage(messages.date),\r\n        type: 'date',\r\n        placeholder: 'Enter order No',\r\n        name: ['start', 'end'],\r\n        defaultValue: [\r\n          moment().startOf('month').format('YYYY-MM-DD'),\r\n          moment().format('YYYY-MM-DD'),\r\n        ],\r\n      },\r\n    ],\r\n    [],\r\n  );\r\n\r\n  const queueFileColumn = useMemo(\r\n    () => [\r\n      {\r\n        Header: intl.formatMessage(messages.sNo),\r\n        accessor: 'sno',\r\n        Cell: (allData) => {\r\n          return <Box>{allData?.row?.index + 1}</Box>;\r\n        },\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.mediaId),\r\n        accessor: 'media',\r\n        Cell: ({ value }) => {\r\n          return (\r\n            <Link href={value?.path} target='_blank'>\r\n              Download File\r\n            </Link>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.dateAndTime),\r\n        accessor: 'createdAt',\r\n        Cell: ({ value }) => moment(value).format('DD/MM/YYYY h:mm:ss a'),\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.status),\r\n        accessor: 'status',\r\n        Cell: ({ value }) => {\r\n          return value === enums.PENDING ? (\r\n            <Badge colorScheme='yellow'>\r\n              {intl.formatMessage(messages.pendingStatus)}\r\n            </Badge>\r\n          ) : value === enums.COMPLETED ? (\r\n            <Badge colorScheme='green'>\r\n              {intl.formatMessage(messages.completedStatus)}\r\n            </Badge>\r\n          ) : (\r\n            <Badge colorScheme='orange'>{value.replace(/_/g, ' ')}</Badge>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        Header: 'comments',\r\n        accessor: 'comments',\r\n        Cell: ({ value }) => (\r\n          <Button\r\n            onClick={() =>\r\n              setOpenCommentModal({\r\n                isOpen: true,\r\n                comment: value ?? 'No Comment',\r\n              })\r\n            }\r\n            variant='ghost'\r\n          >\r\n            View Comment\r\n          </Button>\r\n        ),\r\n      },\r\n    ],\r\n    [],\r\n  );\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: intl.formatMessage(messages.sNo),\r\n        accessor: 'sno',\r\n        Cell: (allData) => {\r\n          return <Box>{allData?.row?.index + 1}</Box>;\r\n        },\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.workshopName),\r\n        accessor: 'workshopName',\r\n        Cell: (allData) => {\r\n          return (\r\n            <Link\r\n              as={ReactLink}\r\n              to={`${url}/${allData.row.original.workshopId}/acounts`}\r\n            >\r\n              {allData.value}\r\n            </Link>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        Header: 'Workshop Code',\r\n        accessor: 'code',\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.workshopType),\r\n        accessor: 'workshopType',\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.branch),\r\n        accessor: 'branch',\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.salesRep),\r\n        accessor: 'salesRep',\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.totalDebit),\r\n        accessor: 'debit',\r\n        Cell: ({ value }) => getMoneyFormat(value),\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.totalCredit),\r\n        accessor: 'credit',\r\n        Cell: ({ value }) => getMoneyFormat(value),\r\n      },\r\n    ],\r\n    [],\r\n  );\r\n\r\n  const groupedByBranchColumn = useMemo(\r\n    () => [\r\n      {\r\n        Header: intl.formatMessage(messages.sNo),\r\n        accessor: 'sno',\r\n        Cell: (allData) => {\r\n          return <Box>{allData?.row?.index + 1}</Box>;\r\n        },\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.branchName),\r\n        accessor: 'branchName',\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.totalCustomer),\r\n        accessor: 'customers',\r\n        Cell: ({ value }) => {\r\n          return <Box>{value?.length}</Box>;\r\n        },\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.totalDebit),\r\n        accessor: 'debit',\r\n        Cell: ({ value }) => getMoneyFormat(value),\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.totalCredit),\r\n        accessor: 'credit',\r\n        Cell: ({ value }) => getMoneyFormat(value),\r\n      },\r\n    ],\r\n    [],\r\n  );\r\n\r\n  const groupedBySalesColumn = useMemo(\r\n    () => [\r\n      {\r\n        Header: intl.formatMessage(messages.sNo),\r\n        accessor: 'sno',\r\n        Cell: (allData) => {\r\n          return <Box>{allData?.row?.index + 1}</Box>;\r\n        },\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.salesRep),\r\n        accessor: 'salesRep',\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.totalCustomer),\r\n        accessor: 'customers',\r\n        Cell: ({ value }) => {\r\n          return <Box>{value?.length}</Box>;\r\n        },\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.totalDebit),\r\n        accessor: 'debit',\r\n        Cell: ({ value }) => getMoneyFormat(value),\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.totalCredit),\r\n        accessor: 'credit',\r\n        Cell: ({ value }) => getMoneyFormat(value),\r\n      },\r\n    ],\r\n    [],\r\n  );\r\n  const groupedByCustomerColumn = useMemo(\r\n    () => [\r\n      {\r\n        Header: intl.formatMessage(messages.sNo),\r\n        accessor: 'sno',\r\n        Cell: (allData) => {\r\n          return <Box>{allData?.row?.index + 1}</Box>;\r\n        },\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.workshopType),\r\n        accessor: 'workshopType',\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.totalCustomer),\r\n        accessor: 'customers',\r\n        Cell: ({ value }) => {\r\n          return <Box>{value?.length}</Box>;\r\n        },\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.totalDebit),\r\n        accessor: 'debit',\r\n        Cell: ({ value }) => getMoneyFormat(value),\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.totalCredit),\r\n        accessor: 'credit',\r\n        Cell: ({ value }) => getMoneyFormat(value),\r\n      },\r\n    ],\r\n    [],\r\n  );\r\n\r\n  const handleTableTopChange = async (e, name) => {\r\n    setTableLoading(true);\r\n    let value = e.hasOwnProperty('target')\r\n      ? `${e.target.value}`.trim()\r\n      : `${e.value}`.trim();\r\n\r\n    if (name === 'searchAccount') {\r\n      setTableData(\r\n        [...allAccounts].filter((account) => {\r\n          return (\r\n            `${account.code}`.toLowerCase().indexOf(value.toLowerCase()) !==\r\n              -1 ||\r\n            `${account.workshopName}`\r\n              .toLowerCase()\r\n              .indexOf(value.toLowerCase()) !== -1 ||\r\n            `${account.branchName}`\r\n              .toLowerCase()\r\n              .indexOf(value.toLowerCase()) !== -1 ||\r\n            `${account.workshopType}`\r\n              .toLowerCase()\r\n              .indexOf(value.toLowerCase()) !== -1 ||\r\n            `${account.salesRep}`.toLowerCase().indexOf(value.toLowerCase()) !==\r\n              -1 ||\r\n            `${account.branch}`.toLowerCase().indexOf(value.toLowerCase()) !==\r\n              -1\r\n          );\r\n        }),\r\n      );\r\n\r\n      setTableLoading(false);\r\n      return;\r\n    }\r\n\r\n    if (name === 'start') {\r\n      value = moment(value).format('YYYY-MM-DD');\r\n    } else if (name === 'end') {\r\n      value = moment(value).add(1, 'days').format('YYYY-MM-DD');\r\n    }\r\n\r\n    setInputValue((prevState) => ({\r\n      ...prevState,\r\n      [name]:\r\n        typeof value !== 'object' && value !== 'none'\r\n          ? value\r\n          : value === 'none'\r\n          ? ''\r\n          : value.value,\r\n    }));\r\n\r\n    try {\r\n      await dispatcher(\r\n        getAllAccounts({\r\n          auth,\r\n          params: {\r\n            ...inputValues,\r\n            [name]:\r\n              typeof value !== 'object' && value !== 'none'\r\n                ? value\r\n                : value === 'none'\r\n                ? ''\r\n                : value.value,\r\n          },\r\n        }),\r\n      );\r\n\r\n      setTableLoading(false);\r\n    } catch (error) {\r\n      setTableLoading(false);\r\n    }\r\n  };\r\n\r\n  const activeColumn = useMemo(() => {\r\n    return inputValues?.groupBy === 'branch'\r\n      ? groupedByBranchColumn\r\n      : inputValues?.groupBy === 'salesRep'\r\n      ? groupedBySalesColumn\r\n      : inputValues?.groupBy === 'workshopType'\r\n      ? groupedByCustomerColumn\r\n      : columns;\r\n  }, [inputValues?.groupBy]);\r\n\r\n  return (\r\n    <Switch>\r\n      <Route exact path={path}>\r\n        <Box\r\n        display='flex'\r\n        justifyContent='right'\r\n        mb='5px'\r\n        >\r\n        <Button\r\n              isLoading={isLoading}\r\n              variant='normal'\r\n              onClick={() => history.push(`${url}/add-bulk-account`)}\r\n            >\r\n              + Upload Accounts\r\n            </Button>\r\n            </Box> \r\n      <Button\r\n              isLoading={isLoading}\r\n              variant='normal'\r\n              onClick={() => history.push(`${url}/add-bulk-account`)}\r\n            >\r\n              + Upload Accounts\r\n            </Button>\r\n        {isDistributor && (\r\n          <Box display='flex' justifyContent='flex-end' mt='-65px' mb={6} width='100%'>\r\n            \r\n          </Box>\r\n        )}\r\n\r\n        <Tabs>\r\n          <TabList>\r\n            <Tab>Accounts</Tab>\r\n            <Tab>Uploaded Files</Tab>\r\n          </TabList>\r\n\r\n          <TabPanels>\r\n            <TabPanel>\r\n              <ModifiedTableTop\r\n                inputData={inputData}\r\n                onChange={handleTableTopChange}\r\n              />\r\n\r\n              <DynamicTable\r\n                columns={activeColumn}\r\n                data={tableData}\r\n                fetchData={() => console.log('...fetching')}\r\n                skipPageReset={true}\r\n                loading={tableLoading}\r\n              />\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <DynamicTable\r\n                columns={queueFileColumn}\r\n                data={queuedFile}\r\n                fetchData={() => console.log('...fetching')}\r\n                skipPageReset={true}\r\n                loading={fileQueueLoading}\r\n                hidePagination\r\n              />\r\n            </TabPanel>\r\n          </TabPanels>\r\n        </Tabs>\r\n        <SimpleModal\r\n          onClose={() => setOpenCommentModal({ isOpen: false, comment: '' })}\r\n          isOpen={openCommentModal.isOpen}\r\n          title='Comments on Uploaded file'\r\n          hidefooter\r\n        >\r\n          <Box>{openCommentModal.comment}</Box>\r\n        </SimpleModal>\r\n      </Route>\r\n      <Route exact path={`${path}/:id/acounts`}>\r\n        <WorkshopAcct />\r\n      </Route>\r\n      <Route exact path={`${path}/add-bulk-account`}>\r\n        <AccountBulk />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default withToast(Accounts);\r\n"]},"metadata":{},"sourceType":"module"}