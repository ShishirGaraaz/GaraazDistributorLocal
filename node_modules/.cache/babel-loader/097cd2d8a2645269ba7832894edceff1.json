{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Work\\\\garaaz-distributor\\\\src\\\\components\\\\LoginForm\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Button, Input, InputGroup, InputLeftElement } from '@chakra-ui/react';\nimport { PhoneIcon, LockIcon } from '@chakra-ui/icons';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport toast from 'react-hot-toast';\nimport { useDispatch, useSelector } from 'react-redux';\nimport get from 'lodash/get';\nimport messages from './messages';\nimport { attemptLogin } from '../../containers/LoginPage/actions';\nimport { useVisit } from '../../contexts/VisitContext';\nimport { publicAxios as axios } from '../../axios';\nimport { isUndefined } from 'lodash';\nimport LoginDetails from './login';\nimport OTP from './otp';\nimport { UseOnboardContext } from '../../App';\nimport { selectGlobalState, setIsDistributor } from '../../globalSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = _ref => {\n  _s();\n\n  let {\n    color = 'dark',\n    isFull = true\n  } = _ref;\n  const {\n    updateOnboard\n  } = UseOnboardContext();\n  const [otpAttempts, setOtpAttempts] = useState(0);\n  const [mobileNumber, setMobileNumber] = useState('');\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const visitId = useVisit();\n  const {\n    register,\n    formState: {\n      errors\n    },\n    handleSubmit,\n    reset: resetMobile,\n    setValue: setMobile\n  } = useForm({\n    mode: 'onSubmit'\n  });\n  const {\n    register: registerOtp,\n    formState: {\n      errors: errorsOtp\n    },\n    handleSubmit: handleSubmitOtp,\n    setValue: setOtp,\n    reset: resetOtp\n  } = useForm({\n    mode: 'onSubmit'\n  });\n\n  const handleOnSubmit = async data => {\n    setMobileNumber(data.phoneNumber);\n\n    if (otpAttempts < 3) {\n      try {\n        const {\n          data: Data\n        } = await axios.get(`/otp/?visitId=${visitId}&mobileNumber=91${data.phoneNumber}`);\n        setOtpAttempts(otpAttempts + 1);\n        resetMobile({}, {\n          keepDirty: false,\n          keepErrors: false,\n          keepValues: false\n        });\n        toast(Data.message);\n      } catch (err) {\n        toast( /*#__PURE__*/_jsxDEV(FormattedMessage, { ...messages.somethingWentWrong\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this));\n      }\n    } else {\n      toast( /*#__PURE__*/_jsxDEV(FormattedMessage, { ...messages.exhaustedOtpLimits\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this));\n    }\n  };\n\n  const handleOnSubmitOtp = async otp => {\n    setOtp('otp', otp);\n\n    try {\n      var _response$data, _response$data$user, _response$data2, _response$data2$user, _response$data3;\n\n      const response = await axios.get(`/otp/verify?mobileNumber=91${mobileNumber}&otp=${otp}`);\n      const isDistributor = ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$user = _response$data.user) === null || _response$data$user === void 0 ? void 0 : _response$data$user.role) === 'DISTRIBUTOR';\n      localStorage.isDistributor = ((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : (_response$data2$user = _response$data2.user) === null || _response$data2$user === void 0 ? void 0 : _response$data2$user.role) === 'DISTRIBUTOR';\n      dispatch(setIsDistributor(isDistributor));\n\n      if (response !== null && response !== void 0 && (_response$data3 = response.data) !== null && _response$data3 !== void 0 && _response$data3.invite) {\n        const tokenString = JSON.stringify(response === null || response === void 0 ? void 0 : response.data.invite);\n        const encodedToken = window.btoa(unescape(encodeURIComponent(tokenString)));\n        history.push(`/invite?token=${encodedToken}`);\n      } else {\n        var _response$data4;\n\n        dispatch(attemptLogin(get(response, 'data', {})));\n\n        if (response !== null && response !== void 0 && (_response$data4 = response.data) !== null && _response$data4 !== void 0 && _response$data4.newUser && isDistributor) {\n          localStorage.onboard = 1;\n          updateOnboard(1);\n          history.replace('/distributor');\n        } else if (isUndefined(response.data.user.firstName) && isDistributor) {\n          history.replace('/onboarding');\n        } else {\n          if (localStorage.onboard) {\n            localStorage.removeItem('onboard');\n            updateOnboard('');\n          }\n\n          history.replace('/dashboard');\n        }\n      }\n    } catch (err) {\n      toast( /*#__PURE__*/_jsxDEV(FormattedMessage, { ...messages.enterCorrectOtp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this));\n    }\n  };\n\n  const onNumberChange = mobileNumber => {\n    setOtpAttempts(0);\n    setMobile('phoneNumber', mobileNumber);\n    resetOtp({}, {\n      keepDirty: false,\n      keepErrors: false,\n      keepValues: false\n    });\n  };\n\n  const onResend = () => {\n    handleOnSubmit({\n      phoneNumber: mobileNumber\n    });\n    resetOtp({}, {\n      keepDirty: false,\n      keepErrors: false,\n      keepValues: false\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `transition-all bg-blueGray-300 duration-700 ease-in-out h-full top-0 absolute left-0 z-2 transform ${isFull ? 'w-full' : 'w-1/2'}`,\n    style: {\n      width: '100%'\n    },\n    children: [otpAttempts > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"ml-4 pt-2 inline-block cursor-pointer hover:color-black color-dark\",\n      style: {\n        position: 'absolute'\n      },\n      role: \"button\",\n      tabIndex: \"0\",\n      onClick: () => {\n        setOtpAttempts(0);\n        setMobileNumber(''); // resetMobile(\n        //   {},\n        //   {\n        //     keepDirty: false,\n        //     keepErrors: false,\n        //     keepValues: false,\n        //   },\n        // );\n\n        resetOtp({}, {\n          keepDirty: false,\n          keepErrors: false,\n          keepValues: false\n        });\n      },\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-arrow-left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this), otpAttempts === 0 && /*#__PURE__*/_jsxDEV(LoginDetails, {\n      register: register,\n      setMobile: setMobile,\n      errors: errors,\n      color: color,\n      submit: handleSubmit,\n      OnSubmit: handleOnSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }, this), otpAttempts > 0 && /*#__PURE__*/_jsxDEV(OTP, {\n      color: color,\n      register: register,\n      mobileNumber: mobileNumber,\n      set: setOtp,\n      errors: errorsOtp,\n      onChange: onNumberChange,\n      submit: handleSubmitOtp,\n      OnSubmit: handleOnSubmitOtp,\n      onResend: onResend\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginForm, \"zgUA4pL1cc1Wtjxb+riI9SRJ3xk=\", false, function () {\n  return [useDispatch, useHistory, useVisit, useForm, useForm];\n});\n\n_c = LoginForm;\nLoginForm.propTypes = {\n  // color for the detailsPanel\n  color: PropTypes.oneOf(['light', 'dark', 'blueGray', 'red', 'orange', 'amber', 'emerald', 'teal', 'lightBlue', 'indigo', 'purple', 'pink']),\n  isFull: PropTypes.bool\n};\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/components/LoginForm/index.js"],"names":["React","useState","useForm","Button","Input","InputGroup","InputLeftElement","PhoneIcon","LockIcon","useHistory","PropTypes","FormattedMessage","useIntl","toast","useDispatch","useSelector","get","messages","attemptLogin","useVisit","publicAxios","axios","isUndefined","LoginDetails","OTP","UseOnboardContext","selectGlobalState","setIsDistributor","LoginForm","color","isFull","updateOnboard","otpAttempts","setOtpAttempts","mobileNumber","setMobileNumber","dispatch","history","visitId","register","formState","errors","handleSubmit","reset","resetMobile","setValue","setMobile","mode","registerOtp","errorsOtp","handleSubmitOtp","setOtp","resetOtp","handleOnSubmit","data","phoneNumber","Data","keepDirty","keepErrors","keepValues","message","err","somethingWentWrong","exhaustedOtpLimits","handleOnSubmitOtp","otp","response","isDistributor","user","role","localStorage","invite","tokenString","JSON","stringify","encodedToken","window","btoa","unescape","encodeURIComponent","push","newUser","onboard","replace","firstName","removeItem","enterCorrectOtp","onNumberChange","onResend","width","position","propTypes","oneOf","bool"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Button, Input, InputGroup, InputLeftElement } from '@chakra-ui/react';\r\nimport { PhoneIcon, LockIcon } from '@chakra-ui/icons';\r\nimport { useHistory } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport toast from 'react-hot-toast';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport get from 'lodash/get';\r\nimport messages from './messages';\r\nimport { attemptLogin } from '../../containers/LoginPage/actions';\r\nimport { useVisit } from '../../contexts/VisitContext';\r\nimport { publicAxios as axios } from '../../axios';\r\nimport { isUndefined } from 'lodash';\r\nimport LoginDetails from './login';\r\nimport OTP from './otp';\r\nimport { UseOnboardContext } from '../../App';\r\nimport { selectGlobalState , setIsDistributor} from '../../globalSlice';\r\n\r\nconst LoginForm = ({ color = 'dark', isFull = true }) => {\r\n \r\n  const { updateOnboard } = UseOnboardContext();\r\n  const [otpAttempts, setOtpAttempts] = useState(0);\r\n  const [mobileNumber, setMobileNumber] = useState('');\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const visitId = useVisit();\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    handleSubmit,\r\n    reset: resetMobile,\r\n    setValue: setMobile,\r\n  } = useForm({\r\n    mode: 'onSubmit',\r\n  });\r\n\r\n  const {\r\n    register: registerOtp,\r\n    formState: { errors: errorsOtp },\r\n    handleSubmit: handleSubmitOtp,\r\n    setValue: setOtp,\r\n    reset: resetOtp,\r\n  } = useForm({\r\n    mode: 'onSubmit',\r\n  });\r\n\r\n  const handleOnSubmit = async (data) => {\r\n    setMobileNumber(data.phoneNumber);\r\n    if (otpAttempts < 3) {\r\n      try {\r\n        const { data: Data } = await axios.get(\r\n          `/otp/?visitId=${visitId}&mobileNumber=91${data.phoneNumber}`,\r\n        );\r\n        setOtpAttempts(otpAttempts + 1);\r\n        resetMobile(\r\n          {},\r\n          {\r\n            keepDirty: false,\r\n            keepErrors: false,\r\n            keepValues: false,\r\n          },\r\n        );\r\n        toast(Data.message);\r\n      } catch (err) {\r\n        toast(<FormattedMessage {...messages.somethingWentWrong} />);\r\n      }\r\n    } else {\r\n      toast(<FormattedMessage {...messages.exhaustedOtpLimits} />);\r\n    }\r\n  };\r\n\r\n  const handleOnSubmitOtp = async (otp) => {\r\n    setOtp('otp', otp);\r\n    try {\r\n      const response = await axios.get(\r\n        `/otp/verify?mobileNumber=91${mobileNumber}&otp=${otp}`,\r\n      );\r\n      const isDistributor = response.data?.user?.role === 'DISTRIBUTOR'\r\n      localStorage.isDistributor = response.data?.user?.role === 'DISTRIBUTOR';\r\n      dispatch(setIsDistributor(isDistributor));\r\n      if (response?.data?.invite) {\r\n        const tokenString = JSON.stringify(response?.data.invite);\r\n        const encodedToken = window.btoa(\r\n          unescape(encodeURIComponent(tokenString)),\r\n        );\r\n        history.push(`/invite?token=${encodedToken}`);\r\n      } else {\r\n        dispatch(attemptLogin(get(response, 'data', {})));\r\n        if (response?.data?.newUser && isDistributor) {\r\n          localStorage.onboard = 1;\r\n          updateOnboard(1);\r\n          history.replace('/distributor');\r\n        } else if (isUndefined(response.data.user.firstName) && isDistributor) {\r\n          history.replace('/onboarding');\r\n        } else {\r\n          if (localStorage.onboard) {\r\n            localStorage.removeItem('onboard');\r\n            updateOnboard('');\r\n          }\r\n          history.replace('/dashboard');\r\n        }\r\n      }\r\n    } catch (err) {\r\n      toast(<FormattedMessage {...messages.enterCorrectOtp} />);\r\n    }\r\n  };\r\n  const onNumberChange = (mobileNumber) => {\r\n    setOtpAttempts(0);\r\n    setMobile('phoneNumber', mobileNumber);\r\n\r\n    resetOtp(\r\n      {},\r\n      {\r\n        keepDirty: false,\r\n        keepErrors: false,\r\n        keepValues: false,\r\n      },\r\n    );\r\n  };\r\n\r\n  const onResend = () => {\r\n    handleOnSubmit({ phoneNumber: mobileNumber });\r\n    resetOtp(\r\n      {},\r\n      {\r\n        keepDirty: false,\r\n        keepErrors: false,\r\n        keepValues: false,\r\n      },\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`transition-all bg-blueGray-300 duration-700 ease-in-out h-full top-0 absolute left-0 z-2 transform ${\r\n        isFull ? 'w-full' : 'w-1/2'\r\n      }`}\r\n      style={{ width: '100%' }}\r\n    >\r\n      {otpAttempts > 0 && (\r\n        <span\r\n          className='ml-4 pt-2 inline-block cursor-pointer hover:color-black color-dark'\r\n          style={{ position: 'absolute' }}\r\n          role='button'\r\n          tabIndex='0'\r\n          onClick={() => {\r\n            setOtpAttempts(0);\r\n\r\n            setMobileNumber('');\r\n            // resetMobile(\r\n            //   {},\r\n            //   {\r\n            //     keepDirty: false,\r\n            //     keepErrors: false,\r\n            //     keepValues: false,\r\n            //   },\r\n            // );\r\n            resetOtp(\r\n              {},\r\n              {\r\n                keepDirty: false,\r\n                keepErrors: false,\r\n                keepValues: false,\r\n              },\r\n            );\r\n          }}\r\n        >\r\n          <i className='fas fa-arrow-left' />\r\n        </span>\r\n      )}\r\n      {otpAttempts === 0 && (\r\n        <LoginDetails\r\n          register={register}\r\n          setMobile={setMobile}\r\n          errors={errors}\r\n          color={color}\r\n          submit={handleSubmit}\r\n          OnSubmit={handleOnSubmit}\r\n        />\r\n      )}\r\n      {otpAttempts > 0 && (\r\n        <OTP\r\n          color={color}\r\n          register={register}\r\n          mobileNumber={mobileNumber}\r\n          set={setOtp}\r\n          errors={errorsOtp}\r\n          onChange={onNumberChange}\r\n          submit={handleSubmitOtp}\r\n          OnSubmit={handleOnSubmitOtp}\r\n          onResend={onResend}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nLoginForm.propTypes = {\r\n  // color for the detailsPanel\r\n  color: PropTypes.oneOf([\r\n    'light',\r\n    'dark',\r\n    'blueGray',\r\n    'red',\r\n    'orange',\r\n    'amber',\r\n    'emerald',\r\n    'teal',\r\n    'lightBlue',\r\n    'indigo',\r\n    'purple',\r\n    'pink',\r\n  ]),\r\n  isFull: PropTypes.bool,\r\n};\r\n\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}