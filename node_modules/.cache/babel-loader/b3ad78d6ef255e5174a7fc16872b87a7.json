{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Work\\\\garaaz-distributor\\\\src\\\\components\\\\Navbar\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { Select } from '@chakra-ui/react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport get from 'lodash/get';\nimport { FormattedMessage } from 'react-intl';\nimport { changeLocale } from '../../containers/LanguageProvider/actions';\nimport messages from './messages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Navbar = _ref => {\n  _s();\n\n  let {\n    color = 'dark',\n    type = 'fixed'\n  } = _ref;\n  const [collapseOpen, setCollapseOpen] = React.useState(false);\n  const [collapseStyle, setCollapseStyle] = React.useState(undefined);\n  const [animation, setAnimation] = React.useState(false);\n  const collapseRef = React.useRef(null);\n\n  const startAnitmation = () => {\n    if (!animation) {\n      setAnimation(true);\n\n      if (collapseOpen) {\n        setCollapseStyle(0);\n        setTimeout(() => {\n          setAnimation(false);\n          setCollapseOpen(false);\n        }, 310);\n      } else {\n        setCollapseOpen(true);\n        setTimeout(() => {\n          setCollapseStyle(collapseRef.current.scrollHeight);\n        }, 10);\n        setTimeout(() => {\n          setAnimation(false);\n        }, 310);\n      }\n    }\n  };\n\n  const brand = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://garaaz.com/Content/img/logo.png\",\n      className: \"rounded-full mr-2\",\n      style: {\n        width: '30px'\n      },\n      alt: \"Logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: /*#__PURE__*/_jsxDEV(FormattedMessage, { ...messages.brandName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n\n  const navBg = {\n    dark: 'bg-blueGray-800 shadow-md',\n    light: 'bg-blueGray-200 shadow-md',\n    transparent: 'lg:bg-transparent bg-white',\n    white: 'bg-white shadow-md',\n    black: 'bg-black shadow-md',\n    blueGray: 'bg-blueGray-500 shadow-md',\n    red: 'bg-red-500 shadow-md',\n    orange: 'bg-orange-500 shadow-md',\n    amber: 'bg-amber-500 shadow-md',\n    emerald: 'bg-emerald-500 shadow-md',\n    teal: 'bg-teal-500 shadow-md',\n    lightBlue: 'bg-lightBlue-500 shadow-md',\n    indigo: 'bg-indigo-500 shadow-md',\n    purple: 'bg-purple-500 shadow-md',\n    pink: 'bg-pink-500 shadow-md'\n  };\n  const linkColors = {\n    light: 'text-blueGray-500',\n    dark: 'text-white',\n    transparent: 'lg:text-white text-blueGray-500',\n    white: 'text-blueGray-500',\n    black: 'text-white',\n    blueGray: 'text-white',\n    red: 'text-white',\n    orange: 'text-white',\n    amber: 'text-white',\n    emerald: 'text-white',\n    teal: 'text-white',\n    lightBlue: 'text-white',\n    indigo: 'text-white',\n    purple: 'text-white',\n    pink: 'text-white'\n  };\n  const storeLocale = useSelector(state => get(state, 'language.locale', ''));\n  const dispatch = useDispatch();\n\n  const handleLanguageChange = event => {\n    dispatch(changeLocale(event.target.value));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: `${type}\n          w-full z-50 flex flex-wrap items-center justify-between px-2 py-3 mb-3\n          ${navBg[color]}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Navbar, \"n4LYorRrFkBznM1aJzG60SKyAow=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Navbar;\nNavbar.propTypes = {\n  color: PropTypes.oneOf(['dark', 'light', 'transparent', 'white', 'black', 'blueGray', 'red', 'orange', 'amber', 'emerald', 'teal', 'lightBlue', 'indigo', 'purple', 'pink']),\n  type: PropTypes.oneOf(['absolute', 'fixed', ''])\n};\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/components/Navbar/index.js"],"names":["React","PropTypes","classnames","Select","useSelector","useDispatch","get","FormattedMessage","changeLocale","messages","Navbar","color","type","collapseOpen","setCollapseOpen","useState","collapseStyle","setCollapseStyle","undefined","animation","setAnimation","collapseRef","useRef","startAnitmation","setTimeout","current","scrollHeight","brand","width","brandName","navBg","dark","light","transparent","white","black","blueGray","red","orange","amber","emerald","teal","lightBlue","indigo","purple","pink","linkColors","storeLocale","state","dispatch","handleLanguageChange","event","target","value","propTypes","oneOf"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nimport { Select } from '@chakra-ui/react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport get from 'lodash/get';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { changeLocale } from '../../containers/LanguageProvider/actions';\r\nimport messages from './messages';\r\n\r\nconst Navbar = ({ color = 'dark', type = 'fixed' }) => {\r\n  const [collapseOpen, setCollapseOpen] = React.useState(false);\r\n  const [collapseStyle, setCollapseStyle] = React.useState(undefined);\r\n  const [animation, setAnimation] = React.useState(false);\r\n  const collapseRef = React.useRef(null);\r\n\r\n  const startAnitmation = () => {\r\n    if (!animation) {\r\n      setAnimation(true);\r\n      if (collapseOpen) {\r\n        setCollapseStyle(0);\r\n        setTimeout(() => {\r\n          setAnimation(false);\r\n          setCollapseOpen(false);\r\n        }, 310);\r\n      } else {\r\n        setCollapseOpen(true);\r\n        setTimeout(() => {\r\n          setCollapseStyle(collapseRef.current.scrollHeight);\r\n        }, 10);\r\n        setTimeout(() => {\r\n          setAnimation(false);\r\n        }, 310);\r\n      }\r\n    }\r\n  };\r\n  const brand = (\r\n    <>\r\n      <img\r\n        src=\"https://garaaz.com/Content/img/logo.png\"\r\n        className=\"rounded-full mr-2\"\r\n        style={{ width: '30px' }}\r\n        alt=\"Logo\"\r\n      />\r\n      <span>\r\n        <FormattedMessage {...messages.brandName} />\r\n      </span>\r\n    </>\r\n  );\r\n  const navBg = {\r\n    dark: 'bg-blueGray-800 shadow-md',\r\n    light: 'bg-blueGray-200 shadow-md',\r\n    transparent: 'lg:bg-transparent bg-white',\r\n    white: 'bg-white shadow-md',\r\n    black: 'bg-black shadow-md',\r\n    blueGray: 'bg-blueGray-500 shadow-md',\r\n    red: 'bg-red-500 shadow-md',\r\n    orange: 'bg-orange-500 shadow-md',\r\n    amber: 'bg-amber-500 shadow-md',\r\n    emerald: 'bg-emerald-500 shadow-md',\r\n    teal: 'bg-teal-500 shadow-md',\r\n    lightBlue: 'bg-lightBlue-500 shadow-md',\r\n    indigo: 'bg-indigo-500 shadow-md',\r\n    purple: 'bg-purple-500 shadow-md',\r\n    pink: 'bg-pink-500 shadow-md',\r\n  };\r\n  const linkColors = {\r\n    light: 'text-blueGray-500',\r\n    dark: 'text-white',\r\n    transparent: 'lg:text-white text-blueGray-500',\r\n    white: 'text-blueGray-500',\r\n    black: 'text-white',\r\n    blueGray: 'text-white',\r\n    red: 'text-white',\r\n    orange: 'text-white',\r\n    amber: 'text-white',\r\n    emerald: 'text-white',\r\n    teal: 'text-white',\r\n    lightBlue: 'text-white',\r\n    indigo: 'text-white',\r\n    purple: 'text-white',\r\n    pink: 'text-white',\r\n  };\r\n\r\n  const storeLocale = useSelector(state => get(state, 'language.locale', ''));\r\n  const dispatch = useDispatch();\r\n  const handleLanguageChange = event => {\r\n    dispatch(changeLocale(event.target.value));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <nav\r\n        className={`${type}\r\n          w-full z-50 flex flex-wrap items-center justify-between px-2 py-3 mb-3\r\n          ${navBg[color]}`}\r\n      >\r\n        {/* <div className=\"flex container mx-auto flex flex-wrap items-center justify-between px-0 lg:px-4\">\r\n          <a\r\n            href=\"/\"\r\n            className={`text-sm font-bold leading-relaxed inline-flex items-center mr-4 py-2 whitespace-nowrap uppercase\r\n              ${linkColors[color]}`}\r\n          >\r\n            {brand}\r\n          </a>\r\n\r\n          <button\r\n            className=\"ml-auto cursor-pointer text-xl leading-none px-3 py-1 border border-solid border-blueGray-400 rounded bg-transparent block outline-none focus:outline-none text-blueGray-300 lg:hidden\"\r\n            type=\"button\"\r\n            onClick={startAnitmation}\r\n          >\r\n            <i className=\"fas fa-bars\" />\r\n          </button>\r\n\r\n          <div\r\n            className={classnames(\r\n              'items-center w-full lg:flex lg:w-auto flex-grow duration-300 transition-all ease-in-out',\r\n              {\r\n                'block h-0': collapseOpen,\r\n                hidden: !collapseOpen,\r\n                'overflow-hidden': animation,\r\n              },\r\n            )}\r\n            style={{\r\n              height: collapseStyle,\r\n            }}\r\n            ref={collapseRef}\r\n          >\r\n            \r\n          </div>\r\n\r\n          <div className=\"flex flex-row flex-wrap items-center ml-auto\">\r\n            <Select\r\n              style={{ backgroundColor: 'white' }}\r\n              value={storeLocale}\r\n              onChange={handleLanguageChange}\r\n            >\r\n              <option value=\"en\">Eng</option>\r\n              <option value=\"hi\">Hin</option>\r\n            </Select>\r\n          </div>\r\n        </div> */}\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  color: PropTypes.oneOf([\r\n    'dark',\r\n    'light',\r\n    'transparent',\r\n    'white',\r\n    'black',\r\n    'blueGray',\r\n    'red',\r\n    'orange',\r\n    'amber',\r\n    'emerald',\r\n    'teal',\r\n    'lightBlue',\r\n    'indigo',\r\n    'purple',\r\n    'pink',\r\n  ]),\r\n  type: PropTypes.oneOf(['absolute', 'fixed', '']),\r\n};\r\n\r\nexport default Navbar;\r\n"]},"metadata":{},"sourceType":"module"}