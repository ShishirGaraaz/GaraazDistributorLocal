{"ast":null,"code":"import { publicAxios as axios } from './axios';\nimport routes, { ROUTES } from './routes';\nimport getURLParams from './utils/getURLParams';\n\nclass Services {\n  static async getBranches(payload) {\n    return await axios({\n      method: 'GET',\n      url: ROUTES.BRANCHES,\n      headers: {\n        Authorization: payload.auth.authToken\n      }\n    });\n  }\n\n  static async getWorkshops(payload) {\n    const params = getURLParams(payload.params);\n    return await axios.get(`/distributors/${payload.distributorId}/workshops${params}`, {\n      headers: {\n        Authorization: payload.auth.authToken\n      }\n    });\n  }\n\n  static async getDistributorInfo(payload) {\n    return await axios.get('/distributors', {\n      headers: {\n        Authorization: payload.auth.authToken\n      }\n    });\n  }\n\n  static async getInventoryStat(payload) {\n    return await axios.get(`${routes.inventoryRoute}/stats`, {\n      headers: {\n        Authorization: payload.auth.authToken\n      }\n    });\n  }\n\n  static async getSalesStat(payload) {\n    return await axios.get(`${routes.salesRoute}/stats`, {\n      headers: {\n        Authorization: payload.auth.authToken\n      }\n    });\n  }\n\n  static async getCollectionsStat(payload) {\n    return await axios.get(`${routes.accountRoute}${routes.collectionsRoute}/stats`, {\n      headers: {\n        Authorization: payload.auth.authToken\n      }\n    });\n  }\n\n  static async getOutstandingStat(payload) {\n    return await axios.get(`${routes.accountRoute}${routes.outstandingRoute}s/stats`, {\n      headers: {\n        Authorization: payload.auth.authToken\n      }\n    });\n  }\n\n  static async getOrderStat(payload) {\n    return await axios.get(`${routes.orderRoute}/stats`, {\n      headers: {\n        Authorization: payload.auth.authToken\n      }\n    });\n  }\n\n}\n\nexport default Services;","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/globalServices.js"],"names":["publicAxios","axios","routes","ROUTES","getURLParams","Services","getBranches","payload","method","url","BRANCHES","headers","Authorization","auth","authToken","getWorkshops","params","get","distributorId","getDistributorInfo","getInventoryStat","inventoryRoute","getSalesStat","salesRoute","getCollectionsStat","accountRoute","collectionsRoute","getOutstandingStat","outstandingRoute","getOrderStat","orderRoute"],"mappings":"AAAA,SAASA,WAAW,IAAIC,KAAxB,QAAqC,SAArC;AACA,OAAOC,MAAP,IAAgBC,MAAhB,QAA6B,UAA7B;AACA,OAAOC,YAAP,MAAyB,sBAAzB;;AAGA,MAAMC,QAAN,CAAc;AACc,eAAXC,WAAW,CAACC,OAAD,EAAS;AAC9B,WAAO,MAAMN,KAAK,CAAC;AACdO,MAAAA,MAAM,EAAE,KADM;AAEdC,MAAAA,GAAG,EAAEN,MAAM,CAACO,QAFE;AAGdC,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,EAAEL,OAAO,CAACM,IAAR,CAAaC;AADvB;AAHK,KAAD,CAAlB;AAOF;;AAGwB,eAAZC,YAAY,CAAER,OAAF,EAAW;AAClC,UAAMS,MAAM,GAAGZ,YAAY,CAACG,OAAO,CAACS,MAAT,CAA3B;AAEE,WAAQ,MAAMf,KAAK,CAACgB,GAAN,CAAW,iBAAgBV,OAAO,CAACW,aAAc,aAAYF,MAAO,EAApE,EAAuE;AACjFL,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,EAAEL,OAAO,CAACM,IAAR,CAAaC;AADvB;AADwE,KAAvE,CAAd;AAKH;;AAG8B,eAAlBK,kBAAkB,CAACZ,OAAD,EAAS;AACpC,WAAO,MAAMN,KAAK,CAACgB,GAAN,CAAU,eAAV,EACT;AACAN,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAEL,OAAO,CAACM,IAAR,CAAaC;AADrB;AADT,KADS,CAAb;AAMD;;AAE4B,eAAhBM,gBAAgB,CAACb,OAAD,EAAS;AACpC,WAAO,MAAMN,KAAK,CAACgB,GAAN,CAAW,GAAEf,MAAM,CAACmB,cAAe,QAAnC,EACT;AACAV,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAEL,OAAO,CAACM,IAAR,CAAaC;AADrB;AADT,KADS,CAAb;AAMD;;AAEwB,eAAZQ,YAAY,CAACf,OAAD,EAAS;AAChC,WAAO,MAAMN,KAAK,CAACgB,GAAN,CAAW,GAAEf,MAAM,CAACqB,UAAW,QAA/B,EACT;AACAZ,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAEL,OAAO,CAACM,IAAR,CAAaC;AADrB;AADT,KADS,CAAb;AAMD;;AAE8B,eAAlBU,kBAAkB,CAACjB,OAAD,EAAS;AACtC,WAAO,MAAMN,KAAK,CAACgB,GAAN,CAAW,GAAEf,MAAM,CAACuB,YAAa,GAAEvB,MAAM,CAACwB,gBAAiB,QAA3D,EACT;AACAf,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAEL,OAAO,CAACM,IAAR,CAAaC;AADrB;AADT,KADS,CAAb;AAMD;;AAE8B,eAAlBa,kBAAkB,CAACpB,OAAD,EAAS;AACtC,WAAO,MAAMN,KAAK,CAACgB,GAAN,CAAW,GAAEf,MAAM,CAACuB,YAAa,GAAEvB,MAAM,CAAC0B,gBAAiB,SAA3D,EACT;AACAjB,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAEL,OAAO,CAACM,IAAR,CAAaC;AADrB;AADT,KADS,CAAb;AAMD;;AAEwB,eAAZe,YAAY,CAACtB,OAAD,EAAS;AAChC,WAAO,MAAMN,KAAK,CAACgB,GAAN,CAAW,GAAEf,MAAM,CAAC4B,UAAW,QAA/B,EACT;AACAnB,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAEL,OAAO,CAACM,IAAR,CAAaC;AADrB;AADT,KADS,CAAb;AAMD;;AA3EO;;AA+Ed,eAAeT,QAAf","sourcesContent":["import { publicAxios as axios } from './axios';\r\nimport routes, {ROUTES} from './routes';\r\nimport getURLParams from './utils/getURLParams';\r\n\r\n\r\nclass Services{\r\n    static async getBranches(payload){\r\n       return await axios({\r\n            method: 'GET',\r\n            url: ROUTES.BRANCHES,\r\n            headers: {\r\n                Authorization: payload.auth.authToken,\r\n              },\r\n        })\r\n    }\r\n\r\n\r\n    static async getWorkshops (payload) {\r\n      const params = getURLParams(payload.params);\r\n\r\n        return  await axios.get(`/distributors/${payload.distributorId}/workshops${params}`, {\r\n            headers: {\r\n                Authorization: payload.auth.authToken,\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    static async getDistributorInfo(payload){\r\n        return await axios.get('/distributors'\r\n          , {\r\n            headers: {\r\n              Authorization: payload.auth.authToken,\r\n            },\r\n          });\r\n      };\r\n\r\n      static async getInventoryStat(payload){\r\n        return await axios.get(`${routes.inventoryRoute}/stats`\r\n          , {\r\n            headers: {\r\n              Authorization: payload.auth.authToken,\r\n            },\r\n          });\r\n      };\r\n\r\n      static async getSalesStat(payload){\r\n        return await axios.get(`${routes.salesRoute}/stats`\r\n          , {\r\n            headers: {\r\n              Authorization: payload.auth.authToken,\r\n            },\r\n          });\r\n      };\r\n\r\n      static async getCollectionsStat(payload){\r\n        return await axios.get(`${routes.accountRoute}${routes.collectionsRoute}/stats`\r\n          , {\r\n            headers: {\r\n              Authorization: payload.auth.authToken,\r\n            },\r\n          });\r\n      };\r\n\r\n      static async getOutstandingStat(payload){\r\n        return await axios.get(`${routes.accountRoute}${routes.outstandingRoute}s/stats`\r\n          , {\r\n            headers: {\r\n              Authorization: payload.auth.authToken,\r\n            },\r\n          });\r\n      };\r\n\r\n      static async getOrderStat(payload){\r\n        return await axios.get(`${routes.orderRoute}/stats`\r\n          , {\r\n            headers: {\r\n              Authorization: payload.auth.authToken,\r\n            },\r\n          });\r\n      };\r\n}\r\n\r\n\r\nexport default Services;"]},"metadata":{},"sourceType":"module"}