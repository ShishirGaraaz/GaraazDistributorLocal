{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Work\\\\garaaz-distributor\\\\src\\\\components\\\\DynamicTable\\\\index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Table, Thead, Tbody, Tr, Th, Td, chakra, Box, Select, useColorMode, IconButton, Input, Spinner, Tfoot, Flex } from '@chakra-ui/react';\nimport { TriangleDownIcon, TriangleUpIcon } from '@chakra-ui/icons';\nimport { useTable, useSortBy, useFlexLayout, usePagination } from 'react-table';\nimport { AiOutlineLeft, AiOutlineRight } from 'react-icons/ai';\nimport { useIntl } from 'react-intl';\nimport messages from './messages';\nimport getMoneyFormat from '../../utils/getMoneyFormat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst rowsNo = [10, 25, 50, 100, 200];\n\nconst DynamicTable = _ref => {\n  _s();\n\n  let {\n    data,\n    columns,\n    totalCount,\n    fetchData,\n    loading,\n    hidePagination,\n    skipPageReset,\n    updateMyData,\n    totals,\n    controlledPageCount,\n    smallWidth,\n    summary,\n    params\n    /*  setPageProps, */\n\n  } = _ref;\n  const {\n    colorMode\n  } = useColorMode();\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    // Get the state from the instance\n    state: {\n      pageIndex,\n      pageSize\n    }\n  } = useTable({\n    columns,\n    data,\n    manualPagination: true,\n    pageCount: controlledPageCount,\n    autoResetPage: !skipPageReset,\n    updateMyData\n  }, useSortBy, usePagination);\n  useEffect(() => {\n    if (pageSize) {\n      fetchData({\n        offset: pageSize * pageIndex,\n        limit: pageSize,\n        ...params\n      });\n    }\n    /*  setPageProps({ offset: pageSize * pageIndex, limit: pageSize }); */\n\n  }, [pageSize, pageIndex]);\n  const tableHeadRow = headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(Tr, { ...headerGroup.getHeaderGroupProps(),\n    height: {\n      base: '10vh',\n      lg: '3rem'\n    },\n    children: headerGroup.headers.map((column, index) => {\n      let borderRight = index < headerGroup.headers.length - 1 ? '1px' : '0px';\n      return /*#__PURE__*/_jsxDEV(Th, { ...column.getHeaderProps(column.getSortByToggleProps()),\n        isNumeric: column.isNumeric,\n        className: \"h-full bg-blueGray-800 text-white\",\n        p: 1,\n        borderRightWidth: borderRight,\n        textAlign: \"center\",\n        style: {\n          wordBreak: 'keep-all'\n        },\n        children: [column.render('Header'), /*#__PURE__*/_jsxDEV(chakra.span, {\n          pl: \"0\",\n          children: column.isSorted ? column.isSortedDesc ? /*#__PURE__*/_jsxDEV(TriangleDownIcon, {\n            \"aria-label\": \"sorted descending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(TriangleUpIcon, {\n            \"aria-label\": \"sorted ascending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 19\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this));\n  const tableCells = page.map((row, index) => {\n    prepareRow(row);\n    return /*#__PURE__*/_jsxDEV(Tr, { ...row.getRowProps(),\n      borderStyle: \"solid\",\n      borderBottomWidth: \"1px\",\n      className: \"border-gray-400\",\n      children: row.cells.map((cell, index) => {\n        let borderRight = index < row.cells.length - 1 ? '1px' : '0px';\n        return /*#__PURE__*/_jsxDEV(Td, {\n          p: 2,\n          overflowY: \"auto\" //  height='100vh'\n          ,\n          maxWidth: \"15vw\",\n          ...cell.getCellProps(),\n          isNumeric: cell.column.isNumeric,\n          borderRightWidth: borderRight,\n          textAlign: \"center\",\n          children: cell.render('Cell')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      overflowX: \"auto\",\n      width: \"100%\",\n      borderBottomRightRadius: \"10px\",\n      borderBottomLeftRadius: \"10px\",\n      children: data.length > 0 ? /*#__PURE__*/_jsxDEV(Table, {\n        overflowX: \"auto\",\n        className: \"min-h-1/2\",\n        variant: \"unstyle\",\n        borderBottomLeftRadius: \"10px\",\n        ...getTableProps(),\n        minWidth: {\n          base: smallWidth ? smallWidth : 800\n        },\n        children: [/*#__PURE__*/_jsxDEV(Thead, {\n          children: tableHeadRow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tbody, {\n          backgroundColor: colorMode === 'dark' ? 'black' : 'white',\n          ...getTableBodyProps(),\n          children: tableCells\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), totals && /*#__PURE__*/_jsxDEV(Tfoot, {\n          children: /*#__PURE__*/_jsxDEV(Tr, {\n            children: [/*#__PURE__*/_jsxDEV(Th, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Th, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              fontSize: {\n                base: 16,\n                lg: '1.3vw'\n              },\n              textAlign: \"center\",\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              fontSize: {\n                base: 16,\n                lg: '1.3vw'\n              },\n              textAlign: \"center\",\n              children: totals.totalOrderedQuantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Th, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              fontSize: {\n                base: 16,\n                lg: '1.3vw'\n              },\n              textAlign: \"center\",\n              children: totals.totalQuantityToGive\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Th, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              fontSize: {\n                base: 16,\n                lg: '1.3vw'\n              },\n              textAlign: \"center\",\n              children: getMoneyFormat(totals.totalAmount)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 15\n        }, this), summary && /*#__PURE__*/_jsxDEV(Tfoot, {\n          children: /*#__PURE__*/_jsxDEV(Tr, {\n            children: [/*#__PURE__*/_jsxDEV(Th, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Th, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              fontSize: {\n                base: 16,\n                lg: '1.3vw'\n              },\n              textAlign: \"center\",\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              fontSize: {\n                base: 16,\n                lg: '1.3vw'\n              },\n              textAlign: \"center\",\n              children: summary.totalOrderedQuantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Th, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 19\n            }, this), headerGroups[0].headers.length > 6 && /*#__PURE__*/_jsxDEV(Th, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 58\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              fontSize: {\n                base: 16,\n                lg: '1.3vw'\n              },\n              textAlign: \"center\",\n              children: getMoneyFormat(summary.totalAmount)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this) : !loading && data.length === 0 ? /*#__PURE__*/_jsxDEV(Flex, {\n        minH: \"40vh\",\n        minWidth: {\n          base: smallWidth ? smallWidth : 800\n        },\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          textStyle: \"subtitle\",\n          layerStyle: \"muted\",\n          children: \"No Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Flex, {\n        minH: \"40vh\",\n        minWidth: {\n          base: smallWidth ? smallWidth : 800\n        },\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          textStyle: \"subtitle\",\n          layerStyle: \"muted\",\n          children: \"loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), !hidePagination && /*#__PURE__*/_jsxDEV(Pagination, {\n      previousPage: previousPage,\n      nextPage: nextPage,\n      gotoPage: gotoPage,\n      canPreviousPage: canPreviousPage,\n      canNextPage: canNextPage,\n      loading: loading,\n      page: page,\n      totalCount: totalCount,\n      pageSize: pageSize,\n      setPageSize: setPageSize,\n      pageIndex: pageIndex,\n      pageOptions: pageOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DynamicTable, \"qzk2Ek55A564mcbXdmyBJT9+DPU=\", false, function () {\n  return [useColorMode, useTable];\n});\n\n_c = DynamicTable;\n\nconst Pagination = _ref2 => {\n  _s2();\n\n  let {\n    previousPage,\n    nextPage,\n    gotoPage,\n    canPreviousPage,\n    canNextPage,\n    loading,\n    page,\n    totalCount,\n    pageSize,\n    setPageSize,\n    pageIndex,\n    pageOptions\n  } = _ref2;\n  const intl = useIntl();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    m: 2,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    flexWrap: \"wrap\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      children: loading && /*#__PURE__*/_jsxDEV(Spinner, {\n        size: \"sm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 22\n      }, this)\n      /* : (\r\n      <Box>\r\n      {intl.formatMessage(messages.showing)} {page.length}{' '}\r\n      {intl.formatMessage(messages.of)} {totalCount} results\r\n      </Box>\r\n      )*/\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      flexWrap: \"wrap\",\n      width: {\n        base: '100%',\n        lg: '80%'\n      },\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: {\n        base: 'flex-start',\n        lg: 'flex-end'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        mb: 2,\n        mr: 2,\n        children: [intl.formatMessage(messages.rowPerPage), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        mb: 2,\n        value: pageSize,\n        mr: 10,\n        width: \"fit-content\",\n        onChange: e => {\n          setPageSize(Number(e.target.value));\n        },\n        children: rowsNo.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item,\n          children: item\n        }, item, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mb: 2,\n        display: \"flex\",\n        flexWrap: \"nowrap\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          mr: 5,\n          children: [intl.formatMessage(messages.page), \" \", pageIndex + 1, ' ', intl.formatMessage(messages.of), \" \", pageOptions.length ? pageOptions.length : 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => previousPage(),\n          disabled: !canPreviousPage,\n          children: /*#__PURE__*/_jsxDEV(AiOutlineLeft, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          ml: 6,\n          onClick: () => nextPage(),\n          disabled: !canNextPage,\n          children: /*#__PURE__*/_jsxDEV(AiOutlineRight, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mb: 2,\n        mr: 2,\n        ml: 6,\n        children: [intl.formatMessage(messages.goToPage), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        mb: 2,\n        onChange: e => {\n          const page = e.target.value ? Number(e.target.value) - 1 : 1;\n          gotoPage(page);\n        },\n        defaultValue: pageIndex + 1,\n        type: \"number\",\n        width: {\n          base: 20\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 279,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Pagination, \"rlSgSjbewJ1PrR/Ile8g/kr050o=\", false, function () {\n  return [useIntl];\n});\n\n_c2 = Pagination;\nexport default DynamicTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DynamicTable\");\n$RefreshReg$(_c2, \"Pagination\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/components/DynamicTable/index.js"],"names":["React","useEffect","Table","Thead","Tbody","Tr","Th","Td","chakra","Box","Select","useColorMode","IconButton","Input","Spinner","Tfoot","Flex","TriangleDownIcon","TriangleUpIcon","useTable","useSortBy","useFlexLayout","usePagination","AiOutlineLeft","AiOutlineRight","useIntl","messages","getMoneyFormat","rowsNo","DynamicTable","data","columns","totalCount","fetchData","loading","hidePagination","skipPageReset","updateMyData","totals","controlledPageCount","smallWidth","summary","params","colorMode","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","gotoPage","nextPage","previousPage","setPageSize","state","pageIndex","pageSize","manualPagination","pageCount","autoResetPage","offset","limit","tableHeadRow","map","headerGroup","getHeaderGroupProps","base","lg","headers","column","index","borderRight","length","getHeaderProps","getSortByToggleProps","isNumeric","wordBreak","render","isSorted","isSortedDesc","tableCells","row","getRowProps","cells","cell","getCellProps","totalOrderedQuantity","totalQuantityToGive","totalAmount","Pagination","intl","formatMessage","rowPerPage","e","Number","target","value","item","of","goToPage"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport {\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  chakra,\r\n  Box,\r\n  Select,\r\n  useColorMode,\r\n  IconButton,\r\n  Input,\r\n  Spinner,\r\n  Tfoot,\r\n  Flex,\r\n} from '@chakra-ui/react';\r\nimport { TriangleDownIcon, TriangleUpIcon } from '@chakra-ui/icons';\r\nimport { useTable, useSortBy, useFlexLayout, usePagination } from 'react-table';\r\nimport { AiOutlineLeft, AiOutlineRight } from 'react-icons/ai';\r\nimport { useIntl } from 'react-intl';\r\nimport messages from './messages';\r\nimport getMoneyFormat from '../../utils/getMoneyFormat';\r\n\r\nconst rowsNo = [10, 25, 50, 100, 200];\r\n\r\nconst DynamicTable = ({\r\n  data,\r\n  columns,\r\n  totalCount,\r\n  fetchData,\r\n  loading,\r\n  hidePagination,\r\n  skipPageReset,\r\n  updateMyData,\r\n  totals,\r\n  controlledPageCount,\r\n  smallWidth,\r\n  summary,\r\n  params,\r\n /*  setPageProps, */\r\n}) => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n\r\n    // Get the state from the instance\r\n    state: { pageIndex, pageSize },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      manualPagination: true,\r\n      pageCount: controlledPageCount,\r\n      autoResetPage: !skipPageReset,\r\n      updateMyData,\r\n    },\r\n    useSortBy,\r\n    usePagination,\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (pageSize) {\r\n      fetchData({\r\n        offset: pageSize * pageIndex,\r\n        limit: pageSize,\r\n        ...params,\r\n      });\r\n    }\r\n   /*  setPageProps({ offset: pageSize * pageIndex, limit: pageSize }); */\r\n  }, [pageSize, pageIndex]);\r\n\r\n  const tableHeadRow = headerGroups.map((headerGroup) => (\r\n    <Tr\r\n      {...headerGroup.getHeaderGroupProps()}\r\n      height={{ base: '10vh', lg: '3rem' }}\r\n    >\r\n      {headerGroup.headers.map((column, index) => {\r\n        let borderRight =\r\n          index < headerGroup.headers.length - 1 ? '1px' : '0px';\r\n        return (\r\n          <Th\r\n            {...column.getHeaderProps(column.getSortByToggleProps())}\r\n            isNumeric={column.isNumeric}\r\n            className='h-full bg-blueGray-800 text-white'\r\n            p={1}\r\n            borderRightWidth={borderRight}\r\n            textAlign='center'\r\n            style={{ wordBreak: 'keep-all' }}\r\n          >\r\n            {column.render('Header')}\r\n            <chakra.span pl='0'>\r\n              {column.isSorted ? (\r\n                column.isSortedDesc ? (\r\n                  <TriangleDownIcon aria-label='sorted descending' />\r\n                ) : (\r\n                  <TriangleUpIcon aria-label='sorted ascending' />\r\n                )\r\n              ) : null}\r\n            </chakra.span>\r\n          </Th>\r\n        );\r\n      })}\r\n    </Tr>\r\n  ));\r\n\r\n  const tableCells = page.map((row, index) => {\r\n    prepareRow(row);\r\n\r\n    return (\r\n      <Tr\r\n        {...row.getRowProps()}\r\n        borderStyle='solid'\r\n        borderBottomWidth='1px'\r\n        className='border-gray-400'\r\n      >\r\n        {row.cells.map((cell, index) => {\r\n          let borderRight = index < row.cells.length - 1 ? '1px' : '0px';\r\n          return (\r\n            <Td\r\n              p={2}\r\n              overflowY='auto'\r\n              //  height='100vh'\r\n              maxWidth='15vw'\r\n              {...cell.getCellProps()}\r\n              isNumeric={cell.column.isNumeric}\r\n              borderRightWidth={borderRight}\r\n              textAlign='center'\r\n            >\r\n              {cell.render('Cell')}\r\n            </Td>\r\n          );\r\n        })}\r\n      </Tr>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        overflowX='auto'\r\n        width='100%'\r\n        borderBottomRightRadius='10px'\r\n        borderBottomLeftRadius='10px'\r\n      >\r\n        {data.length > 0 ? (\r\n          <Table\r\n            overflowX='auto'\r\n            className='min-h-1/2'\r\n            variant='unstyle'\r\n            borderBottomLeftRadius='10px'\r\n            {...getTableProps()}\r\n            minWidth={{ base: smallWidth ? smallWidth : 800 }}\r\n          >\r\n            <Thead>{tableHeadRow}</Thead>\r\n            <Tbody\r\n              backgroundColor={colorMode === 'dark' ? 'black' : 'white'}\r\n              {...getTableBodyProps()}\r\n            >\r\n              {tableCells}\r\n            </Tbody>\r\n\r\n            {totals && (\r\n              <Tfoot>\r\n                <Tr>\r\n                  <Th></Th>\r\n                  <Th></Th>\r\n                  <Th fontSize={{ base: 16, lg: '1.3vw' }} textAlign='center'>\r\n                    Total\r\n                  </Th>\r\n                  <Th fontSize={{ base: 16, lg: '1.3vw' }} textAlign='center'>\r\n                    {totals.totalOrderedQuantity}\r\n                  </Th>\r\n                  <Th></Th>\r\n                  <Th fontSize={{ base: 16, lg: '1.3vw' }} textAlign='center'>\r\n                    {totals.totalQuantityToGive}\r\n                  </Th>\r\n                  <Th></Th>\r\n                  <Th fontSize={{ base: 16, lg: '1.3vw' }} textAlign='center'>\r\n                    {getMoneyFormat(totals.totalAmount)}\r\n                  </Th>\r\n                </Tr>\r\n              </Tfoot>\r\n            )}\r\n            {summary && (\r\n              <Tfoot>\r\n                <Tr>\r\n                  <Th></Th>\r\n                  <Th></Th>\r\n                  <Th fontSize={{ base: 16, lg: '1.3vw' }} textAlign='center'>\r\n                    Total\r\n                  </Th>\r\n                  <Th fontSize={{ base: 16, lg: '1.3vw' }} textAlign='center'>\r\n                    {summary.totalOrderedQuantity}\r\n                  </Th>\r\n                  <Th></Th>\r\n                  {headerGroups[0].headers.length > 6 && <Th></Th>}\r\n                  <Th fontSize={{ base: 16, lg: '1.3vw' }} textAlign='center'>\r\n                    {getMoneyFormat(summary.totalAmount)}\r\n                  </Th>\r\n                </Tr>\r\n              </Tfoot>\r\n            )}\r\n          </Table>\r\n        ) : !loading && data.length === 0 ? (\r\n          <Flex\r\n            minH='40vh'\r\n            minWidth={{ base: smallWidth ? smallWidth : 800 }}\r\n            justifyContent='center'\r\n            alignItems='center'\r\n          >\r\n            <Box textStyle='subtitle' layerStyle='muted'>\r\n              No Data\r\n            </Box>\r\n          </Flex>\r\n        ) : (\r\n          <Flex\r\n            minH='40vh'\r\n            minWidth={{ base: smallWidth ? smallWidth : 800 }}\r\n            justifyContent='center'\r\n            alignItems='center'\r\n          >\r\n            <Box textStyle='subtitle' layerStyle='muted'>\r\n              loading\r\n            </Box>\r\n          </Flex>\r\n        )}\r\n      </Box>\r\n      {!hidePagination && (\r\n        <Pagination\r\n          previousPage={previousPage}\r\n          nextPage={nextPage}\r\n          gotoPage={gotoPage}\r\n          canPreviousPage={canPreviousPage}\r\n          canNextPage={canNextPage}\r\n          loading={loading}\r\n          page={page}\r\n          totalCount={totalCount}\r\n          pageSize={pageSize}\r\n          setPageSize={setPageSize}\r\n          pageIndex={pageIndex}\r\n          pageOptions={pageOptions}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst Pagination = ({\r\n  previousPage,\r\n  nextPage,\r\n  gotoPage,\r\n  canPreviousPage,\r\n  canNextPage,\r\n  loading,\r\n  page,\r\n  totalCount,\r\n  pageSize,\r\n  setPageSize,\r\n  pageIndex,\r\n  pageOptions,\r\n}) => {\r\n  const intl = useIntl();\r\n\r\n  return (\r\n    <Box\r\n      m={2}\r\n      display='flex'\r\n      alignItems='center'\r\n      justifyContent='space-between'\r\n      flexWrap='wrap'\r\n    >\r\n      <Box>\r\n        {\r\n          loading && <Spinner size='sm' /> /* : (\r\n          <Box>\r\n            {intl.formatMessage(messages.showing)} {page.length}{' '}\r\n            {intl.formatMessage(messages.of)} {totalCount} results\r\n          </Box>\r\n        )*/\r\n        }\r\n      </Box>\r\n      <Box\r\n        flexWrap='wrap'\r\n        width={{ base: '100%', lg: '80%' }}\r\n        display='flex'\r\n        alignItems='center'\r\n        justifyContent={{ base: 'flex-start', lg: 'flex-end' }}\r\n      >\r\n        <Box mb={2} mr={2}>\r\n          {intl.formatMessage(messages.rowPerPage)}:\r\n        </Box>\r\n        <Select\r\n          mb={2}\r\n          value={pageSize}\r\n          mr={10}\r\n          width='fit-content'\r\n          onChange={(e) => {\r\n            setPageSize(Number(e.target.value));\r\n          }}\r\n        >\r\n          {rowsNo.map((item) => (\r\n            <option value={item} key={item}>\r\n              {item}\r\n            </option>\r\n          ))}\r\n        </Select>\r\n        <Box mb={2} display='flex' flexWrap='nowrap' alignItems='center'>\r\n          <Box mr={5}>\r\n            {intl.formatMessage(messages.page)} {pageIndex + 1}{' '}\r\n            {intl.formatMessage(messages.of)} {pageOptions.length ? pageOptions.length:1}\r\n          </Box>\r\n          <IconButton\r\n            onClick={() => previousPage()}\r\n            disabled={!canPreviousPage}\r\n          >\r\n            <AiOutlineLeft />\r\n          </IconButton>\r\n          <IconButton ml={6} onClick={() => nextPage()} disabled={!canNextPage}>\r\n            <AiOutlineRight />\r\n          </IconButton>\r\n        </Box>\r\n        <Box mb={2} mr={2} ml={6}>\r\n          {intl.formatMessage(messages.goToPage)}:\r\n        </Box>\r\n        <Input\r\n          mb={2}\r\n          onChange={(e) => {\r\n            const page = e.target.value ? Number(e.target.value) - 1 : 1;\r\n\r\n            gotoPage(page);\r\n          }}\r\n          defaultValue={pageIndex+1}\r\n          type='number'\r\n          width={{ base: 20 }}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DynamicTable;\r\n"]},"metadata":{},"sourceType":"module"}