{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Work\\\\garaaz-distributor\\\\src\\\\components\\\\WorkShopList\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Button, Box } from '@chakra-ui/react';\nimport { useSelector, useDispatch } from 'react-redux';\n/* import { getWorkshops } from './actions'; */\n\nimport messages from './messages';\nimport serverErrorIllustrator from \"../../assets/img/serverError.svg\";\nimport Error from '../Error';\nimport { useIntl } from 'react-intl';\nimport './style.css';\nimport { optionsProp } from './constants';\nimport WorkshopTable from './Table/WorkshopTable';\nimport AdditionOption from '../../utils/AdditionOptions';\nimport { Loading } from '../Loading';\nimport { selectGlobalState, getWorkshops } from '../../globalSlice';\nimport { Link } from 'react-router-dom';\nimport DynamicTable from '../DynamicTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WorkshopList = _ref => {\n  _s();\n\n  let {\n    notification\n  } = _ref;\n  const [serverError, setServerError] = useState(false);\n  const intl = useIntl();\n  const auth = useSelector(state => state.auth);\n  const [openBulk, setOpenBulk] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [totalCount, setTotalCount] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [pageCount, setPageCount] = useState(0);\n  const {\n    workshops,\n    distributor,\n    isDistributor\n  } = useSelector(selectGlobalState);\n  const dispatcher = useDispatch();\n  console.log({\n    pageCount\n  });\n  useEffect(() => {\n    setPageCount(Math.ceil(workshops.totalCount.count / 10));\n  }, [workshops]);\n\n  const fetchAllParts = params => {\n    (async () => {\n      setIsLoading(true);\n\n      try {\n        const response = await dispatcher(getWorkshops({\n          auth,\n          params,\n          distributorId: distributor._id\n        }));\n        params.limit = (params === null || params === void 0 ? void 0 : params.limit) ? params === null || params === void 0 ? void 0 : params.limit : 10;\n        console.log('XXX', response.data.totalCount.count);\n        setPageCount(Math.ceil(response.data.totalCount.count / (params === null || params === void 0 ? void 0 : params.limit)));\n        setTotalCount(response.totalCount.count);\n        setIsLoading(false);\n      } catch (error) {\n        setIsLoading(false);\n\n        if (error.response) {\n          var _error$response$data$;\n\n          notification({\n            status: 'error',\n            description: (_error$response$data$ = error.response.data.message) !== null && _error$response$data$ !== void 0 ? _error$response$data$ : intl.formatMessage(messages.errorMessage)\n          });\n        }\n      }\n    })();\n  };\n\n  const columns = React.useMemo(() => [{\n    Header: 'S. No',\n    accessor: 'sno',\n    Cell: allData => {\n      var _allData$row;\n\n      return /*#__PURE__*/_jsxDEV(Box, {\n        children: (allData === null || allData === void 0 ? void 0 : (_allData$row = allData.row) === null || _allData$row === void 0 ? void 0 : _allData$row.index) + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 18\n      }, this);\n    }\n  }, {\n    Header: 'Workshop Code',\n    accessor: 'code'\n  }, {\n    Header: 'Workshop Name',\n    accessor: 'name'\n  }, {\n    Header: 'Workshop Type',\n    accessor: 'type'\n  }, {\n    Header: 'Branch Code',\n    accessor: row => {\n      var _row$branch;\n\n      return (_row$branch = row.branch) === null || _row$branch === void 0 ? void 0 : _row$branch.branchCode;\n    }\n  }, {\n    Header: 'Owner Name',\n    accessor: 'ownerFullName'\n  }, {\n    Header: 'Mobile Number',\n    accessor: 'mobileNumber'\n  }, {\n    Header: 'Credit Days',\n    accessor: 'creditDays'\n  }, {\n    Header: 'Discount',\n    accessor: 'discount'\n  }], []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-0 p-1 pb-0 \",\n      children: [workshops.data.length > 0 && isDistributor && /*#__PURE__*/_jsxDEV(Box, {\n        textAlign: \"right\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/workshop/add\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"normal\",\n            size: \"md\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-user-plus mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this), intl.formatMessage(messages.addWorkshop)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), !navigator.onLine ? /*#__PURE__*/_jsxDEV(Error, {\n        onRetry: () => {\n          dispatcher(getWorkshops({\n            auth,\n            distributorId: distributor._id,\n            params: {\n              limit: 10,\n              offset: 0\n            }\n          }));\n          setTotalCount(0);\n          setPageCount(0);\n        },\n        title: intl.formatMessage(messages.networkErrorTitle),\n        message: intl.formatMessage(messages.networkErrorMessage),\n        illustrator: serverErrorIllustrator\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this) : serverError ? /*#__PURE__*/_jsxDEV(Error, {\n        onRetry: () => getWorkshops({\n          auth,\n          distributorId: distributor._id\n        }),\n        title: intl.formatMessage(messages.serverErrorTitle),\n        message: intl.formatMessage(messages.serverErrorMessage),\n        illustrator: serverErrorIllustrator\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this) : loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this) : workshops.data.length > 0 ?\n      /*#__PURE__*/\n\n      /*  <WorkshopTable workshops={workshops} isOpen={openBulk} /> */\n      _jsxDEV(Box, {\n        mt: 6,\n        children: /*#__PURE__*/_jsxDEV(DynamicTable, {\n          columns: columns,\n          data: workshops.data,\n          fetchData: fetchAllParts,\n          totalCount: totalCount,\n          controlledPageCount: pageCount,\n          loading: isLoading,\n          skipPageReset: true,\n          params: {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(AdditionOption, { ...optionsProp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WorkshopList, \"1lTcxg1KlfKZkqnm86bzp7p1Wlo=\", false, function () {\n  return [useIntl, useSelector, useSelector, useDispatch];\n});\n\n_c = WorkshopList;\nexport default WorkshopList;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkshopList\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/components/WorkShopList/index.js"],"names":["React","useEffect","useState","Button","Box","useSelector","useDispatch","messages","Error","useIntl","optionsProp","WorkshopTable","AdditionOption","Loading","selectGlobalState","getWorkshops","Link","DynamicTable","WorkshopList","notification","serverError","setServerError","intl","auth","state","openBulk","setOpenBulk","loading","setLoading","totalCount","setTotalCount","isLoading","setIsLoading","pageCount","setPageCount","workshops","distributor","isDistributor","dispatcher","console","log","Math","ceil","count","fetchAllParts","params","response","distributorId","_id","limit","data","error","status","description","message","formatMessage","errorMessage","columns","useMemo","Header","accessor","Cell","allData","row","index","branch","branchCode","length","addWorkshop","navigator","onLine","offset","networkErrorTitle","networkErrorMessage","serverErrorIllustrator","serverErrorTitle","serverErrorMessage"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Button, Box } from '@chakra-ui/react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n/* import { getWorkshops } from './actions'; */\r\nimport messages from './messages';\r\nimport serverErrorIllustrator from '../../assets/img/serverError.svg';\r\nimport Error from '../Error';\r\nimport { useIntl } from 'react-intl';\r\nimport './style.css';\r\nimport { optionsProp } from './constants';\r\nimport WorkshopTable from './Table/WorkshopTable';\r\nimport AdditionOption from '../../utils/AdditionOptions';\r\nimport { Loading } from '../Loading';\r\nimport { selectGlobalState, getWorkshops } from '../../globalSlice';\r\nimport { Link } from 'react-router-dom';\r\nimport DynamicTable from '../DynamicTable';\r\n\r\nconst WorkshopList = ({ notification }) => {\r\n  const [serverError, setServerError] = useState(false);\r\n  const intl = useIntl();\r\n  const auth = useSelector((state) => state.auth);\r\n  const [openBulk, setOpenBulk] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [totalCount, setTotalCount] = useState(0);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [pageCount, setPageCount] = useState(0);\r\n  const { workshops, distributor, isDistributor } =\r\n    useSelector(selectGlobalState);\r\n  const dispatcher = useDispatch();\r\n\r\n  console.log({ pageCount })\r\n\r\n  useEffect(() => {\r\n    setPageCount(Math.ceil(workshops.totalCount.count / 10));\r\n  },[workshops])\r\n\r\n  const fetchAllParts = (params) => {\r\n    (async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const response = await dispatcher(\r\n          getWorkshops({ auth, params, distributorId: distributor._id }),\r\n        );\r\n\r\n        params.limit = params?.limit ? params?.limit : 10;\r\n\r\n        console.log('XXX', response.data.totalCount.count)\r\n        setPageCount(Math.ceil(response.data.totalCount.count / params?.limit));\r\n\r\n        setTotalCount(response.totalCount.count);\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        setIsLoading(false);\r\n        if (error.response) {\r\n          notification({\r\n            status: 'error',\r\n            description:\r\n              error.response.data.message ??\r\n              intl.formatMessage(messages.errorMessage),\r\n          });\r\n        }\r\n      }\r\n    })();\r\n  };\r\n\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: 'S. No',\r\n        accessor: 'sno',\r\n        Cell: (allData) => {\r\n          return <Box>{allData?.row?.index + 1}</Box>;\r\n        },\r\n      },\r\n      {\r\n        Header: 'Workshop Code',\r\n        accessor: 'code',\r\n      },\r\n\r\n      {\r\n        Header: 'Workshop Name',\r\n        accessor: 'name',\r\n      },\r\n      {\r\n        Header: 'Workshop Type',\r\n        accessor: 'type',\r\n      },\r\n      {\r\n        Header: 'Branch Code',\r\n        accessor: (row) => row.branch?.branchCode,\r\n      },\r\n      {\r\n        Header: 'Owner Name',\r\n        accessor: 'ownerFullName',\r\n      },\r\n      {\r\n        Header: 'Mobile Number',\r\n        accessor: 'mobileNumber',\r\n      },\r\n      {\r\n        Header: 'Credit Days',\r\n        accessor: 'creditDays',\r\n      },\r\n      {\r\n        Header: 'Discount',\r\n        accessor: 'discount',\r\n      },\r\n    ],\r\n    [],\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <div className='mb-0 p-1 pb-0 '>\r\n        {workshops.data.length > 0 && isDistributor && (\r\n          <Box textAlign='right'>\r\n            <Link to='/workshop/add'>\r\n              <Button variant='normal' size='md'>\r\n                <i className='fas fa-user-plus mr-2'></i>\r\n                {intl.formatMessage(messages.addWorkshop)}\r\n              </Button>\r\n            </Link>\r\n          </Box>\r\n        )}\r\n        {!navigator.onLine ? (\r\n          <Error\r\n            onRetry={() => {\r\n              dispatcher(\r\n                getWorkshops({\r\n                  auth,\r\n                  distributorId: distributor._id,\r\n                  params: { limit: 10, offset: 0 },\r\n                }),\r\n              );\r\n              setTotalCount(0);\r\n              setPageCount(0);\r\n            }}\r\n            title={intl.formatMessage(messages.networkErrorTitle)}\r\n            message={intl.formatMessage(messages.networkErrorMessage)}\r\n            illustrator={serverErrorIllustrator}\r\n          />\r\n        ) : serverError ? (\r\n          <Error\r\n            onRetry={() =>\r\n              getWorkshops({ auth, distributorId: distributor._id })\r\n            }\r\n            title={intl.formatMessage(messages.serverErrorTitle)}\r\n            message={intl.formatMessage(messages.serverErrorMessage)}\r\n            illustrator={serverErrorIllustrator}\r\n          />\r\n        ) : loading ? (\r\n          <Loading />\r\n        ) : workshops.data.length > 0 ? (\r\n          /*  <WorkshopTable workshops={workshops} isOpen={openBulk} /> */\r\n          <Box mt={6}>\r\n            <DynamicTable\r\n              columns={columns}\r\n              data={workshops.data}\r\n              fetchData={fetchAllParts}\r\n              totalCount={totalCount}\r\n              controlledPageCount={pageCount}\r\n              loading={isLoading}\r\n              skipPageReset={true}\r\n              params={{}}\r\n            />\r\n          </Box>\r\n        ) : (\r\n          <AdditionOption {...optionsProp} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorkshopList;\r\n"]},"metadata":{},"sourceType":"module"}