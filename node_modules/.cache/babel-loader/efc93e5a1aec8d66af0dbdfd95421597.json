{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Work\\\\garaaz-distributor\\\\src\\\\containers\\\\OutstandingAccount\\\\WorkshopOutstandingAcct.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState, useRef, useEffect } from 'react';\nimport Layout from '../Layout';\nimport DynamicTable from '../../components/DynamicTable';\nimport { useIntl } from 'react-intl';\nimport { Box, Menu, MenuButton, Center, MenuList, Button, MenuItem } from '@chakra-ui/react';\nimport ModifiedTableTop from '../../components/TableTop/ModifiedTableTop';\nimport enums from '../../utils/enums';\nimport { FiMoreVertical } from 'react-icons/fi';\nimport readXlsxFile from 'read-excel-file';\nimport { getWorkshopAccounts, selectOutsandingAcct } from './slice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport { useRouteMatch, Switch, Route, useParams, useHistory } from 'react-router-dom';\nimport { BackButton } from '../../components/BackButton';\nimport { UseTitleContext } from '../../App';\nimport messages from './message';\nimport getMoneyFormat from '../../utils/getMoneyFormat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WorkshopAcct = props => {\n  _s();\n\n  const [inputValues, setInputValue] = useState({\n    end: moment().format('DD-MM-YYYY'),\n    start: moment().startOf('month').format('DD-MM-YYYY')\n  });\n  const intl = useIntl();\n  const [isLoading, setIsLoading] = useState(false);\n  const auth = useSelector(state => state.auth);\n  const {\n    workshopAccount,\n    workshopAccountList\n  } = useSelector(selectOutsandingAcct);\n  const dispatcher = useDispatch();\n  const {\n    id\n  } = useParams();\n  const {\n    updateTitle\n  } = UseTitleContext();\n  useEffect(() => {\n    (async () => {\n      var _response$workshopOut;\n\n      setIsLoading(true);\n      const response = await dispatcher(getWorkshopAccounts({\n        auth,\n        id,\n        params: { ...inputValues\n        }\n      }));\n      updateTitle(`${(_response$workshopOut = response.workshopOutstandings) === null || _response$workshopOut === void 0 ? void 0 : _response$workshopOut.workshopName} outstanding`);\n      setIsLoading(false);\n    })();\n  }, [id]);\n  const inputData = useMemo(() => [{\n    title: intl.formatMessage(messages.accountDetailSearch),\n    type: 'text',\n    placeholder: '',\n    name: 'searchAccount'\n  }, {\n    title: intl.formatMessage(messages.groupBy),\n    type: 'select',\n    placeholder: 'Select option',\n    name: 'groupBy',\n    options: [{\n      value: 'none',\n      label: 'None'\n    }, {\n      value: 'branch',\n      label: intl.formatMessage(messages.branch)\n    }, {\n      value: 'salesRep',\n      label: intl.formatMessage(messages.salesRep)\n    }, {\n      value: 'workshopType',\n      label: intl.formatMessage(messages.workshopType)\n    }]\n  }, {\n    title: intl.formatMessage(messages.date),\n    type: 'date',\n    placeholder: 'Enter order No',\n    name: ['start', 'end']\n  }], []);\n  const columns = useMemo(() => [{\n    Header: intl.formatMessage(messages.sNo),\n    accessor: 'sno',\n    Cell: allData => {\n      var _allData$row;\n\n      return /*#__PURE__*/_jsxDEV(Box, {\n        children: (allData === null || allData === void 0 ? void 0 : (_allData$row = allData.row) === null || _allData$row === void 0 ? void 0 : _allData$row.index) + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 18\n      }, this);\n    }\n  }, {\n    Header: intl.formatMessage(messages.workshopName),\n    accessor: 'workshopName'\n  }, {\n    Header: intl.formatMessage(messages.workshopType),\n    accessor: 'workshopType'\n  }, {\n    Header: intl.formatMessage(messages.branch),\n    accessor: 'branch'\n  }, {\n    Header: intl.formatMessage(messages.salesRep),\n    accessor: 'salesRep'\n  }, {\n    Header: intl.formatMessage(messages.totalOutstanding),\n    accessor: 'totalOutstanding',\n    Cell: _ref => {\n      let {\n        value\n      } = _ref;\n      return getMoneyFormat(value);\n    }\n  }], []);\n  const workshopAccountListColumn = useMemo(() => [{\n    Header: intl.formatMessage(messages.sNo),\n    accessor: 'sno',\n    Cell: allData => {\n      var _allData$row2;\n\n      return /*#__PURE__*/_jsxDEV(Box, {\n        children: (allData === null || allData === void 0 ? void 0 : (_allData$row2 = allData.row) === null || _allData$row2 === void 0 ? void 0 : _allData$row2.index) + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 18\n      }, this);\n    }\n  }, {\n    Header: intl.formatMessage(messages.date),\n    accessor: 'createdAt',\n    Cell: _ref2 => {\n      let {\n        value\n      } = _ref2;\n      return moment(value).format('Do MMM, YYYY');\n    }\n  }, {\n    Header: intl.formatMessage(messages.particulars),\n    accessor: 'particulars'\n  }, {\n    Header: intl.formatMessage(messages.vchType),\n    accessor: 'vchType'\n  }, {\n    Header: intl.formatMessage(messages.vchNumber),\n    accessor: 'vchNo'\n  }, {\n    Header: intl.formatMessage(messages.debit),\n    accessor: 'debit',\n    Cell: _ref3 => {\n      let {\n        value\n      } = _ref3;\n      return getMoneyFormat(value);\n    }\n  }], []);\n\n  const handleTableTopChange = async (e, name) => {\n    let value = e.hasOwnProperty('target') ? e.target.value : e;\n\n    if (name === 'end' || name === 'start') {\n      value = moment(value).format('DD-MM-YYYY');\n    }\n\n    setInputValue(prevState => ({ ...prevState,\n      [name]: typeof value === 'object' ? value.value : value\n    }));\n    await dispatcher(getWorkshopAccounts({\n      auth,\n      id,\n      params: { ...inputValues,\n        [name]: typeof value !== 'object' ? value : value.value === 'none' ? '' : value.value\n      }\n    }));\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      minHeight: \"80vh\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    minHeight: \"80vh\",\n    children: [/*#__PURE__*/_jsxDEV(BackButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(DynamicTable, {\n      columns: columns,\n      data: workshopAccount,\n      fetchData: () => console.log('...fetching'),\n      skipPageReset: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      pt: 10,\n      children: /*#__PURE__*/_jsxDEV(DynamicTable, {\n        columns: workshopAccountListColumn,\n        data: workshopAccountList,\n        fetchData: () => console.log('...fetching'),\n        skipPageReset: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WorkshopAcct, \"b4NkYQnpnAr5ZqI3mTTVj16Iqt4=\", false, function () {\n  return [useIntl, useSelector, useSelector, useDispatch, useParams];\n});\n\n_c = WorkshopAcct;\nexport default WorkshopAcct;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkshopAcct\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/containers/OutstandingAccount/WorkshopOutstandingAcct.js"],"names":["React","useMemo","useState","useRef","useEffect","Layout","DynamicTable","useIntl","Box","Menu","MenuButton","Center","MenuList","Button","MenuItem","ModifiedTableTop","enums","FiMoreVertical","readXlsxFile","getWorkshopAccounts","selectOutsandingAcct","useSelector","useDispatch","moment","useRouteMatch","Switch","Route","useParams","useHistory","BackButton","UseTitleContext","messages","getMoneyFormat","WorkshopAcct","props","inputValues","setInputValue","end","format","start","startOf","intl","isLoading","setIsLoading","auth","state","workshopAccount","workshopAccountList","dispatcher","id","updateTitle","response","params","workshopOutstandings","workshopName","inputData","title","formatMessage","accountDetailSearch","type","placeholder","name","groupBy","options","value","label","branch","salesRep","workshopType","date","columns","Header","sNo","accessor","Cell","allData","row","index","totalOutstanding","workshopAccountListColumn","particulars","vchType","vchNumber","debit","handleTableTopChange","e","hasOwnProperty","target","prevState","console","log"],"mappings":"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","sourcesContent":["import React, { useMemo, useState, useRef, useEffect } from 'react';\r\nimport Layout from '../Layout';\r\nimport DynamicTable from '../../components/DynamicTable';\r\nimport { useIntl } from 'react-intl';\r\nimport {\r\n  Box,\r\n  Menu,\r\n  MenuButton,\r\n  Center,\r\n  MenuList,\r\n  Button,\r\n  MenuItem,\r\n} from '@chakra-ui/react';\r\nimport ModifiedTableTop from '../../components/TableTop/ModifiedTableTop';\r\nimport enums from '../../utils/enums';\r\nimport { FiMoreVertical } from 'react-icons/fi';\r\nimport readXlsxFile from 'read-excel-file';\r\nimport { getWorkshopAccounts, selectOutsandingAcct } from './slice';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport moment from 'moment';\r\nimport {useRouteMatch, Switch, Route, useParams, useHistory} from 'react-router-dom';\r\nimport { BackButton } from '../../components/BackButton';\r\nimport { UseTitleContext } from '../../App';\r\nimport messages from './message';\r\nimport getMoneyFormat from '../../utils/getMoneyFormat';\r\n\r\n\r\n\r\nconst WorkshopAcct = (props) => {\r\n  const [inputValues, setInputValue] = useState({end: moment().format('DD-MM-YYYY'), start: moment().startOf('month').format('DD-MM-YYYY')});\r\n  const intl = useIntl();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const auth = useSelector((state) => state.auth);\r\n  const { workshopAccount, workshopAccountList } = useSelector(selectOutsandingAcct);\r\n  const dispatcher = useDispatch();\r\n  const { id } = useParams();\r\n  const { updateTitle }  = UseTitleContext()\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n        setIsLoading(true)\r\n        const response = await dispatcher(getWorkshopAccounts({auth, id, params: {...inputValues}}));\r\n        updateTitle(`${response.workshopOutstandings?.workshopName} outstanding`);\r\n        setIsLoading(false)\r\n    })();\r\n  }, [id]);\r\n\r\n\r\n \r\n  const inputData = useMemo(() =>  [\r\n    {\r\n      title: intl.formatMessage(messages.accountDetailSearch),\r\n      type: 'text',\r\n      placeholder: '',\r\n      name: 'searchAccount',\r\n    },\r\n    {\r\n      title: intl.formatMessage(messages.groupBy),\r\n      type: 'select',\r\n      placeholder: 'Select option',\r\n      name: 'groupBy',\r\n      options: [\r\n        {\r\n          value: 'none',\r\n          label: 'None',\r\n        },\r\n        {\r\n          value: 'branch',\r\n          label: intl.formatMessage(messages.branch),\r\n        },\r\n        {\r\n          value: 'salesRep',\r\n          label: intl.formatMessage(messages.salesRep),\r\n        },\r\n        {\r\n          value: 'workshopType',\r\n          label: intl.formatMessage(messages.workshopType),\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: intl.formatMessage(messages.date),\r\n      type: 'date',\r\n      placeholder: 'Enter order No',\r\n      name: ['start', 'end'],\r\n    },\r\n  ], [])\r\n\r\n\r\n  \r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: intl.formatMessage(messages.sNo),\r\n        accessor: 'sno',\r\n        Cell: (allData) => {\r\n          return <Box>{allData?.row?.index + 1}</Box>;\r\n        },\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.workshopName),\r\n        accessor: 'workshopName',\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.workshopType),\r\n        accessor: 'workshopType',\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.branch),\r\n        accessor: 'branch',\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.salesRep),\r\n        accessor: 'salesRep',\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.totalOutstanding),\r\n        accessor: 'totalOutstanding',\r\n        Cell: ({ value }) => getMoneyFormat(value),\r\n      }\r\n    ],\r\n    [],\r\n  );\r\n\r\n \r\n\r\n  const workshopAccountListColumn = useMemo(\r\n    () => [\r\n      {\r\n        Header: intl.formatMessage(messages.sNo),\r\n        accessor: 'sno',\r\n        Cell: (allData) => {\r\n          return <Box>{allData?.row?.index + 1}</Box>;\r\n        },\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.date),\r\n        accessor: 'createdAt',\r\n        Cell: ({ value }) => moment(value).format('Do MMM, YYYY'),\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.particulars),\r\n        accessor: 'particulars',\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.vchType),\r\n        accessor: 'vchType',\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.vchNumber),\r\n        accessor: 'vchNo',\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.debit),\r\n        accessor: 'debit',\r\n        Cell: ({ value }) => getMoneyFormat(value),\r\n      }\r\n   \r\n    ],\r\n    [],\r\n  );\r\n\r\n  const handleTableTopChange = async (e, name) => {\r\n    let value = e.hasOwnProperty('target') ? e.target.value : e;\r\n    if(name === 'end' || name === 'start'){\r\n        value = moment(value).format('DD-MM-YYYY');\r\n    }\r\n\r\n    setInputValue((prevState) => ({\r\n      ...prevState,\r\n      [name]: typeof value === 'object' ? value.value : value,\r\n    }));\r\n    \r\n\r\n    await dispatcher(\r\n        getWorkshopAccounts({\r\n        auth,\r\n        id,\r\n        params: {\r\n          ...inputValues,\r\n          [name]: typeof value !== 'object' ? value : value.value === 'none'? '' : value.value,\r\n        },\r\n      }),\r\n    );\r\n  };\r\n\r\n \r\n\r\n \r\n\r\n  if(isLoading){\r\n      return (\r\n          <Box minHeight='80vh'>Loading...</Box>\r\n      )\r\n  }\r\n\r\n  return (\r\n\r\n    <Box minHeight='80vh'>\r\n        <BackButton />\r\n     {/*  <ModifiedTableTop inputData={inputData} onChange={handleTableTopChange} /> */}\r\n     <Box mt={2}></Box>\r\n      <DynamicTable\r\n        columns={columns}\r\n        data={workshopAccount}\r\n        fetchData={() => console.log('...fetching')}\r\n        skipPageReset={true}\r\n      />\r\n      <Box pt={10}>\r\n      <DynamicTable\r\n        columns={workshopAccountListColumn}\r\n        data={workshopAccountList}\r\n        fetchData={() => console.log('...fetching')}\r\n        skipPageReset={true}\r\n      />\r\n      </Box>\r\n    </Box>\r\n   \r\n  );\r\n};\r\n\r\nexport default WorkshopAcct;\r\n"]},"metadata":{},"sourceType":"module"}