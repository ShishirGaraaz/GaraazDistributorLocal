{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Work\\\\garaaz-distributor\\\\src\\\\components\\\\PartDetailsForm\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useEffect, useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { useIntl } from 'react-intl';\nimport toast from 'react-hot-toast';\nimport { useDropzone } from 'react-dropzone';\nimport { useSelector } from 'react-redux';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\nimport messages from './messages';\nimport FormactionButtons from '../../utils/FormactionButtons';\nimport { isUndefined } from 'lodash';\nimport CustomSelect from '../../utils/Select';\nimport CustomInput from '../../utils/Input';\nimport { DropZoneStyle } from '../../utils/theme/DropZoneStyle';\nimport { getPart, patchPart, addPart } from '../../containers/PartAddition/action';\nimport { taxSlabs } from './constants';\nimport { useHistory } from 'react-router';\nimport { publicAxios as axios } from '../../axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PartDetailsForm = _ref => {\n  _s();\n\n  let {\n    setActiveStep,\n    setCurrentPart,\n    currentPart\n  } = _ref;\n  const intl = useIntl();\n  const history = useHistory();\n  const auth = useSelector(state => state.auth);\n  const {\n    register,\n    formState: {\n      errors,\n      isSubmitted\n    },\n    handleSubmit,\n    reset,\n    setValue,\n    watch\n  } = useForm({\n    mode: 'onSubmit'\n  });\n  const watchMrp = watch(['mrp']);\n  const [files, setFiles] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const onDrop = useCallback(acceptedFiles => {\n    setFiles(acceptedFiles.map(file => Object.assign(file, {\n      preview: URL.createObjectURL(file)\n    })));\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject,\n    acceptedFiles\n  } = useDropzone({\n    accept: 'image/*',\n    maxFiles: 5,\n    noKeyboard: true,\n    maxSize: 5242880,\n    onDrop\n  });\n  const style = useMemo(() => ({ ...DropZoneStyle.baseStyle,\n    ...(isDragActive ? DropZoneStyle.activeStyle : {}),\n    ...(isDragAccept ? DropZoneStyle.acceptStyle : {}),\n    ...(isDragReject ? DropZoneStyle.rejectStyle : {})\n  }), [isDragActive, isDragReject, isDragAccept]);\n\n  const handelPartState = () => {\n    if (!isEmpty(currentPart)) {\n      setValue('mrp', get(currentPart, 'mrp', ''));\n      setValue('sellingPrice', get(currentPart, 'sellingPrice', ''));\n      setValue('hsnCode', get(currentPart, 'hsnCode', ''));\n      setValue('description', get(currentPart, 'description', ''));\n      setValue('taxSlab', get(currentPart, 'taxSlab', ''));\n\n      if (!isEmpty(currentPart.media)) {\n        const set = currentPart.media.map(m => {\n          return {\n            preview: m,\n            name: ''\n          };\n        });\n        setFiles(set);\n      } else if (isUndefined(currentPart._id) && currentPart.uploadMedia) {\n        onDrop(currentPart.acceptedFiles);\n      }\n    }\n  };\n\n  useEffect(() => {\n    handelPartState();\n  }, [currentPart]);\n\n  const handleFormSubmit = async data => {\n    //media upload handel\n    setLoading(true);\n    const formData = new FormData();\n\n    if (acceptedFiles.length) {\n      data.isMedia = true;\n      data.acceptedFiles = acceptedFiles;\n      files.map(file => formData.append('media', file, file.name));\n      data.uploadMedia = new FormData();\n      data.uploadMedia = formData;\n    }\n\n    if (currentPart._id) {\n      try {\n        await patchPart(auth, { ...currentPart,\n          ...data\n        });\n        setCurrentPart(await getPart(auth, currentPart._id));\n        toast(intl.formatMessage(messages.partUpdateSuccess));\n        history.push('/parts');\n      } catch (error) {\n        toast(intl.formatMessage(messages.somethingWentWrong));\n      }\n    } //means addition\n    else {\n      await addPart(auth, { ...currentPart,\n        ...data\n      });\n      setCurrentPart({});\n      toast(intl.formatMessage(messages.partAddedSuccess));\n      history.push('/parts');\n    }\n\n    setLoading(false);\n  };\n\n  const images = files.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: DropZoneStyle.thumb,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: DropZoneStyle.thumbInner,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: file.preview,\n        style: DropZoneStyle.img\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)\n  }, file.name || index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this));\n  useEffect(() => () => {\n    files.forEach(file => URL.revokeObjectURL(file.preview));\n  }, [files]);\n\n  const onReset = () => {\n    setFiles([]);\n    reset({}, {\n      keepDirty: false,\n      keepErrors: false,\n      keepValues: false\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(handleFormSubmit),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"mt-6 mb-2 font-bold\",\n        children: intl.formatMessage(messages.partMedia)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"mb-6 border-b-1 border-blueGray-200\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap -mx-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full px-4 lg:w-full mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative w-full\",\n            ...getRootProps({\n              style,\n              className: 'dropzone'\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: DropZoneStyle.thumbsContainer,\n              children: images\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this), isDragActive && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: intl.formatMessage(messages.dropFilesHere)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this), !acceptedFiles || acceptedFiles.length === 0 && !isDragActive && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: intl.formatMessage(messages.dragAndDropMessage)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 19\n            }, this), acceptedFiles && acceptedFiles.length > 0 && !isDragActive && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"far fa-file fa-2x\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: acceptedFiles[0].path\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormactionButtons, {\n        isLoading: loading,\n        saveLabel: messages.saveButtonLabel,\n        onReset: onReset,\n        cancleLabel: messages.cancelButtonLabe\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PartDetailsForm, \"NGvMrRDhztEFae1sYpaf1CyY5ds=\", false, function () {\n  return [useIntl, useHistory, useSelector, useForm, useDropzone];\n});\n\n_c = PartDetailsForm;\nPartDetailsForm.propTypes = {\n  setActiveStep: PropTypes.func,\n  setCurrentPart: PropTypes.func,\n  currentPart: PropTypes.object\n};\nexport default PartDetailsForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PartDetailsForm\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/components/PartDetailsForm/index.js"],"names":["React","useMemo","useEffect","useCallback","useState","PropTypes","useForm","useIntl","toast","useDropzone","useSelector","get","isEmpty","messages","FormactionButtons","isUndefined","CustomSelect","CustomInput","DropZoneStyle","getPart","patchPart","addPart","taxSlabs","useHistory","publicAxios","axios","PartDetailsForm","setActiveStep","setCurrentPart","currentPart","intl","history","auth","state","register","formState","errors","isSubmitted","handleSubmit","reset","setValue","watch","mode","watchMrp","files","setFiles","loading","setLoading","onDrop","acceptedFiles","map","file","Object","assign","preview","URL","createObjectURL","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","accept","maxFiles","noKeyboard","maxSize","style","baseStyle","activeStyle","acceptStyle","rejectStyle","handelPartState","media","set","m","name","_id","uploadMedia","handleFormSubmit","data","formData","FormData","length","isMedia","append","formatMessage","partUpdateSuccess","push","error","somethingWentWrong","partAddedSuccess","images","index","thumb","thumbInner","img","forEach","revokeObjectURL","onReset","keepDirty","keepErrors","keepValues","partMedia","className","thumbsContainer","dropFilesHere","dragAndDropMessage","path","saveButtonLabel","cancelButtonLabe","propTypes","func","object"],"mappings":"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","sourcesContent":["import React, { useMemo, useEffect, useCallback, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useIntl } from 'react-intl';\r\nimport toast from 'react-hot-toast';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { useSelector } from 'react-redux';\r\nimport get from 'lodash/get';\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport messages from './messages';\r\nimport FormactionButtons from '../../utils/FormactionButtons';\r\nimport { isUndefined } from 'lodash';\r\nimport CustomSelect from '../../utils/Select';\r\nimport CustomInput from '../../utils/Input';\r\nimport { DropZoneStyle } from '../../utils/theme/DropZoneStyle';\r\nimport { getPart, patchPart, addPart } from '../../containers/PartAddition/action';\r\nimport { taxSlabs } from './constants';\r\nimport { useHistory } from 'react-router';\r\nimport { publicAxios as axios } from '../../axios';\r\n\r\n\r\nconst PartDetailsForm = ({ setActiveStep, setCurrentPart, currentPart }) => {\r\n  const intl = useIntl();\r\n  const history = useHistory();\r\n  const auth = useSelector((state) => state.auth);\r\n  const {\r\n    register,\r\n    formState: { errors, isSubmitted },\r\n    handleSubmit,\r\n    reset,\r\n    setValue,\r\n    watch,\r\n  } = useForm({\r\n    mode: 'onSubmit',\r\n  });\r\n  const watchMrp = watch(['mrp']);\r\n  const [files, setFiles] = useState([]);\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    setFiles(\r\n      acceptedFiles.map((file) =>\r\n        Object.assign(file, {\r\n          preview: URL.createObjectURL(file),\r\n        }),\r\n      ),\r\n    );\r\n  }, []);\r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive,\r\n    isDragAccept,\r\n    isDragReject,\r\n    acceptedFiles,\r\n  } = useDropzone({\r\n    accept: 'image/*',\r\n    maxFiles: 5,\r\n    noKeyboard: true,\r\n    maxSize: 5242880,\r\n    onDrop,\r\n  });\r\n  \r\n\r\n  const style = useMemo(\r\n    () => ({\r\n      ...DropZoneStyle.baseStyle,\r\n      ...(isDragActive ? DropZoneStyle.activeStyle : {}),\r\n      ...(isDragAccept ? DropZoneStyle.acceptStyle : {}),\r\n      ...(isDragReject ? DropZoneStyle.rejectStyle : {}),\r\n    }),\r\n    [isDragActive, isDragReject, isDragAccept],\r\n  );\r\n  const handelPartState = () => {\r\n    if (!isEmpty(currentPart)) {\r\n      setValue('mrp', get(currentPart, 'mrp', ''));\r\n      setValue('sellingPrice', get(currentPart, 'sellingPrice', ''));\r\n      setValue('hsnCode', get(currentPart, 'hsnCode', ''));\r\n      setValue('description', get(currentPart, 'description', ''));\r\n      setValue('taxSlab', get(currentPart, 'taxSlab', ''));\r\n      if (!isEmpty(currentPart.media)) {\r\n        const set = currentPart.media.map((m) => {\r\n          return { preview: m, name: '' };\r\n        });\r\n        setFiles(set);\r\n      } else if (isUndefined(currentPart._id) && currentPart.uploadMedia) {\r\n        onDrop(currentPart.acceptedFiles);\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    handelPartState();\r\n  }, [currentPart]);\r\n\r\n\r\n  const handleFormSubmit = async (data) => {\r\n    //media upload handel\r\n    setLoading(true);\r\n    const formData = new FormData();\r\n  \r\n    if (acceptedFiles.length) {\r\n      data.isMedia = true;\r\n      data.acceptedFiles = acceptedFiles;\r\n      files.map((file) => formData.append('media', file, file.name));\r\n      data.uploadMedia = new FormData();\r\n      data.uploadMedia = formData;\r\n\r\n    }\r\n\r\n  \r\n\r\n    if (currentPart._id) {\r\n      try {\r\n        await patchPart(auth, { ...currentPart, ...data });\r\n        setCurrentPart(await getPart(auth, currentPart._id));\r\n        toast(intl.formatMessage(messages.partUpdateSuccess));\r\n        \r\n        history.push('/parts');\r\n      } catch (error) {\r\n        toast(intl.formatMessage(messages.somethingWentWrong));\r\n      }\r\n   \r\n    }\r\n    //means addition\r\n    else {\r\n      await addPart(auth, { ...currentPart, ...data});\r\n      setCurrentPart({});\r\n      toast(intl.formatMessage(messages.partAddedSuccess));\r\n      history.push('/parts');\r\n    } \r\n\r\n    setLoading(false)\r\n  };\r\n\r\n\r\n  const images = files.map((file, index) => (\r\n    <div style={DropZoneStyle.thumb} key={file.name || index}>\r\n      <div style={DropZoneStyle.thumbInner}>\r\n        <img src={file.preview} style={DropZoneStyle.img} />\r\n      </div>\r\n    </div>\r\n  ));\r\n\r\n  useEffect(\r\n    () => () => {\r\n      files.forEach((file) => URL.revokeObjectURL(file.preview));\r\n    },\r\n    [files],\r\n  );\r\n\r\n  const onReset = () => {\r\n    setFiles([]);\r\n    reset(\r\n      {},\r\n      {\r\n        keepDirty: false,\r\n        keepErrors: false,\r\n        keepValues: false,\r\n      },\r\n    );\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit(handleFormSubmit)}>\r\n      <div>\r\n        <h6 className='mt-6 mb-2 font-bold'>\r\n        {intl.formatMessage(messages.partMedia)}\r\n        </h6>\r\n        <hr className='mb-6 border-b-1 border-blueGray-200' />\r\n        <div className='flex flex-wrap -mx-4'>\r\n        \r\n          <div className='w-full px-4 lg:w-full mb-3'>\r\n          {/*   <label className='block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1'>\r\n              {intl.formatMessage(messages.partMedia)}\r\n            </label> */}\r\n            <div\r\n              className='relative w-full'\r\n              {...getRootProps({ style, className: 'dropzone' })}\r\n            >\r\n              <input {...getInputProps()} />\r\n              <div style={DropZoneStyle.thumbsContainer}>{images}</div>\r\n              {isDragActive && (\r\n                <p>{intl.formatMessage(messages.dropFilesHere)}</p>\r\n              )}\r\n              {!acceptedFiles ||\r\n                (acceptedFiles.length === 0 && !isDragActive && (\r\n                  <p>{intl.formatMessage(messages.dragAndDropMessage)}</p>\r\n                ))}\r\n              {acceptedFiles && acceptedFiles.length > 0 && !isDragActive && (\r\n                <>\r\n                  <p>\r\n                    <i className='far fa-file fa-2x' />\r\n                  </p>\r\n                  <p>{acceptedFiles[0].path}</p>\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <FormactionButtons\r\n          isLoading={loading}\r\n          saveLabel={messages.saveButtonLabel}\r\n          onReset={onReset}\r\n          cancleLabel={messages.cancelButtonLabe}\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nPartDetailsForm.propTypes = {\r\n  setActiveStep: PropTypes.func,\r\n  setCurrentPart: PropTypes.func,\r\n  currentPart: PropTypes.object,\r\n};\r\n\r\nexport default PartDetailsForm;\r\n"]},"metadata":{},"sourceType":"module"}