{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Work\\\\garaaz-distributor\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { ChakraProvider } from '@chakra-ui/react';\nimport LanguageProvider from './containers/LanguageProvider';\nimport store from './configureStore';\nimport { VisitProvider } from './contexts/VisitContext';\nimport { translationMessages } from '../src/i18n';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { CustomizeTheme } from './utils/theme';\nimport 'react-alice-carousel/lib/alice-carousel.css';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst render = messages => {\n  ReactDOM.render( /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(ChakraProvider, {\n      theme: CustomizeTheme,\n      children: /*#__PURE__*/_jsxDEV(LanguageProvider, {\n        messages: messages,\n        children: /*#__PURE__*/_jsxDEV(VisitProvider, {\n          children: /*#__PURE__*/_jsxDEV(Router, {\n            children: /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n              children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this), document.getElementById('root'));\n};\n/* serviceWorker.register() */\n// Chunked polyfill for browsers without Intl support\n\n\nif (!window.Intl) {\n  new Promise(resolve => {\n    resolve(import('intl'));\n  }).then(() => Promise.all([import('intl/locale-data/jsonp/en-IN.js')])).then(() => render(translationMessages)).catch(err => {\n    throw err;\n  });\n} else {\n  render(translationMessages);\n}\n/* if (process.env.NODE_ENV === 'production') {\r\n  require('offline-plugin/runtime').install(); // eslint-disable-line global-require\r\n} */","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/index.js"],"names":["React","ReactDOM","App","Provider","ChakraProvider","LanguageProvider","store","VisitProvider","translationMessages","BrowserRouter","Router","CustomizeTheme","ErrorBoundary","render","messages","document","getElementById","window","Intl","Promise","resolve","then","all","catch","err"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,SAASC,mBAAT,QAAoC,aAApC;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,kBAAxC;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAO,6CAAP;AACA,OAAOC,aAAP,MAA0B,4BAA1B;;;AAEA,MAAMC,MAAM,GAAIC,QAAD,IAAc;AAC3Bb,EAAAA,QAAQ,CAACY,MAAT,eACE,QAAC,QAAD;AAAU,IAAA,KAAK,EAAEP,KAAjB;AAAA,2BACE,QAAC,cAAD;AAAgB,MAAA,KAAK,EAAEK,cAAvB;AAAA,6BACE,QAAC,gBAAD;AAAkB,QAAA,QAAQ,EAAEG,QAA5B;AAAA,+BACE,QAAC,aAAD;AAAA,iCACE,QAAC,MAAD;AAAA,mCACE,QAAC,aAAD;AAAA,qCACA,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF,EAcEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAdF;AAgBD,CAjBD;AAmBA;AAEA;;;AACA,IAAI,CAACC,MAAM,CAACC,IAAZ,EAAkB;AAChB,MAAIC,OAAJ,CAAaC,OAAD,IAAa;AACvBA,IAAAA,OAAO,CAAC,OAAO,MAAP,CAAD,CAAP;AACD,GAFD,EAGGC,IAHH,CAGQ,MAAMF,OAAO,CAACG,GAAR,CAAY,CAAC,OAAO,iCAAP,CAAD,CAAZ,CAHd,EAIGD,IAJH,CAIQ,MAAMR,MAAM,CAACL,mBAAD,CAJpB,EAKGe,KALH,CAKUC,GAAD,IAAS;AACd,UAAMA,GAAN;AACD,GAPH;AAQD,CATD,MASO;AACLX,EAAAA,MAAM,CAACL,mBAAD,CAAN;AACD;AAED;AACA;AACA","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport { ChakraProvider } from '@chakra-ui/react';\r\nimport LanguageProvider from './containers/LanguageProvider';\r\nimport store from './configureStore';\r\nimport { VisitProvider } from './contexts/VisitContext';\r\nimport { translationMessages } from '../src/i18n';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { CustomizeTheme } from './utils/theme';\r\nimport 'react-alice-carousel/lib/alice-carousel.css';\r\nimport ErrorBoundary from './components/ErrorBoundary';\r\n\r\nconst render = (messages) => {\r\n  ReactDOM.render(\r\n    <Provider store={store}>\r\n      <ChakraProvider theme={CustomizeTheme}>\r\n        <LanguageProvider messages={messages}>\r\n          <VisitProvider>\r\n            <Router>\r\n              <ErrorBoundary>\r\n              <App />\r\n              </ErrorBoundary>\r\n            </Router>\r\n          </VisitProvider>\r\n        </LanguageProvider>\r\n      </ChakraProvider>\r\n    </Provider>,\r\n    document.getElementById('root'),\r\n  );\r\n};\r\n\r\n/* serviceWorker.register() */\r\n\r\n// Chunked polyfill for browsers without Intl support\r\nif (!window.Intl) {\r\n  new Promise((resolve) => {\r\n    resolve(import('intl'));\r\n  })\r\n    .then(() => Promise.all([import('intl/locale-data/jsonp/en-IN.js')]))\r\n    .then(() => render(translationMessages))\r\n    .catch((err) => {\r\n      throw err;\r\n    });\r\n} else {\r\n  render(translationMessages);\r\n}\r\n\r\n/* if (process.env.NODE_ENV === 'production') {\r\n  require('offline-plugin/runtime').install(); // eslint-disable-line global-require\r\n} */\r\n"]},"metadata":{},"sourceType":"module"}