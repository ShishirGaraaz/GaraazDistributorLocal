{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Work\\\\garaaz-distributor\\\\src\\\\components\\\\InviteResponse\\\\InviteAnimate.js\";\nimport InviteCard from './inviteCard';\nimport PropTypes from 'prop-types';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst InviteEnvelop = _ref => {\n  let {\n    invites = [],\n    handleSubmit\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lid one\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lid two\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"envelope\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"letter\",\n      children: invites.map((invite, index) => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(InviteCard, {\n            welcomeNote: invite.welcomeNote,\n            handleSubmit: handleSubmit,\n            token: invite.inviteToken\n          }, invite.inviteToken, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 15\n          }, this)\n        }, void 0, false);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = InviteEnvelop;\nInviteEnvelop.propTypes = {\n  handleSubmit: PropTypes.func,\n  invites: PropTypes.array\n};\nexport default InviteEnvelop;\n\nvar _c;\n\n$RefreshReg$(_c, \"InviteEnvelop\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/components/InviteResponse/InviteAnimate.js"],"names":["InviteCard","PropTypes","InviteEnvelop","invites","handleSubmit","map","invite","index","welcomeNote","inviteToken","propTypes","func","array"],"mappings":";AAAA,OAAOA,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,aAAP;;;;AACA,MAAMC,aAAa,GAAG,QAAoC;AAAA,MAAnC;AAAEC,IAAAA,OAAO,GAAG,EAAZ;AAAgBC,IAAAA;AAAhB,GAAmC;AACxD,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,gBAEID,OAAO,CAACE,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,KAAmB;AAC7B,4BAAO;AAAA,iCACL,QAAC,UAAD;AAAqC,YAAA,WAAW,EAAED,MAAM,CAACE,WAAzD;AAAsE,YAAA,YAAY,EAAEJ,YAApF;AAAkG,YAAA,KAAK,EAAEE,MAAM,CAACG;AAAhH,aAAiBH,MAAM,CAACG,WAAxB;AAAA;AAAA;AAAA;AAAA;AADK,yBAAP;AAGD,OAJD;AAFJ;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAjBD;;KAAMP,a;AAkBNA,aAAa,CAACQ,SAAd,GAA0B;AACxBN,EAAAA,YAAY,EAAEH,SAAS,CAACU,IADA;AAExBR,EAAAA,OAAO,EAAEF,SAAS,CAACW;AAFK,CAA1B;AAIA,eAAeV,aAAf","sourcesContent":["import InviteCard from './inviteCard';\r\nimport PropTypes from 'prop-types';\r\nimport './style.css'\r\nconst InviteEnvelop = ({ invites = [], handleSubmit }) => {\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"lid one\"></div>\r\n      <div className=\"lid two\"></div>\r\n      <div className=\"envelope\"></div>\r\n      <div className=\"letter\">\r\n        {\r\n          invites.map((invite, index) => {\r\n            return <>\r\n              <InviteCard key={invite.inviteToken} welcomeNote={invite.welcomeNote} handleSubmit={handleSubmit} token={invite.inviteToken} />\r\n            </>\r\n          })\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nInviteEnvelop.propTypes = {\r\n  handleSubmit: PropTypes.func,\r\n  invites: PropTypes.array\r\n};\r\nexport default InviteEnvelop"]},"metadata":{},"sourceType":"module"}