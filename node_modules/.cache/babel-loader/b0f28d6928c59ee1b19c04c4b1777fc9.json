{"ast":null,"code":"import { Util } from '../Util.js';\nimport { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nexport class Image extends Shape {\n  constructor(attrs) {\n    super(attrs);\n    this.on('imageChange.konva', () => {\n      this._setImageLoad();\n    });\n\n    this._setImageLoad();\n  }\n\n  _setImageLoad() {\n    const image = this.image();\n\n    if (image && image.complete) {\n      return;\n    }\n\n    if (image && image.readyState === 4) {\n      return;\n    }\n\n    if (image && image['addEventListener']) {\n      image['addEventListener']('load', () => {\n        this._requestDraw();\n      });\n    }\n  }\n\n  _useBufferCanvas() {\n    return super._useBufferCanvas(true);\n  }\n\n  _sceneFunc(context) {\n    const width = this.getWidth();\n    const height = this.getHeight();\n    const image = this.attrs.image;\n    let params;\n\n    if (image) {\n      const cropWidth = this.attrs.cropWidth;\n      const cropHeight = this.attrs.cropHeight;\n\n      if (cropWidth && cropHeight) {\n        params = [image, this.cropX(), this.cropY(), cropWidth, cropHeight, 0, 0, width, height];\n      } else {\n        params = [image, 0, 0, width, height];\n      }\n    }\n\n    if (this.hasFill() || this.hasStroke()) {\n      context.beginPath();\n      context.rect(0, 0, width, height);\n      context.closePath();\n      context.fillStrokeShape(this);\n    }\n\n    if (image) {\n      context.drawImage.apply(context, params);\n    }\n  }\n\n  _hitFunc(context) {\n    var width = this.width(),\n        height = this.height();\n    context.beginPath();\n    context.rect(0, 0, width, height);\n    context.closePath();\n    context.fillStrokeShape(this);\n  }\n\n  getWidth() {\n    var _a, _b;\n\n    return (_a = this.attrs.width) !== null && _a !== void 0 ? _a : (_b = this.image()) === null || _b === void 0 ? void 0 : _b.width;\n  }\n\n  getHeight() {\n    var _a, _b;\n\n    return (_a = this.attrs.height) !== null && _a !== void 0 ? _a : (_b = this.image()) === null || _b === void 0 ? void 0 : _b.height;\n  }\n\n  static fromURL(url, callback) {\n    var img = Util.createImageElement();\n\n    img.onload = function () {\n      var image = new Image({\n        image: img\n      });\n      callback(image);\n    };\n\n    img.crossOrigin = 'Anonymous';\n    img.src = url;\n  }\n\n}\nImage.prototype.className = 'Image';\n\n_registerNode(Image);\n\nFactory.addGetterSetter(Image, 'image');\nFactory.addComponentsGetterSetter(Image, 'crop', ['x', 'y', 'width', 'height']);\nFactory.addGetterSetter(Image, 'cropX', 0, getNumberValidator());\nFactory.addGetterSetter(Image, 'cropY', 0, getNumberValidator());\nFactory.addGetterSetter(Image, 'cropWidth', 0, getNumberValidator());\nFactory.addGetterSetter(Image, 'cropHeight', 0, getNumberValidator());","map":{"version":3,"sources":["../../src/shapes/Image.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { Util } from '../Util.js';\nimport { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nexport class Image extends Shape {\n    constructor(attrs) {\n        super(attrs);\n        this.on('imageChange.konva', () => {\n            this._setImageLoad();\n        });\n        this._setImageLoad();\n    }\n    _setImageLoad() {\n        const image = this.image();\n        if (image && image.complete) {\n            return;\n        }\n        if (image && image.readyState === 4) {\n            return;\n        }\n        if (image && image['addEventListener']) {\n            image['addEventListener']('load', () => {\n                this._requestDraw();\n            });\n        }\n    }\n    _useBufferCanvas() {\n        return super._useBufferCanvas(true);\n    }\n    _sceneFunc(context) {\n        const width = this.getWidth();\n        const height = this.getHeight();\n        const image = this.attrs.image;\n        let params;\n        if (image) {\n            const cropWidth = this.attrs.cropWidth;\n            const cropHeight = this.attrs.cropHeight;\n            if (cropWidth && cropHeight) {\n                params = [\n                    image,\n                    this.cropX(),\n                    this.cropY(),\n                    cropWidth,\n                    cropHeight,\n                    0,\n                    0,\n                    width,\n                    height,\n                ];\n            }\n            else {\n                params = [image, 0, 0, width, height];\n            }\n        }\n        if (this.hasFill() || this.hasStroke()) {\n            context.beginPath();\n            context.rect(0, 0, width, height);\n            context.closePath();\n            context.fillStrokeShape(this);\n        }\n        if (image) {\n            context.drawImage.apply(context, params);\n        }\n    }\n    _hitFunc(context) {\n        var width = this.width(), height = this.height();\n        context.beginPath();\n        context.rect(0, 0, width, height);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        var _a, _b;\n        return (_a = this.attrs.width) !== null && _a !== void 0 ? _a : (_b = this.image()) === null || _b === void 0 ? void 0 : _b.width;\n    }\n    getHeight() {\n        var _a, _b;\n        return (_a = this.attrs.height) !== null && _a !== void 0 ? _a : (_b = this.image()) === null || _b === void 0 ? void 0 : _b.height;\n    }\n    static fromURL(url, callback) {\n        var img = Util.createImageElement();\n        img.onload = function () {\n            var image = new Image({\n                image: img,\n            });\n            callback(image);\n        };\n        img.crossOrigin = 'Anonymous';\n        img.src = url;\n    }\n}\nImage.prototype.className = 'Image';\n_registerNode(Image);\nFactory.addGetterSetter(Image, 'image');\nFactory.addComponentsGetterSetter(Image, 'crop', ['x', 'y', 'width', 'height']);\nFactory.addGetterSetter(Image, 'cropX', 0, getNumberValidator());\nFactory.addGetterSetter(Image, 'cropY', 0, getNumberValidator());\nFactory.addGetterSetter(Image, 'cropWidth', 0, getNumberValidator());\nFactory.addGetterSetter(Image, 'cropHeight', 0, getNumberValidator());\n//# sourceMappingURL=Image.js.map"]},"metadata":{},"sourceType":"module"}