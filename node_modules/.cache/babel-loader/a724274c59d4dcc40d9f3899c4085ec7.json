{"ast":null,"code":"import _, { capitalize } from 'lodash';\nimport { paymentOption,\n/* mandatoryFields */\nrequiredFields } from './constants';\nimport { getCities, getStates } from '../../utils/placeApi';\nexport const sheetValidation = async (sheetData, data, acceptedWorkshopsOnboardingHeaders) => {\n  const regX = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  const States = await getStates();\n  let iso2 = '';\n  return await sheetData.map(async row => {\n    const mappedRow = {};\n    const missingFields = [];\n    acceptedWorkshopsOnboardingHeaders.forEach(async header => {\n      try {\n        if (requiredFields.includes(header) && row[data[header]] === '') {\n          // mappedRow[_.camelCase(header)] = 'Mandatory*';\n          mappedRow.isInvalid = true;\n          missingFields.push(header);\n        } else if (header === 'Pin Code' && row[data[header]] && `${row[data[header]]}`.length !== 6) {\n          mappedRow.isInvalid = true;\n          mappedRow[_.camelCase(header)] = '';\n          missingFields.push('Pin Code must be 6 characters');\n        } else if ((header === 'Pan' && row[data[header]] || header === 'Mobile Number' || header === 'Alternate Number' && row[data[header]]) && `${row[data[header]]}`.length !== 10) {\n          mappedRow.isInvalid = true;\n          mappedRow[_.camelCase(header)] = '';\n          missingFields.push(`${header} must be 10 characters`);\n        } else if (header === 'email' && row[data[header]] && !regX.test(row[data[header]])) {\n          mappedRow.isInvalid = true;\n          mappedRow[_.camelCase(header)] = '';\n          missingFields.push('Email is not valid');\n        } else if (header === 'Discount (%)' && row[data[header]] !== '' && typeof parseFloat(row[data[header]]) !== 'number') {\n          mappedRow.isInvalid = true;\n          mappedRow[_.camelCase(header)] = '';\n          missingFields.push(`${header} must be number`);\n        } else if (header === 'Payment Terms' && row[data[header]] && !paymentOption.includes(row[data[header]].toUpperCase())) {\n          mappedRow.isInvalid = true;\n          mappedRow[_.camelCase(header)] = '';\n          missingFields.push(`${header} must be CASH, CREDIT or BOTH`);\n        } else {\n          mappedRow[_.camelCase(header)] = row[data[header]];\n        }\n      } catch (error) {}\n    });\n    const state = States.filter(stat => {\n      return stat.name.toUpperCase() === mappedRow.state.toUpperCase();\n    });\n\n    if (state.length) {\n      iso2 = state[0].iso2;\n    } else {\n      mappedRow.isInvalid = true;\n      mappedRow.state = '';\n      mappedRow.city = '';\n      missingFields.push('State is not valid'); //return mappedRow;\n    }\n\n    const cities = await getCities(iso2);\n    const city = cities.filter(ct => ct.name.toUpperCase() === mappedRow.city.toUpperCase());\n\n    if (city.length) {\n      iso2 = '';\n    } else {\n      iso2 = '';\n      mappedRow.isInvalid = true;\n      mappedRow.city = '';\n      missingFields.push('City is not valid');\n    }\n\n    return {\n      data: mappedRow,\n      missingFields\n    };\n  });\n};","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/components/WorkShopBulk/helper.js"],"names":["_","capitalize","paymentOption","requiredFields","getCities","getStates","sheetValidation","sheetData","data","acceptedWorkshopsOnboardingHeaders","regX","States","iso2","map","row","mappedRow","missingFields","forEach","header","includes","isInvalid","push","length","camelCase","test","parseFloat","toUpperCase","error","state","filter","stat","name","city","cities","ct"],"mappings":"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","sourcesContent":["import _, { capitalize } from 'lodash';\r\nimport {\r\n  paymentOption,\r\n  /* mandatoryFields */ requiredFields,\r\n} from './constants';\r\nimport { getCities, getStates } from '../../utils/placeApi';\r\n\r\nexport const sheetValidation = async (\r\n  sheetData,\r\n  data,\r\n  acceptedWorkshopsOnboardingHeaders,\r\n) => {\r\n  const regX =\r\n    /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  const States = await getStates();\r\n  let iso2 = '';\r\n  return await sheetData.map(async (row) => {\r\n    const mappedRow = {};\r\n    const missingFields = [];\r\n    acceptedWorkshopsOnboardingHeaders.forEach(async (header) => {\r\n      try {\r\n        if (requiredFields.includes(header) && row[data[header]] === '') {\r\n          // mappedRow[_.camelCase(header)] = 'Mandatory*';\r\n          mappedRow.isInvalid = true;\r\n          missingFields.push(header);\r\n        } else if (\r\n          header === 'Pin Code' &&\r\n          row[data[header]] &&\r\n          `${row[data[header]]}`.length !== 6\r\n        ) {\r\n          mappedRow.isInvalid = true;\r\n          mappedRow[_.camelCase(header)] = '';\r\n          missingFields.push('Pin Code must be 6 characters');\r\n        } else if (\r\n          ((header === 'Pan' && row[data[header]]) ||\r\n            header === 'Mobile Number' ||\r\n            (header === 'Alternate Number' && row[data[header]])) &&\r\n          `${row[data[header]]}`.length !== 10\r\n        ) {\r\n          mappedRow.isInvalid = true;\r\n          mappedRow[_.camelCase(header)] = '';\r\n          missingFields.push(`${header} must be 10 characters`)\r\n        } else if (header === 'email' && row[data[header]] &&  !regX.test(row[data[header]])) {\r\n          mappedRow.isInvalid = true;\r\n          mappedRow[_.camelCase(header)] = '';\r\n          missingFields.push('Email is not valid')\r\n        } else if (\r\n          (header === 'Discount (%)') &&\r\n          row[data[header]] !== '' &&\r\n          typeof parseFloat(row[data[header]]) !== 'number'\r\n        ) {\r\n          mappedRow.isInvalid = true;\r\n          mappedRow[_.camelCase(header)] = '';\r\n          missingFields.push(`${header} must be number`)\r\n        } else if (\r\n          header === 'Payment Terms'\r\n          && row[data[header]] &&\r\n          !paymentOption.includes(row[data[header]].toUpperCase())\r\n        ) {\r\n          mappedRow.isInvalid = true;\r\n          mappedRow[_.camelCase(header)] = '';\r\n          missingFields.push(`${header} must be CASH, CREDIT or BOTH`)\r\n        } else {\r\n          mappedRow[_.camelCase(header)] = row[data[header]];\r\n        }\r\n      } catch (error) {}\r\n    });\r\n\r\n      const state = States.filter((stat) => {\r\n        return stat.name.toUpperCase() === mappedRow.state.toUpperCase();\r\n      });\r\n      if (state.length) {\r\n        iso2 = state[0].iso2;\r\n      } else {\r\n        mappedRow.isInvalid = true;\r\n        mappedRow.state = '';\r\n        mappedRow.city = '';\r\n        missingFields.push('State is not valid')\r\n        //return mappedRow;\r\n      }\r\n\r\n\r\n      const cities = await getCities(iso2);\r\n      const city = cities.filter(\r\n        (ct) => ct.name.toUpperCase() === mappedRow.city.toUpperCase(),\r\n      );\r\n      if (city.length) {\r\n        iso2 = '';\r\n      } else {\r\n        iso2 = '';\r\n        mappedRow.isInvalid = true;\r\n        mappedRow.city = '';\r\n        missingFields.push('City is not valid')\r\n      }\r\n\r\n    return {data: mappedRow, missingFields};\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}