{"ast":null,"code":"import { Util, Transform } from './Util.js';\nimport { Factory } from './Factory.js';\nimport { SceneCanvas, HitCanvas } from './Canvas.js';\nimport { Konva } from './Global.js';\nimport { DD } from './DragAndDrop.js';\nimport { getNumberValidator, getStringValidator, getBooleanValidator } from './Validators.js';\nvar ABSOLUTE_OPACITY = 'absoluteOpacity',\n    ALL_LISTENERS = 'allEventListeners',\n    ABSOLUTE_TRANSFORM = 'absoluteTransform',\n    ABSOLUTE_SCALE = 'absoluteScale',\n    CANVAS = 'canvas',\n    CHANGE = 'Change',\n    CHILDREN = 'children',\n    KONVA = 'konva',\n    LISTENING = 'listening',\n    MOUSEENTER = 'mouseenter',\n    MOUSELEAVE = 'mouseleave',\n    NAME = 'name',\n    SET = 'set',\n    SHAPE = 'Shape',\n    SPACE = ' ',\n    STAGE = 'stage',\n    TRANSFORM = 'transform',\n    UPPER_STAGE = 'Stage',\n    VISIBLE = 'visible',\n    TRANSFORM_CHANGE_STR = ['xChange.konva', 'yChange.konva', 'scaleXChange.konva', 'scaleYChange.konva', 'skewXChange.konva', 'skewYChange.konva', 'rotationChange.konva', 'offsetXChange.konva', 'offsetYChange.konva', 'transformsEnabledChange.konva'].join(SPACE);\nlet idCounter = 1;\nexport class Node {\n  constructor(config) {\n    this._id = idCounter++;\n    this.eventListeners = {};\n    this.attrs = {};\n    this.index = 0;\n    this._allEventListeners = null;\n    this.parent = null;\n    this._cache = new Map();\n    this._attachedDepsListeners = new Map();\n    this._lastPos = null;\n    this._batchingTransformChange = false;\n    this._needClearTransformCache = false;\n    this._filterUpToDate = false;\n    this._isUnderCache = false;\n    this._dragEventId = null;\n    this._shouldFireChangeEvents = false;\n    this.setAttrs(config);\n    this._shouldFireChangeEvents = true;\n  }\n\n  hasChildren() {\n    return false;\n  }\n\n  _clearCache(attr) {\n    if ((attr === TRANSFORM || attr === ABSOLUTE_TRANSFORM) && this._cache.get(attr)) {\n      this._cache.get(attr).dirty = true;\n    } else if (attr) {\n      this._cache.delete(attr);\n    } else {\n      this._cache.clear();\n    }\n  }\n\n  _getCache(attr, privateGetter) {\n    var cache = this._cache.get(attr);\n\n    var isTransform = attr === TRANSFORM || attr === ABSOLUTE_TRANSFORM;\n    var invalid = cache === undefined || isTransform && cache.dirty === true;\n\n    if (invalid) {\n      cache = privateGetter.call(this);\n\n      this._cache.set(attr, cache);\n    }\n\n    return cache;\n  }\n\n  _calculate(name, deps, getter) {\n    if (!this._attachedDepsListeners.get(name)) {\n      const depsString = deps.map(dep => dep + 'Change.konva').join(SPACE);\n      this.on(depsString, () => {\n        this._clearCache(name);\n      });\n\n      this._attachedDepsListeners.set(name, true);\n    }\n\n    return this._getCache(name, getter);\n  }\n\n  _getCanvasCache() {\n    return this._cache.get(CANVAS);\n  }\n\n  _clearSelfAndDescendantCache(attr) {\n    this._clearCache(attr);\n\n    if (attr === ABSOLUTE_TRANSFORM) {\n      this.fire('absoluteTransformChange');\n    }\n  }\n\n  clearCache() {\n    this._cache.delete(CANVAS);\n\n    this._clearSelfAndDescendantCache();\n\n    this._requestDraw();\n\n    return this;\n  }\n\n  cache(config) {\n    var conf = config || {};\n    var rect = {};\n\n    if (conf.x === undefined || conf.y === undefined || conf.width === undefined || conf.height === undefined) {\n      rect = this.getClientRect({\n        skipTransform: true,\n        relativeTo: this.getParent()\n      });\n    }\n\n    var width = Math.ceil(conf.width || rect.width),\n        height = Math.ceil(conf.height || rect.height),\n        pixelRatio = conf.pixelRatio,\n        x = conf.x === undefined ? rect.x : conf.x,\n        y = conf.y === undefined ? rect.y : conf.y,\n        offset = conf.offset || 0,\n        drawBorder = conf.drawBorder || false,\n        hitCanvasPixelRatio = conf.hitCanvasPixelRatio || 1;\n\n    if (!width || !height) {\n      Util.error('Can not cache the node. Width or height of the node equals 0. Caching is skipped.');\n      return;\n    }\n\n    width += offset * 2;\n    height += offset * 2;\n    x -= offset;\n    y -= offset;\n    var cachedSceneCanvas = new SceneCanvas({\n      pixelRatio: pixelRatio,\n      width: width,\n      height: height\n    }),\n        cachedFilterCanvas = new SceneCanvas({\n      pixelRatio: pixelRatio,\n      width: 0,\n      height: 0\n    }),\n        cachedHitCanvas = new HitCanvas({\n      pixelRatio: hitCanvasPixelRatio,\n      width: width,\n      height: height\n    }),\n        sceneContext = cachedSceneCanvas.getContext(),\n        hitContext = cachedHitCanvas.getContext();\n    cachedHitCanvas.isCache = true;\n    cachedSceneCanvas.isCache = true;\n\n    this._cache.delete(CANVAS);\n\n    this._filterUpToDate = false;\n\n    if (conf.imageSmoothingEnabled === false) {\n      cachedSceneCanvas.getContext()._context.imageSmoothingEnabled = false;\n      cachedFilterCanvas.getContext()._context.imageSmoothingEnabled = false;\n    }\n\n    sceneContext.save();\n    hitContext.save();\n    sceneContext.translate(-x, -y);\n    hitContext.translate(-x, -y);\n    this._isUnderCache = true;\n\n    this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n\n    this._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\n\n    this.drawScene(cachedSceneCanvas, this);\n    this.drawHit(cachedHitCanvas, this);\n    this._isUnderCache = false;\n    sceneContext.restore();\n    hitContext.restore();\n\n    if (drawBorder) {\n      sceneContext.save();\n      sceneContext.beginPath();\n      sceneContext.rect(0, 0, width, height);\n      sceneContext.closePath();\n      sceneContext.setAttr('strokeStyle', 'red');\n      sceneContext.setAttr('lineWidth', 5);\n      sceneContext.stroke();\n      sceneContext.restore();\n    }\n\n    this._cache.set(CANVAS, {\n      scene: cachedSceneCanvas,\n      filter: cachedFilterCanvas,\n      hit: cachedHitCanvas,\n      x: x,\n      y: y\n    });\n\n    this._requestDraw();\n\n    return this;\n  }\n\n  isCached() {\n    return this._cache.has(CANVAS);\n  }\n\n  getClientRect(config) {\n    throw new Error('abstract \"getClientRect\" method call');\n  }\n\n  _transformedRect(rect, top) {\n    var points = [{\n      x: rect.x,\n      y: rect.y\n    }, {\n      x: rect.x + rect.width,\n      y: rect.y\n    }, {\n      x: rect.x + rect.width,\n      y: rect.y + rect.height\n    }, {\n      x: rect.x,\n      y: rect.y + rect.height\n    }];\n    var minX, minY, maxX, maxY;\n    var trans = this.getAbsoluteTransform(top);\n    points.forEach(function (point) {\n      var transformed = trans.point(point);\n\n      if (minX === undefined) {\n        minX = maxX = transformed.x;\n        minY = maxY = transformed.y;\n      }\n\n      minX = Math.min(minX, transformed.x);\n      minY = Math.min(minY, transformed.y);\n      maxX = Math.max(maxX, transformed.x);\n      maxY = Math.max(maxY, transformed.y);\n    });\n    return {\n      x: minX,\n      y: minY,\n      width: maxX - minX,\n      height: maxY - minY\n    };\n  }\n\n  _drawCachedSceneCanvas(context) {\n    context.save();\n\n    context._applyOpacity(this);\n\n    context._applyGlobalCompositeOperation(this);\n\n    const canvasCache = this._getCanvasCache();\n\n    context.translate(canvasCache.x, canvasCache.y);\n\n    var cacheCanvas = this._getCachedSceneCanvas();\n\n    var ratio = cacheCanvas.pixelRatio;\n    context.drawImage(cacheCanvas._canvas, 0, 0, cacheCanvas.width / ratio, cacheCanvas.height / ratio);\n    context.restore();\n  }\n\n  _drawCachedHitCanvas(context) {\n    var canvasCache = this._getCanvasCache(),\n        hitCanvas = canvasCache.hit;\n\n    context.save();\n    context.translate(canvasCache.x, canvasCache.y);\n    context.drawImage(hitCanvas._canvas, 0, 0, hitCanvas.width / hitCanvas.pixelRatio, hitCanvas.height / hitCanvas.pixelRatio);\n    context.restore();\n  }\n\n  _getCachedSceneCanvas() {\n    var filters = this.filters(),\n        cachedCanvas = this._getCanvasCache(),\n        sceneCanvas = cachedCanvas.scene,\n        filterCanvas = cachedCanvas.filter,\n        filterContext = filterCanvas.getContext(),\n        len,\n        imageData,\n        n,\n        filter;\n\n    if (filters) {\n      if (!this._filterUpToDate) {\n        var ratio = sceneCanvas.pixelRatio;\n        filterCanvas.setSize(sceneCanvas.width / sceneCanvas.pixelRatio, sceneCanvas.height / sceneCanvas.pixelRatio);\n\n        try {\n          len = filters.length;\n          filterContext.clear();\n          filterContext.drawImage(sceneCanvas._canvas, 0, 0, sceneCanvas.getWidth() / ratio, sceneCanvas.getHeight() / ratio);\n          imageData = filterContext.getImageData(0, 0, filterCanvas.getWidth(), filterCanvas.getHeight());\n\n          for (n = 0; n < len; n++) {\n            filter = filters[n];\n\n            if (typeof filter !== 'function') {\n              Util.error('Filter should be type of function, but got ' + typeof filter + ' instead. Please check correct filters');\n              continue;\n            }\n\n            filter.call(this, imageData);\n            filterContext.putImageData(imageData, 0, 0);\n          }\n        } catch (e) {\n          Util.error('Unable to apply filter. ' + e.message + ' This post my help you https://konvajs.org/docs/posts/Tainted_Canvas.html.');\n        }\n\n        this._filterUpToDate = true;\n      }\n\n      return filterCanvas;\n    }\n\n    return sceneCanvas;\n  }\n\n  on(evtStr, handler) {\n    this._cache && this._cache.delete(ALL_LISTENERS);\n\n    if (arguments.length === 3) {\n      return this._delegate.apply(this, arguments);\n    }\n\n    var events = evtStr.split(SPACE),\n        len = events.length,\n        n,\n        event,\n        parts,\n        baseEvent,\n        name;\n\n    for (n = 0; n < len; n++) {\n      event = events[n];\n      parts = event.split('.');\n      baseEvent = parts[0];\n      name = parts[1] || '';\n\n      if (!this.eventListeners[baseEvent]) {\n        this.eventListeners[baseEvent] = [];\n      }\n\n      this.eventListeners[baseEvent].push({\n        name: name,\n        handler: handler\n      });\n    }\n\n    return this;\n  }\n\n  off(evtStr, callback) {\n    var events = (evtStr || '').split(SPACE),\n        len = events.length,\n        n,\n        t,\n        event,\n        parts,\n        baseEvent,\n        name;\n    this._cache && this._cache.delete(ALL_LISTENERS);\n\n    if (!evtStr) {\n      for (t in this.eventListeners) {\n        this._off(t);\n      }\n    }\n\n    for (n = 0; n < len; n++) {\n      event = events[n];\n      parts = event.split('.');\n      baseEvent = parts[0];\n      name = parts[1];\n\n      if (baseEvent) {\n        if (this.eventListeners[baseEvent]) {\n          this._off(baseEvent, name, callback);\n        }\n      } else {\n        for (t in this.eventListeners) {\n          this._off(t, name, callback);\n        }\n      }\n    }\n\n    return this;\n  }\n\n  dispatchEvent(evt) {\n    var e = {\n      target: this,\n      type: evt.type,\n      evt: evt\n    };\n    this.fire(evt.type, e);\n    return this;\n  }\n\n  addEventListener(type, handler) {\n    this.on(type, function (evt) {\n      handler.call(this, evt.evt);\n    });\n    return this;\n  }\n\n  removeEventListener(type) {\n    this.off(type);\n    return this;\n  }\n\n  _delegate(event, selector, handler) {\n    var stopNode = this;\n    this.on(event, function (evt) {\n      var targets = evt.target.findAncestors(selector, true, stopNode);\n\n      for (var i = 0; i < targets.length; i++) {\n        evt = Util.cloneObject(evt);\n        evt.currentTarget = targets[i];\n        handler.call(targets[i], evt);\n      }\n    });\n  }\n\n  remove() {\n    if (this.isDragging()) {\n      this.stopDrag();\n    }\n\n    DD._dragElements.delete(this._id);\n\n    this._remove();\n\n    return this;\n  }\n\n  _clearCaches() {\n    this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n\n    this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n\n    this._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\n\n    this._clearSelfAndDescendantCache(STAGE);\n\n    this._clearSelfAndDescendantCache(VISIBLE);\n\n    this._clearSelfAndDescendantCache(LISTENING);\n  }\n\n  _remove() {\n    this._clearCaches();\n\n    var parent = this.getParent();\n\n    if (parent && parent.children) {\n      parent.children.splice(this.index, 1);\n\n      parent._setChildrenIndices();\n\n      this.parent = null;\n    }\n  }\n\n  destroy() {\n    this.remove();\n    return this;\n  }\n\n  getAttr(attr) {\n    var method = 'get' + Util._capitalize(attr);\n\n    if (Util._isFunction(this[method])) {\n      return this[method]();\n    }\n\n    return this.attrs[attr];\n  }\n\n  getAncestors() {\n    var parent = this.getParent(),\n        ancestors = [];\n\n    while (parent) {\n      ancestors.push(parent);\n      parent = parent.getParent();\n    }\n\n    return ancestors;\n  }\n\n  getAttrs() {\n    return this.attrs || {};\n  }\n\n  setAttrs(config) {\n    this._batchTransformChanges(() => {\n      var key, method;\n\n      if (!config) {\n        return this;\n      }\n\n      for (key in config) {\n        if (key === CHILDREN) {\n          continue;\n        }\n\n        method = SET + Util._capitalize(key);\n\n        if (Util._isFunction(this[method])) {\n          this[method](config[key]);\n        } else {\n          this._setAttr(key, config[key]);\n        }\n      }\n    });\n\n    return this;\n  }\n\n  isListening() {\n    return this._getCache(LISTENING, this._isListening);\n  }\n\n  _isListening(relativeTo) {\n    const listening = this.listening();\n\n    if (!listening) {\n      return false;\n    }\n\n    const parent = this.getParent();\n\n    if (parent && parent !== relativeTo && this !== relativeTo) {\n      return parent._isListening(relativeTo);\n    } else {\n      return true;\n    }\n  }\n\n  isVisible() {\n    return this._getCache(VISIBLE, this._isVisible);\n  }\n\n  _isVisible(relativeTo) {\n    const visible = this.visible();\n\n    if (!visible) {\n      return false;\n    }\n\n    const parent = this.getParent();\n\n    if (parent && parent !== relativeTo && this !== relativeTo) {\n      return parent._isVisible(relativeTo);\n    } else {\n      return true;\n    }\n  }\n\n  shouldDrawHit(top) {\n    let skipDragCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (top) {\n      return this._isVisible(top) && this._isListening(top);\n    }\n\n    var layer = this.getLayer();\n    var layerUnderDrag = false;\n\n    DD._dragElements.forEach(elem => {\n      if (elem.dragStatus !== 'dragging') {\n        return;\n      } else if (elem.node.nodeType === 'Stage') {\n        layerUnderDrag = true;\n      } else if (elem.node.getLayer() === layer) {\n        layerUnderDrag = true;\n      }\n    });\n\n    var dragSkip = !skipDragCheck && !Konva.hitOnDragEnabled && layerUnderDrag;\n    return this.isListening() && this.isVisible() && !dragSkip;\n  }\n\n  show() {\n    this.visible(true);\n    return this;\n  }\n\n  hide() {\n    this.visible(false);\n    return this;\n  }\n\n  getZIndex() {\n    return this.index || 0;\n  }\n\n  getAbsoluteZIndex() {\n    var depth = this.getDepth(),\n        that = this,\n        index = 0,\n        nodes,\n        len,\n        n,\n        child;\n\n    function addChildren(children) {\n      nodes = [];\n      len = children.length;\n\n      for (n = 0; n < len; n++) {\n        child = children[n];\n        index++;\n\n        if (child.nodeType !== SHAPE) {\n          nodes = nodes.concat(child.getChildren().slice());\n        }\n\n        if (child._id === that._id) {\n          n = len;\n        }\n      }\n\n      if (nodes.length > 0 && nodes[0].getDepth() <= depth) {\n        addChildren(nodes);\n      }\n    }\n\n    if (that.nodeType !== UPPER_STAGE) {\n      addChildren(that.getStage().getChildren());\n    }\n\n    return index;\n  }\n\n  getDepth() {\n    var depth = 0,\n        parent = this.parent;\n\n    while (parent) {\n      depth++;\n      parent = parent.parent;\n    }\n\n    return depth;\n  }\n\n  _batchTransformChanges(func) {\n    this._batchingTransformChange = true;\n    func();\n    this._batchingTransformChange = false;\n\n    if (this._needClearTransformCache) {\n      this._clearCache(TRANSFORM);\n\n      this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n    }\n\n    this._needClearTransformCache = false;\n  }\n\n  setPosition(pos) {\n    this._batchTransformChanges(() => {\n      this.x(pos.x);\n      this.y(pos.y);\n    });\n\n    return this;\n  }\n\n  getPosition() {\n    return {\n      x: this.x(),\n      y: this.y()\n    };\n  }\n\n  getRelativePointerPosition() {\n    if (!this.getStage()) {\n      return null;\n    }\n\n    var pos = this.getStage().getPointerPosition();\n\n    if (!pos) {\n      return null;\n    }\n\n    var transform = this.getAbsoluteTransform().copy();\n    transform.invert();\n    return transform.point(pos);\n  }\n\n  getAbsolutePosition(top) {\n    let haveCachedParent = false;\n    let parent = this.parent;\n\n    while (parent) {\n      if (parent.isCached()) {\n        haveCachedParent = true;\n        break;\n      }\n\n      parent = parent.parent;\n    }\n\n    if (haveCachedParent && !top) {\n      top = true;\n    }\n\n    var absoluteMatrix = this.getAbsoluteTransform(top).getMatrix(),\n        absoluteTransform = new Transform(),\n        offset = this.offset();\n    absoluteTransform.m = absoluteMatrix.slice();\n    absoluteTransform.translate(offset.x, offset.y);\n    return absoluteTransform.getTranslation();\n  }\n\n  setAbsolutePosition(pos) {\n    var origTrans = this._clearTransform();\n\n    this.attrs.x = origTrans.x;\n    this.attrs.y = origTrans.y;\n    delete origTrans.x;\n    delete origTrans.y;\n\n    this._clearCache(TRANSFORM);\n\n    var it = this._getAbsoluteTransform().copy();\n\n    it.invert();\n    it.translate(pos.x, pos.y);\n    pos = {\n      x: this.attrs.x + it.getTranslation().x,\n      y: this.attrs.y + it.getTranslation().y\n    };\n\n    this._setTransform(origTrans);\n\n    this.setPosition({\n      x: pos.x,\n      y: pos.y\n    });\n\n    this._clearCache(TRANSFORM);\n\n    this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n\n    return this;\n  }\n\n  _setTransform(trans) {\n    var key;\n\n    for (key in trans) {\n      this.attrs[key] = trans[key];\n    }\n  }\n\n  _clearTransform() {\n    var trans = {\n      x: this.x(),\n      y: this.y(),\n      rotation: this.rotation(),\n      scaleX: this.scaleX(),\n      scaleY: this.scaleY(),\n      offsetX: this.offsetX(),\n      offsetY: this.offsetY(),\n      skewX: this.skewX(),\n      skewY: this.skewY()\n    };\n    this.attrs.x = 0;\n    this.attrs.y = 0;\n    this.attrs.rotation = 0;\n    this.attrs.scaleX = 1;\n    this.attrs.scaleY = 1;\n    this.attrs.offsetX = 0;\n    this.attrs.offsetY = 0;\n    this.attrs.skewX = 0;\n    this.attrs.skewY = 0;\n    return trans;\n  }\n\n  move(change) {\n    var changeX = change.x,\n        changeY = change.y,\n        x = this.x(),\n        y = this.y();\n\n    if (changeX !== undefined) {\n      x += changeX;\n    }\n\n    if (changeY !== undefined) {\n      y += changeY;\n    }\n\n    this.setPosition({\n      x: x,\n      y: y\n    });\n    return this;\n  }\n\n  _eachAncestorReverse(func, top) {\n    var family = [],\n        parent = this.getParent(),\n        len,\n        n;\n\n    if (top && top._id === this._id) {\n      return;\n    }\n\n    family.unshift(this);\n\n    while (parent && (!top || parent._id !== top._id)) {\n      family.unshift(parent);\n      parent = parent.parent;\n    }\n\n    len = family.length;\n\n    for (n = 0; n < len; n++) {\n      func(family[n]);\n    }\n  }\n\n  rotate(theta) {\n    this.rotation(this.rotation() + theta);\n    return this;\n  }\n\n  moveToTop() {\n    if (!this.parent) {\n      Util.warn('Node has no parent. moveToTop function is ignored.');\n      return false;\n    }\n\n    var index = this.index,\n        len = this.parent.getChildren().length;\n\n    if (index < len - 1) {\n      this.parent.children.splice(index, 1);\n      this.parent.children.push(this);\n\n      this.parent._setChildrenIndices();\n\n      return true;\n    }\n\n    return false;\n  }\n\n  moveUp() {\n    if (!this.parent) {\n      Util.warn('Node has no parent. moveUp function is ignored.');\n      return false;\n    }\n\n    var index = this.index,\n        len = this.parent.getChildren().length;\n\n    if (index < len - 1) {\n      this.parent.children.splice(index, 1);\n      this.parent.children.splice(index + 1, 0, this);\n\n      this.parent._setChildrenIndices();\n\n      return true;\n    }\n\n    return false;\n  }\n\n  moveDown() {\n    if (!this.parent) {\n      Util.warn('Node has no parent. moveDown function is ignored.');\n      return false;\n    }\n\n    var index = this.index;\n\n    if (index > 0) {\n      this.parent.children.splice(index, 1);\n      this.parent.children.splice(index - 1, 0, this);\n\n      this.parent._setChildrenIndices();\n\n      return true;\n    }\n\n    return false;\n  }\n\n  moveToBottom() {\n    if (!this.parent) {\n      Util.warn('Node has no parent. moveToBottom function is ignored.');\n      return false;\n    }\n\n    var index = this.index;\n\n    if (index > 0) {\n      this.parent.children.splice(index, 1);\n      this.parent.children.unshift(this);\n\n      this.parent._setChildrenIndices();\n\n      return true;\n    }\n\n    return false;\n  }\n\n  setZIndex(zIndex) {\n    if (!this.parent) {\n      Util.warn('Node has no parent. zIndex parameter is ignored.');\n      return this;\n    }\n\n    if (zIndex < 0 || zIndex >= this.parent.children.length) {\n      Util.warn('Unexpected value ' + zIndex + ' for zIndex property. zIndex is just index of a node in children of its parent. Expected value is from 0 to ' + (this.parent.children.length - 1) + '.');\n    }\n\n    var index = this.index;\n    this.parent.children.splice(index, 1);\n    this.parent.children.splice(zIndex, 0, this);\n\n    this.parent._setChildrenIndices();\n\n    return this;\n  }\n\n  getAbsoluteOpacity() {\n    return this._getCache(ABSOLUTE_OPACITY, this._getAbsoluteOpacity);\n  }\n\n  _getAbsoluteOpacity() {\n    var absOpacity = this.opacity();\n    var parent = this.getParent();\n\n    if (parent && !parent._isUnderCache) {\n      absOpacity *= parent.getAbsoluteOpacity();\n    }\n\n    return absOpacity;\n  }\n\n  moveTo(newContainer) {\n    if (this.getParent() !== newContainer) {\n      this._remove();\n\n      newContainer.add(this);\n    }\n\n    return this;\n  }\n\n  toObject() {\n    var obj = {},\n        attrs = this.getAttrs(),\n        key,\n        val,\n        getter,\n        defaultValue,\n        nonPlainObject;\n    obj.attrs = {};\n\n    for (key in attrs) {\n      val = attrs[key];\n      nonPlainObject = Util.isObject(val) && !Util._isPlainObject(val) && !Util._isArray(val);\n\n      if (nonPlainObject) {\n        continue;\n      }\n\n      getter = typeof this[key] === 'function' && this[key];\n      delete attrs[key];\n      defaultValue = getter ? getter.call(this) : null;\n      attrs[key] = val;\n\n      if (defaultValue !== val) {\n        obj.attrs[key] = val;\n      }\n    }\n\n    obj.className = this.getClassName();\n    return Util._prepareToStringify(obj);\n  }\n\n  toJSON() {\n    return JSON.stringify(this.toObject());\n  }\n\n  getParent() {\n    return this.parent;\n  }\n\n  findAncestors(selector, includeSelf, stopNode) {\n    var res = [];\n\n    if (includeSelf && this._isMatch(selector)) {\n      res.push(this);\n    }\n\n    var ancestor = this.parent;\n\n    while (ancestor) {\n      if (ancestor === stopNode) {\n        return res;\n      }\n\n      if (ancestor._isMatch(selector)) {\n        res.push(ancestor);\n      }\n\n      ancestor = ancestor.parent;\n    }\n\n    return res;\n  }\n\n  isAncestorOf(node) {\n    return false;\n  }\n\n  findAncestor(selector, includeSelf, stopNode) {\n    return this.findAncestors(selector, includeSelf, stopNode)[0];\n  }\n\n  _isMatch(selector) {\n    if (!selector) {\n      return false;\n    }\n\n    if (typeof selector === 'function') {\n      return selector(this);\n    }\n\n    var selectorArr = selector.replace(/ /g, '').split(','),\n        len = selectorArr.length,\n        n,\n        sel;\n\n    for (n = 0; n < len; n++) {\n      sel = selectorArr[n];\n\n      if (!Util.isValidSelector(sel)) {\n        Util.warn('Selector \"' + sel + '\" is invalid. Allowed selectors examples are \"#foo\", \".bar\" or \"Group\".');\n        Util.warn('If you have a custom shape with such className, please change it to start with upper letter like \"Triangle\".');\n        Util.warn('Konva is awesome, right?');\n      }\n\n      if (sel.charAt(0) === '#') {\n        if (this.id() === sel.slice(1)) {\n          return true;\n        }\n      } else if (sel.charAt(0) === '.') {\n        if (this.hasName(sel.slice(1))) {\n          return true;\n        }\n      } else if (this.className === sel || this.nodeType === sel) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  getLayer() {\n    var parent = this.getParent();\n    return parent ? parent.getLayer() : null;\n  }\n\n  getStage() {\n    return this._getCache(STAGE, this._getStage);\n  }\n\n  _getStage() {\n    var parent = this.getParent();\n\n    if (parent) {\n      return parent.getStage();\n    } else {\n      return undefined;\n    }\n  }\n\n  fire(eventType) {\n    let evt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let bubble = arguments.length > 2 ? arguments[2] : undefined;\n    evt.target = evt.target || this;\n\n    if (bubble) {\n      this._fireAndBubble(eventType, evt);\n    } else {\n      this._fire(eventType, evt);\n    }\n\n    return this;\n  }\n\n  getAbsoluteTransform(top) {\n    if (top) {\n      return this._getAbsoluteTransform(top);\n    } else {\n      return this._getCache(ABSOLUTE_TRANSFORM, this._getAbsoluteTransform);\n    }\n  }\n\n  _getAbsoluteTransform(top) {\n    var at;\n\n    if (top) {\n      at = new Transform();\n\n      this._eachAncestorReverse(function (node) {\n        var transformsEnabled = node.transformsEnabled();\n\n        if (transformsEnabled === 'all') {\n          at.multiply(node.getTransform());\n        } else if (transformsEnabled === 'position') {\n          at.translate(node.x() - node.offsetX(), node.y() - node.offsetY());\n        }\n      }, top);\n\n      return at;\n    } else {\n      at = this._cache.get(ABSOLUTE_TRANSFORM) || new Transform();\n\n      if (this.parent) {\n        this.parent.getAbsoluteTransform().copyInto(at);\n      } else {\n        at.reset();\n      }\n\n      var transformsEnabled = this.transformsEnabled();\n\n      if (transformsEnabled === 'all') {\n        at.multiply(this.getTransform());\n      } else if (transformsEnabled === 'position') {\n        const x = this.attrs.x || 0;\n        const y = this.attrs.y || 0;\n        const offsetX = this.attrs.offsetX || 0;\n        const offsetY = this.attrs.offsetY || 0;\n        at.translate(x - offsetX, y - offsetY);\n      }\n\n      at.dirty = false;\n      return at;\n    }\n  }\n\n  getAbsoluteScale(top) {\n    var parent = this;\n\n    while (parent) {\n      if (parent._isUnderCache) {\n        top = parent;\n      }\n\n      parent = parent.getParent();\n    }\n\n    const transform = this.getAbsoluteTransform(top);\n    const attrs = transform.decompose();\n    return {\n      x: attrs.scaleX,\n      y: attrs.scaleY\n    };\n  }\n\n  getAbsoluteRotation() {\n    return this.getAbsoluteTransform().decompose().rotation;\n  }\n\n  getTransform() {\n    return this._getCache(TRANSFORM, this._getTransform);\n  }\n\n  _getTransform() {\n    var _a, _b;\n\n    var m = this._cache.get(TRANSFORM) || new Transform();\n    m.reset();\n    var x = this.x(),\n        y = this.y(),\n        rotation = Konva.getAngle(this.rotation()),\n        scaleX = (_a = this.attrs.scaleX) !== null && _a !== void 0 ? _a : 1,\n        scaleY = (_b = this.attrs.scaleY) !== null && _b !== void 0 ? _b : 1,\n        skewX = this.attrs.skewX || 0,\n        skewY = this.attrs.skewY || 0,\n        offsetX = this.attrs.offsetX || 0,\n        offsetY = this.attrs.offsetY || 0;\n\n    if (x !== 0 || y !== 0) {\n      m.translate(x, y);\n    }\n\n    if (rotation !== 0) {\n      m.rotate(rotation);\n    }\n\n    if (skewX !== 0 || skewY !== 0) {\n      m.skew(skewX, skewY);\n    }\n\n    if (scaleX !== 1 || scaleY !== 1) {\n      m.scale(scaleX, scaleY);\n    }\n\n    if (offsetX !== 0 || offsetY !== 0) {\n      m.translate(-1 * offsetX, -1 * offsetY);\n    }\n\n    m.dirty = false;\n    return m;\n  }\n\n  clone(obj) {\n    var attrs = Util.cloneObject(this.attrs),\n        key,\n        allListeners,\n        len,\n        n,\n        listener;\n\n    for (key in obj) {\n      attrs[key] = obj[key];\n    }\n\n    var node = new this.constructor(attrs);\n\n    for (key in this.eventListeners) {\n      allListeners = this.eventListeners[key];\n      len = allListeners.length;\n\n      for (n = 0; n < len; n++) {\n        listener = allListeners[n];\n\n        if (listener.name.indexOf(KONVA) < 0) {\n          if (!node.eventListeners[key]) {\n            node.eventListeners[key] = [];\n          }\n\n          node.eventListeners[key].push(listener);\n        }\n      }\n    }\n\n    return node;\n  }\n\n  _toKonvaCanvas(config) {\n    config = config || {};\n    var box = this.getClientRect();\n    var stage = this.getStage(),\n        x = config.x !== undefined ? config.x : box.x,\n        y = config.y !== undefined ? config.y : box.y,\n        pixelRatio = config.pixelRatio || 1,\n        canvas = new SceneCanvas({\n      width: config.width || box.width || (stage ? stage.width() : 0),\n      height: config.height || box.height || (stage ? stage.height() : 0),\n      pixelRatio: pixelRatio\n    }),\n        context = canvas.getContext();\n    context.save();\n\n    if (x || y) {\n      context.translate(-1 * x, -1 * y);\n    }\n\n    this.drawScene(canvas);\n    context.restore();\n    return canvas;\n  }\n\n  toCanvas(config) {\n    return this._toKonvaCanvas(config)._canvas;\n  }\n\n  toDataURL(config) {\n    config = config || {};\n    var mimeType = config.mimeType || null,\n        quality = config.quality || null;\n\n    var url = this._toKonvaCanvas(config).toDataURL(mimeType, quality);\n\n    if (config.callback) {\n      config.callback(url);\n    }\n\n    return url;\n  }\n\n  toImage(config) {\n    if (!config || !config.callback) {\n      throw 'callback required for toImage method config argument';\n    }\n\n    var callback = config.callback;\n    delete config.callback;\n\n    Util._urlToImage(this.toDataURL(config), function (img) {\n      callback(img);\n    });\n  }\n\n  setSize(size) {\n    this.width(size.width);\n    this.height(size.height);\n    return this;\n  }\n\n  getSize() {\n    return {\n      width: this.width(),\n      height: this.height()\n    };\n  }\n\n  getClassName() {\n    return this.className || this.nodeType;\n  }\n\n  getType() {\n    return this.nodeType;\n  }\n\n  getDragDistance() {\n    if (this.attrs.dragDistance !== undefined) {\n      return this.attrs.dragDistance;\n    } else if (this.parent) {\n      return this.parent.getDragDistance();\n    } else {\n      return Konva.dragDistance;\n    }\n  }\n\n  _off(type, name, callback) {\n    var evtListeners = this.eventListeners[type],\n        i,\n        evtName,\n        handler;\n\n    for (i = 0; i < evtListeners.length; i++) {\n      evtName = evtListeners[i].name;\n      handler = evtListeners[i].handler;\n\n      if ((evtName !== 'konva' || name === 'konva') && (!name || evtName === name) && (!callback || callback === handler)) {\n        evtListeners.splice(i, 1);\n\n        if (evtListeners.length === 0) {\n          delete this.eventListeners[type];\n          break;\n        }\n\n        i--;\n      }\n    }\n  }\n\n  _fireChangeEvent(attr, oldVal, newVal) {\n    this._fire(attr + CHANGE, {\n      oldVal: oldVal,\n      newVal: newVal\n    });\n  }\n\n  addName(name) {\n    if (!this.hasName(name)) {\n      var oldName = this.name();\n      var newName = oldName ? oldName + ' ' + name : name;\n      this.name(newName);\n    }\n\n    return this;\n  }\n\n  hasName(name) {\n    if (!name) {\n      return false;\n    }\n\n    const fullName = this.name();\n\n    if (!fullName) {\n      return false;\n    }\n\n    var names = (fullName || '').split(/\\s/g);\n    return names.indexOf(name) !== -1;\n  }\n\n  removeName(name) {\n    var names = (this.name() || '').split(/\\s/g);\n    var index = names.indexOf(name);\n\n    if (index !== -1) {\n      names.splice(index, 1);\n      this.name(names.join(' '));\n    }\n\n    return this;\n  }\n\n  setAttr(attr, val) {\n    var func = this[SET + Util._capitalize(attr)];\n\n    if (Util._isFunction(func)) {\n      func.call(this, val);\n    } else {\n      this._setAttr(attr, val);\n    }\n\n    return this;\n  }\n\n  _requestDraw() {\n    if (Konva.autoDrawEnabled) {\n      const drawNode = this.getLayer() || this.getStage();\n      drawNode === null || drawNode === void 0 ? void 0 : drawNode.batchDraw();\n    }\n  }\n\n  _setAttr(key, val) {\n    var oldVal = this.attrs[key];\n\n    if (oldVal === val && !Util.isObject(val)) {\n      return;\n    }\n\n    if (val === undefined || val === null) {\n      delete this.attrs[key];\n    } else {\n      this.attrs[key] = val;\n    }\n\n    if (this._shouldFireChangeEvents) {\n      this._fireChangeEvent(key, oldVal, val);\n    }\n\n    this._requestDraw();\n  }\n\n  _setComponentAttr(key, component, val) {\n    var oldVal;\n\n    if (val !== undefined) {\n      oldVal = this.attrs[key];\n\n      if (!oldVal) {\n        this.attrs[key] = this.getAttr(key);\n      }\n\n      this.attrs[key][component] = val;\n\n      this._fireChangeEvent(key, oldVal, val);\n    }\n  }\n\n  _fireAndBubble(eventType, evt, compareShape) {\n    if (evt && this.nodeType === SHAPE) {\n      evt.target = this;\n    }\n\n    var shouldStop = (eventType === MOUSEENTER || eventType === MOUSELEAVE) && (compareShape && (this === compareShape || this.isAncestorOf && this.isAncestorOf(compareShape)) || this.nodeType === 'Stage' && !compareShape);\n\n    if (!shouldStop) {\n      this._fire(eventType, evt);\n\n      var stopBubble = (eventType === MOUSEENTER || eventType === MOUSELEAVE) && compareShape && compareShape.isAncestorOf && compareShape.isAncestorOf(this) && !compareShape.isAncestorOf(this.parent);\n\n      if ((evt && !evt.cancelBubble || !evt) && this.parent && this.parent.isListening() && !stopBubble) {\n        if (compareShape && compareShape.parent) {\n          this._fireAndBubble.call(this.parent, eventType, evt, compareShape);\n        } else {\n          this._fireAndBubble.call(this.parent, eventType, evt);\n        }\n      }\n    }\n  }\n\n  _getProtoListeners(eventType) {\n    let listeners = this._cache.get(ALL_LISTENERS);\n\n    if (!listeners) {\n      listeners = {};\n      let obj = Object.getPrototypeOf(this);\n\n      while (obj) {\n        if (!obj.eventListeners) {\n          obj = Object.getPrototypeOf(obj);\n          continue;\n        }\n\n        for (var event in obj.eventListeners) {\n          const newEvents = obj.eventListeners[event];\n          const oldEvents = listeners[event] || [];\n          listeners[event] = newEvents.concat(oldEvents);\n        }\n\n        obj = Object.getPrototypeOf(obj);\n      }\n\n      this._cache.set(ALL_LISTENERS, listeners);\n    }\n\n    return listeners[eventType];\n  }\n\n  _fire(eventType, evt) {\n    evt = evt || {};\n    evt.currentTarget = this;\n    evt.type = eventType;\n\n    const topListeners = this._getProtoListeners(eventType);\n\n    if (topListeners) {\n      for (var i = 0; i < topListeners.length; i++) {\n        topListeners[i].handler.call(this, evt);\n      }\n    }\n\n    const selfListeners = this.eventListeners[eventType];\n\n    if (selfListeners) {\n      for (var i = 0; i < selfListeners.length; i++) {\n        selfListeners[i].handler.call(this, evt);\n      }\n    }\n  }\n\n  draw() {\n    this.drawScene();\n    this.drawHit();\n    return this;\n  }\n\n  _createDragElement(evt) {\n    var pointerId = evt ? evt.pointerId : undefined;\n    var stage = this.getStage();\n    var ap = this.getAbsolutePosition();\n    var pos = stage._getPointerById(pointerId) || stage._changedPointerPositions[0] || ap;\n\n    DD._dragElements.set(this._id, {\n      node: this,\n      startPointerPos: pos,\n      offset: {\n        x: pos.x - ap.x,\n        y: pos.y - ap.y\n      },\n      dragStatus: 'ready',\n      pointerId\n    });\n  }\n\n  startDrag(evt) {\n    let bubbleEvent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    if (!DD._dragElements.has(this._id)) {\n      this._createDragElement(evt);\n    }\n\n    const elem = DD._dragElements.get(this._id);\n\n    elem.dragStatus = 'dragging';\n    this.fire('dragstart', {\n      type: 'dragstart',\n      target: this,\n      evt: evt && evt.evt\n    }, bubbleEvent);\n  }\n\n  _setDragPosition(evt, elem) {\n    const pos = this.getStage()._getPointerById(elem.pointerId);\n\n    if (!pos) {\n      return;\n    }\n\n    var newNodePos = {\n      x: pos.x - elem.offset.x,\n      y: pos.y - elem.offset.y\n    };\n    var dbf = this.dragBoundFunc();\n\n    if (dbf !== undefined) {\n      const bounded = dbf.call(this, newNodePos, evt);\n\n      if (!bounded) {\n        Util.warn('dragBoundFunc did not return any value. That is unexpected behavior. You must return new absolute position from dragBoundFunc.');\n      } else {\n        newNodePos = bounded;\n      }\n    }\n\n    if (!this._lastPos || this._lastPos.x !== newNodePos.x || this._lastPos.y !== newNodePos.y) {\n      this.setAbsolutePosition(newNodePos);\n\n      this._requestDraw();\n    }\n\n    this._lastPos = newNodePos;\n  }\n\n  stopDrag(evt) {\n    const elem = DD._dragElements.get(this._id);\n\n    if (elem) {\n      elem.dragStatus = 'stopped';\n    }\n\n    DD._endDragBefore(evt);\n\n    DD._endDragAfter(evt);\n  }\n\n  setDraggable(draggable) {\n    this._setAttr('draggable', draggable);\n\n    this._dragChange();\n  }\n\n  isDragging() {\n    const elem = DD._dragElements.get(this._id);\n\n    return elem ? elem.dragStatus === 'dragging' : false;\n  }\n\n  _listenDrag() {\n    this._dragCleanup();\n\n    this.on('mousedown.konva touchstart.konva', function (evt) {\n      var shouldCheckButton = evt.evt['button'] !== undefined;\n      var canDrag = !shouldCheckButton || Konva.dragButtons.indexOf(evt.evt['button']) >= 0;\n\n      if (!canDrag) {\n        return;\n      }\n\n      if (this.isDragging()) {\n        return;\n      }\n\n      var hasDraggingChild = false;\n\n      DD._dragElements.forEach(elem => {\n        if (this.isAncestorOf(elem.node)) {\n          hasDraggingChild = true;\n        }\n      });\n\n      if (!hasDraggingChild) {\n        this._createDragElement(evt);\n      }\n    });\n  }\n\n  _dragChange() {\n    if (this.attrs.draggable) {\n      this._listenDrag();\n    } else {\n      this._dragCleanup();\n\n      var stage = this.getStage();\n\n      if (!stage) {\n        return;\n      }\n\n      const dragElement = DD._dragElements.get(this._id);\n\n      const isDragging = dragElement && dragElement.dragStatus === 'dragging';\n      const isReady = dragElement && dragElement.dragStatus === 'ready';\n\n      if (isDragging) {\n        this.stopDrag();\n      } else if (isReady) {\n        DD._dragElements.delete(this._id);\n      }\n    }\n  }\n\n  _dragCleanup() {\n    this.off('mousedown.konva');\n    this.off('touchstart.konva');\n  }\n\n  isClientRectOnScreen() {\n    let margin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      x: 0,\n      y: 0\n    };\n    const stage = this.getStage();\n\n    if (!stage) {\n      return false;\n    }\n\n    const screenRect = {\n      x: -margin.x,\n      y: -margin.y,\n      width: stage.width() + margin.x,\n      height: stage.height() + margin.y\n    };\n    return Util.haveIntersection(screenRect, this.getClientRect());\n  }\n\n  static create(data, container) {\n    if (Util._isString(data)) {\n      data = JSON.parse(data);\n    }\n\n    return this._createNode(data, container);\n  }\n\n  static _createNode(obj, container) {\n    var className = Node.prototype.getClassName.call(obj),\n        children = obj.children,\n        no,\n        len,\n        n;\n\n    if (container) {\n      obj.attrs.container = container;\n    }\n\n    if (!Konva[className]) {\n      Util.warn('Can not find a node with class name \"' + className + '\". Fallback to \"Shape\".');\n      className = 'Shape';\n    }\n\n    const Class = Konva[className];\n    no = new Class(obj.attrs);\n\n    if (children) {\n      len = children.length;\n\n      for (n = 0; n < len; n++) {\n        no.add(Node._createNode(children[n]));\n      }\n    }\n\n    return no;\n  }\n\n}\nNode.prototype.nodeType = 'Node';\nNode.prototype._attrsAffectingSize = [];\nNode.prototype.eventListeners = {};\nNode.prototype.on.call(Node.prototype, TRANSFORM_CHANGE_STR, function () {\n  if (this._batchingTransformChange) {\n    this._needClearTransformCache = true;\n    return;\n  }\n\n  this._clearCache(TRANSFORM);\n\n  this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n});\nNode.prototype.on.call(Node.prototype, 'visibleChange.konva', function () {\n  this._clearSelfAndDescendantCache(VISIBLE);\n});\nNode.prototype.on.call(Node.prototype, 'listeningChange.konva', function () {\n  this._clearSelfAndDescendantCache(LISTENING);\n});\nNode.prototype.on.call(Node.prototype, 'opacityChange.konva', function () {\n  this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n});\nconst addGetterSetter = Factory.addGetterSetter;\naddGetterSetter(Node, 'zIndex');\naddGetterSetter(Node, 'absolutePosition');\naddGetterSetter(Node, 'position');\naddGetterSetter(Node, 'x', 0, getNumberValidator());\naddGetterSetter(Node, 'y', 0, getNumberValidator());\naddGetterSetter(Node, 'globalCompositeOperation', 'source-over', getStringValidator());\naddGetterSetter(Node, 'opacity', 1, getNumberValidator());\naddGetterSetter(Node, 'name', '', getStringValidator());\naddGetterSetter(Node, 'id', '', getStringValidator());\naddGetterSetter(Node, 'rotation', 0, getNumberValidator());\nFactory.addComponentsGetterSetter(Node, 'scale', ['x', 'y']);\naddGetterSetter(Node, 'scaleX', 1, getNumberValidator());\naddGetterSetter(Node, 'scaleY', 1, getNumberValidator());\nFactory.addComponentsGetterSetter(Node, 'skew', ['x', 'y']);\naddGetterSetter(Node, 'skewX', 0, getNumberValidator());\naddGetterSetter(Node, 'skewY', 0, getNumberValidator());\nFactory.addComponentsGetterSetter(Node, 'offset', ['x', 'y']);\naddGetterSetter(Node, 'offsetX', 0, getNumberValidator());\naddGetterSetter(Node, 'offsetY', 0, getNumberValidator());\naddGetterSetter(Node, 'dragDistance', null, getNumberValidator());\naddGetterSetter(Node, 'width', 0, getNumberValidator());\naddGetterSetter(Node, 'height', 0, getNumberValidator());\naddGetterSetter(Node, 'listening', true, getBooleanValidator());\naddGetterSetter(Node, 'preventDefault', true, getBooleanValidator());\naddGetterSetter(Node, 'filters', null, function (val) {\n  this._filterUpToDate = false;\n  return val;\n});\naddGetterSetter(Node, 'visible', true, getBooleanValidator());\naddGetterSetter(Node, 'transformsEnabled', 'all', getStringValidator());\naddGetterSetter(Node, 'size');\naddGetterSetter(Node, 'dragBoundFunc');\naddGetterSetter(Node, 'draggable', false, getBooleanValidator());\nFactory.backCompat(Node, {\n  rotateDeg: 'rotate',\n  setRotationDeg: 'setRotation',\n  getRotationDeg: 'getRotation'\n});","map":{"version":3,"sources":["../src/Node.ts"],"names":[],"mappings":"AAAA,SAAS,IAAT,EAAe,SAAf,QAAgC,WAAhC;AACA,SAAS,OAAT,QAAwB,cAAxB;AACA,SAAS,WAAT,EAAsB,SAAtB,QAA+C,aAA/C;AACA,SAAS,KAAT,QAAsB,aAAtB;AAGA,SAAS,EAAT,QAAmB,kBAAnB;AACA,SACE,kBADF,EAEE,kBAFF,EAGE,mBAHF,QAIO,iBAJP;AAsEA,IAAI,gBAAgB,GAAG,iBAAvB;AAAA,IACE,aAAa,GAAG,mBADlB;AAAA,IAEE,kBAAkB,GAAG,mBAFvB;AAAA,IAGE,cAAc,GAAG,eAHnB;AAAA,IAIE,MAAM,GAAG,QAJX;AAAA,IAKE,MAAM,GAAG,QALX;AAAA,IAME,QAAQ,GAAG,UANb;AAAA,IAOE,KAAK,GAAG,OAPV;AAAA,IAQE,SAAS,GAAG,WARd;AAAA,IASE,UAAU,GAAG,YATf;AAAA,IAUE,UAAU,GAAG,YAVf;AAAA,IAWE,IAAI,GAAG,MAXT;AAAA,IAYE,GAAG,GAAG,KAZR;AAAA,IAaE,KAAK,GAAG,OAbV;AAAA,IAcE,KAAK,GAAG,GAdV;AAAA,IAeE,KAAK,GAAG,OAfV;AAAA,IAgBE,SAAS,GAAG,WAhBd;AAAA,IAiBE,WAAW,GAAG,OAjBhB;AAAA,IAkBE,OAAO,GAAG,SAlBZ;AAAA,IAmBE,oBAAoB,GAAG,CACrB,eADqB,EAErB,eAFqB,EAGrB,oBAHqB,EAIrB,oBAJqB,EAKrB,mBALqB,EAMrB,mBANqB,EAOrB,sBAPqB,EAQrB,qBARqB,EASrB,qBATqB,EAUrB,+BAVqB,EAWrB,IAXqB,CAWhB,KAXgB,CAnBzB;AAgCA,IAAI,SAAS,GAAG,CAAhB;AA6BA,OAAM,MAAgB,IAAhB,CAAoB;AAwBxB,EAAA,WAAA,CAAY,MAAZ,EAA2B;AAvB3B,SAAA,GAAA,GAAM,SAAS,EAAf;AACA,SAAA,cAAA,GAEI,EAFJ;AAGA,SAAA,KAAA,GAAa,EAAb;AACA,SAAA,KAAA,GAAQ,CAAR;AACA,SAAA,kBAAA,GAA6C,IAA7C;AACA,SAAA,MAAA,GAAiC,IAAjC;AACA,SAAA,MAAA,GAA2B,IAAI,GAAJ,EAA3B;AACA,SAAA,sBAAA,GAA+C,IAAI,GAAJ,EAA/C;AACA,SAAA,QAAA,GAAqB,IAArB;AAEA,SAAA,wBAAA,GAA2B,KAA3B;AACA,SAAA,wBAAA,GAA2B,KAA3B;AAEA,SAAA,eAAA,GAAkB,KAAlB;AACA,SAAA,aAAA,GAAgB,KAAhB;AAIA,SAAA,YAAA,GAA8B,IAA9B;AACA,SAAA,uBAAA,GAA0B,KAA1B;AAKE,SAAK,QAAL,CAAc,MAAd;AACA,SAAK,uBAAL,GAA+B,IAA/B;AAGD;;AAED,EAAA,WAAW,GAAA;AACT,WAAO,KAAP;AACD;;AAED,EAAA,WAAW,CAAC,IAAD,EAAc;AAKvB,QACE,CAAC,IAAI,KAAK,SAAT,IAAsB,IAAI,KAAK,kBAAhC,KACA,KAAK,MAAL,CAAY,GAAZ,CAAgB,IAAhB,CAFF,EAGE;AACC,WAAK,MAAL,CAAY,GAAZ,CAAgB,IAAhB,EAAoC,KAApC,GAA4C,IAA5C;AACF,KALD,MAKO,IAAI,IAAJ,EAAU;AACf,WAAK,MAAL,CAAY,MAAZ,CAAmB,IAAnB;AACD,KAFM,MAEA;AACL,WAAK,MAAL,CAAY,KAAZ;AACD;AACF;;AACD,EAAA,SAAS,CAAC,IAAD,EAAe,aAAf,EAAsC;AAC7C,QAAI,KAAK,GAAG,KAAK,MAAL,CAAY,GAAZ,CAAgB,IAAhB,CAAZ;;AAIA,QAAI,WAAW,GAAG,IAAI,KAAK,SAAT,IAAsB,IAAI,KAAK,kBAAjD;AACA,QAAI,OAAO,GAAG,KAAK,KAAK,SAAV,IAAwB,WAAW,IAAI,KAAK,CAAC,KAAN,KAAgB,IAArE;;AAGA,QAAI,OAAJ,EAAa;AACX,MAAA,KAAK,GAAG,aAAa,CAAC,IAAd,CAAmB,IAAnB,CAAR;;AACA,WAAK,MAAL,CAAY,GAAZ,CAAgB,IAAhB,EAAsB,KAAtB;AACD;;AAED,WAAO,KAAP;AACD;;AAED,EAAA,UAAU,CAAC,IAAD,EAAe,IAAf,EAAoC,MAApC,EAAoD;AAG5D,QAAI,CAAC,KAAK,sBAAL,CAA4B,GAA5B,CAAgC,IAAhC,CAAL,EAA4C;AAC1C,YAAM,UAAU,GAAG,IAAI,CAAC,GAAL,CAAU,GAAD,IAAS,GAAG,GAAG,cAAxB,EAAwC,IAAxC,CAA6C,KAA7C,CAAnB;AACA,WAAK,EAAL,CAAQ,UAAR,EAAoB,MAAK;AACvB,aAAK,WAAL,CAAiB,IAAjB;AACD,OAFD;;AAGA,WAAK,sBAAL,CAA4B,GAA5B,CAAgC,IAAhC,EAAsC,IAAtC;AACD;;AAED,WAAO,KAAK,SAAL,CAAe,IAAf,EAAqB,MAArB,CAAP;AACD;;AAED,EAAA,eAAe,GAAA;AACb,WAAO,KAAK,MAAL,CAAY,GAAZ,CAAgB,MAAhB,CAAP;AACD;;AAKD,EAAA,4BAA4B,CAAC,IAAD,EAAc;AACxC,SAAK,WAAL,CAAiB,IAAjB;;AAEA,QAAI,IAAI,KAAK,kBAAb,EAAiC;AAC/B,WAAK,IAAL,CAAU,yBAAV;AACD;AACF;;AASD,EAAA,UAAU,GAAA;AACR,SAAK,MAAL,CAAY,MAAZ,CAAmB,MAAnB;;AACA,SAAK,4BAAL;;AACA,SAAK,YAAL;;AACA,WAAO,IAAP;AACD;;AA6CD,EAAA,KAAK,CAAC,MAAD,EAUJ;AACC,QAAI,IAAI,GAAG,MAAM,IAAI,EAArB;AACA,QAAI,IAAI,GAAG,EAAX;;AAIA,QACE,IAAI,CAAC,CAAL,KAAW,SAAX,IACA,IAAI,CAAC,CAAL,KAAW,SADX,IAEA,IAAI,CAAC,KAAL,KAAe,SAFf,IAGA,IAAI,CAAC,MAAL,KAAgB,SAJlB,EAKE;AACA,MAAA,IAAI,GAAG,KAAK,aAAL,CAAmB;AACxB,QAAA,aAAa,EAAE,IADS;AAExB,QAAA,UAAU,EAAE,KAAK,SAAL;AAFY,OAAnB,CAAP;AAID;;AACD,QAAI,KAAK,GAAG,IAAI,CAAC,IAAL,CAAU,IAAI,CAAC,KAAL,IAAc,IAAI,CAAC,KAA7B,CAAZ;AAAA,QACE,MAAM,GAAG,IAAI,CAAC,IAAL,CAAU,IAAI,CAAC,MAAL,IAAe,IAAI,CAAC,MAA9B,CADX;AAAA,QAEE,UAAU,GAAG,IAAI,CAAC,UAFpB;AAAA,QAGE,CAAC,GAAG,IAAI,CAAC,CAAL,KAAW,SAAX,GAAuB,IAAI,CAAC,CAA5B,GAAgC,IAAI,CAAC,CAH3C;AAAA,QAIE,CAAC,GAAG,IAAI,CAAC,CAAL,KAAW,SAAX,GAAuB,IAAI,CAAC,CAA5B,GAAgC,IAAI,CAAC,CAJ3C;AAAA,QAKE,MAAM,GAAG,IAAI,CAAC,MAAL,IAAe,CAL1B;AAAA,QAME,UAAU,GAAG,IAAI,CAAC,UAAL,IAAmB,KANlC;AAAA,QAOE,mBAAmB,GAAG,IAAI,CAAC,mBAAL,IAA4B,CAPpD;;AASA,QAAI,CAAC,KAAD,IAAU,CAAC,MAAf,EAAuB;AACrB,MAAA,IAAI,CAAC,KAAL,CACE,mFADF;AAGA;AACD;;AAED,IAAA,KAAK,IAAI,MAAM,GAAG,CAAlB;AACA,IAAA,MAAM,IAAI,MAAM,GAAG,CAAnB;AAEA,IAAA,CAAC,IAAI,MAAL;AACA,IAAA,CAAC,IAAI,MAAL;AAEA,QAAI,iBAAiB,GAAG,IAAI,WAAJ,CAAgB;AACpC,MAAA,UAAU,EAAE,UADwB;AAEpC,MAAA,KAAK,EAAE,KAF6B;AAGpC,MAAA,MAAM,EAAE;AAH4B,KAAhB,CAAxB;AAAA,QAKE,kBAAkB,GAAG,IAAI,WAAJ,CAAgB;AACnC,MAAA,UAAU,EAAE,UADuB;AAEnC,MAAA,KAAK,EAAE,CAF4B;AAGnC,MAAA,MAAM,EAAE;AAH2B,KAAhB,CALvB;AAAA,QAUE,eAAe,GAAG,IAAI,SAAJ,CAAc;AAC9B,MAAA,UAAU,EAAE,mBADkB;AAE9B,MAAA,KAAK,EAAE,KAFuB;AAG9B,MAAA,MAAM,EAAE;AAHsB,KAAd,CAVpB;AAAA,QAeE,YAAY,GAAG,iBAAiB,CAAC,UAAlB,EAfjB;AAAA,QAgBE,UAAU,GAAG,eAAe,CAAC,UAAhB,EAhBf;AAkBA,IAAA,eAAe,CAAC,OAAhB,GAA0B,IAA1B;AACA,IAAA,iBAAiB,CAAC,OAAlB,GAA4B,IAA5B;;AAEA,SAAK,MAAL,CAAY,MAAZ,CAAmB,MAAnB;;AACA,SAAK,eAAL,GAAuB,KAAvB;;AAEA,QAAI,IAAI,CAAC,qBAAL,KAA+B,KAAnC,EAA0C;AACxC,MAAA,iBAAiB,CAAC,UAAlB,GAA+B,QAA/B,CAAwC,qBAAxC,GAAgE,KAAhE;AACA,MAAA,kBAAkB,CAAC,UAAnB,GAAgC,QAAhC,CAAyC,qBAAzC,GAAiE,KAAjE;AACD;;AAED,IAAA,YAAY,CAAC,IAAb;AACA,IAAA,UAAU,CAAC,IAAX;AAEA,IAAA,YAAY,CAAC,SAAb,CAAuB,CAAC,CAAxB,EAA2B,CAAC,CAA5B;AACA,IAAA,UAAU,CAAC,SAAX,CAAqB,CAAC,CAAtB,EAAyB,CAAC,CAA1B;AAGA,SAAK,aAAL,GAAqB,IAArB;;AACA,SAAK,4BAAL,CAAkC,gBAAlC;;AACA,SAAK,4BAAL,CAAkC,cAAlC;;AAEA,SAAK,SAAL,CAAe,iBAAf,EAAkC,IAAlC;AACA,SAAK,OAAL,CAAa,eAAb,EAA8B,IAA9B;AACA,SAAK,aAAL,GAAqB,KAArB;AAEA,IAAA,YAAY,CAAC,OAAb;AACA,IAAA,UAAU,CAAC,OAAX;;AAIA,QAAI,UAAJ,EAAgB;AACd,MAAA,YAAY,CAAC,IAAb;AACA,MAAA,YAAY,CAAC,SAAb;AACA,MAAA,YAAY,CAAC,IAAb,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,KAAxB,EAA+B,MAA/B;AACA,MAAA,YAAY,CAAC,SAAb;AACA,MAAA,YAAY,CAAC,OAAb,CAAqB,aAArB,EAAoC,KAApC;AACA,MAAA,YAAY,CAAC,OAAb,CAAqB,WAArB,EAAkC,CAAlC;AACA,MAAA,YAAY,CAAC,MAAb;AACA,MAAA,YAAY,CAAC,OAAb;AACD;;AAED,SAAK,MAAL,CAAY,GAAZ,CAAgB,MAAhB,EAAwB;AACtB,MAAA,KAAK,EAAE,iBADe;AAEtB,MAAA,MAAM,EAAE,kBAFc;AAGtB,MAAA,GAAG,EAAE,eAHiB;AAItB,MAAA,CAAC,EAAE,CAJmB;AAKtB,MAAA,CAAC,EAAE;AALmB,KAAxB;;AAQA,SAAK,YAAL;;AAEA,WAAO,IAAP;AACD;;AAQD,EAAA,QAAQ,GAAA;AACN,WAAO,KAAK,MAAL,CAAY,GAAZ,CAAgB,MAAhB,CAAP;AACD;;AAwCD,EAAA,aAAa,CAAC,MAAD,EAKZ;AAGC,UAAM,IAAI,KAAJ,CAAU,sCAAV,CAAN;AACD;;AACD,EAAA,gBAAgB,CAAC,IAAD,EAAc,GAAd,EAAuB;AACrC,QAAI,MAAM,GAAG,CACX;AAAE,MAAA,CAAC,EAAE,IAAI,CAAC,CAAV;AAAa,MAAA,CAAC,EAAE,IAAI,CAAC;AAArB,KADW,EAEX;AAAE,MAAA,CAAC,EAAE,IAAI,CAAC,CAAL,GAAS,IAAI,CAAC,KAAnB;AAA0B,MAAA,CAAC,EAAE,IAAI,CAAC;AAAlC,KAFW,EAGX;AAAE,MAAA,CAAC,EAAE,IAAI,CAAC,CAAL,GAAS,IAAI,CAAC,KAAnB;AAA0B,MAAA,CAAC,EAAE,IAAI,CAAC,CAAL,GAAS,IAAI,CAAC;AAA3C,KAHW,EAIX;AAAE,MAAA,CAAC,EAAE,IAAI,CAAC,CAAV;AAAa,MAAA,CAAC,EAAE,IAAI,CAAC,CAAL,GAAS,IAAI,CAAC;AAA9B,KAJW,CAAb;AAMA,QAAI,IAAJ,EAAkB,IAAlB,EAAgC,IAAhC,EAA8C,IAA9C;AACA,QAAI,KAAK,GAAG,KAAK,oBAAL,CAA0B,GAA1B,CAAZ;AACA,IAAA,MAAM,CAAC,OAAP,CAAe,UAAU,KAAV,EAAe;AAC5B,UAAI,WAAW,GAAG,KAAK,CAAC,KAAN,CAAY,KAAZ,CAAlB;;AACA,UAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,QAAA,IAAI,GAAG,IAAI,GAAG,WAAW,CAAC,CAA1B;AACA,QAAA,IAAI,GAAG,IAAI,GAAG,WAAW,CAAC,CAA1B;AACD;;AACD,MAAA,IAAI,GAAG,IAAI,CAAC,GAAL,CAAS,IAAT,EAAe,WAAW,CAAC,CAA3B,CAAP;AACA,MAAA,IAAI,GAAG,IAAI,CAAC,GAAL,CAAS,IAAT,EAAe,WAAW,CAAC,CAA3B,CAAP;AACA,MAAA,IAAI,GAAG,IAAI,CAAC,GAAL,CAAS,IAAT,EAAe,WAAW,CAAC,CAA3B,CAAP;AACA,MAAA,IAAI,GAAG,IAAI,CAAC,GAAL,CAAS,IAAT,EAAe,WAAW,CAAC,CAA3B,CAAP;AACD,KAVD;AAWA,WAAO;AACL,MAAA,CAAC,EAAE,IADE;AAEL,MAAA,CAAC,EAAE,IAFE;AAGL,MAAA,KAAK,EAAE,IAAI,GAAG,IAHT;AAIL,MAAA,MAAM,EAAE,IAAI,GAAG;AAJV,KAAP;AAMD;;AACD,EAAA,sBAAsB,CAAC,OAAD,EAAiB;AACrC,IAAA,OAAO,CAAC,IAAR;;AACA,IAAA,OAAO,CAAC,aAAR,CAAsB,IAAtB;;AACA,IAAA,OAAO,CAAC,8BAAR,CAAuC,IAAvC;;AAEA,UAAM,WAAW,GAAG,KAAK,eAAL,EAApB;;AACA,IAAA,OAAO,CAAC,SAAR,CAAkB,WAAW,CAAC,CAA9B,EAAiC,WAAW,CAAC,CAA7C;;AAEA,QAAI,WAAW,GAAG,KAAK,qBAAL,EAAlB;;AACA,QAAI,KAAK,GAAG,WAAW,CAAC,UAAxB;AAEA,IAAA,OAAO,CAAC,SAAR,CACE,WAAW,CAAC,OADd,EAEE,CAFF,EAGE,CAHF,EAIE,WAAW,CAAC,KAAZ,GAAoB,KAJtB,EAKE,WAAW,CAAC,MAAZ,GAAqB,KALvB;AAOA,IAAA,OAAO,CAAC,OAAR;AACD;;AACD,EAAA,oBAAoB,CAAC,OAAD,EAAiB;AACnC,QAAI,WAAW,GAAG,KAAK,eAAL,EAAlB;AAAA,QACE,SAAS,GAAG,WAAW,CAAC,GAD1B;;AAEA,IAAA,OAAO,CAAC,IAAR;AACA,IAAA,OAAO,CAAC,SAAR,CAAkB,WAAW,CAAC,CAA9B,EAAiC,WAAW,CAAC,CAA7C;AACA,IAAA,OAAO,CAAC,SAAR,CACE,SAAS,CAAC,OADZ,EAEE,CAFF,EAGE,CAHF,EAIE,SAAS,CAAC,KAAV,GAAkB,SAAS,CAAC,UAJ9B,EAKE,SAAS,CAAC,MAAV,GAAmB,SAAS,CAAC,UAL/B;AAOA,IAAA,OAAO,CAAC,OAAR;AACD;;AACD,EAAA,qBAAqB,GAAA;AACnB,QAAI,OAAO,GAAG,KAAK,OAAL,EAAd;AAAA,QACE,YAAY,GAAG,KAAK,eAAL,EADjB;AAAA,QAEE,WAAW,GAAG,YAAY,CAAC,KAF7B;AAAA,QAGE,YAAY,GAAG,YAAY,CAAC,MAH9B;AAAA,QAIE,aAAa,GAAG,YAAY,CAAC,UAAb,EAJlB;AAAA,QAKE,GALF;AAAA,QAME,SANF;AAAA,QAOE,CAPF;AAAA,QAQE,MARF;;AAUA,QAAI,OAAJ,EAAa;AACX,UAAI,CAAC,KAAK,eAAV,EAA2B;AACzB,YAAI,KAAK,GAAG,WAAW,CAAC,UAAxB;AACA,QAAA,YAAY,CAAC,OAAb,CACE,WAAW,CAAC,KAAZ,GAAoB,WAAW,CAAC,UADlC,EAEE,WAAW,CAAC,MAAZ,GAAqB,WAAW,CAAC,UAFnC;;AAIA,YAAI;AACF,UAAA,GAAG,GAAG,OAAO,CAAC,MAAd;AACA,UAAA,aAAa,CAAC,KAAd;AAGA,UAAA,aAAa,CAAC,SAAd,CACE,WAAW,CAAC,OADd,EAEE,CAFF,EAGE,CAHF,EAIE,WAAW,CAAC,QAAZ,KAAyB,KAJ3B,EAKE,WAAW,CAAC,SAAZ,KAA0B,KAL5B;AAOA,UAAA,SAAS,GAAG,aAAa,CAAC,YAAd,CACV,CADU,EAEV,CAFU,EAGV,YAAY,CAAC,QAAb,EAHU,EAIV,YAAY,CAAC,SAAb,EAJU,CAAZ;;AAQA,eAAK,CAAC,GAAG,CAAT,EAAY,CAAC,GAAG,GAAhB,EAAqB,CAAC,EAAtB,EAA0B;AACxB,YAAA,MAAM,GAAG,OAAO,CAAC,CAAD,CAAhB;;AACA,gBAAI,OAAO,MAAP,KAAkB,UAAtB,EAAkC;AAChC,cAAA,IAAI,CAAC,KAAL,CACE,gDACE,OAAO,MADT,GAEE,wCAHJ;AAKA;AACD;;AACD,YAAA,MAAM,CAAC,IAAP,CAAY,IAAZ,EAAkB,SAAlB;AACA,YAAA,aAAa,CAAC,YAAd,CAA2B,SAA3B,EAAsC,CAAtC,EAAyC,CAAzC;AACD;AACF,SAjCD,CAiCE,OAAO,CAAP,EAAU;AACV,UAAA,IAAI,CAAC,KAAL,CACE,6BACE,CAAC,CAAC,OADJ,GAEE,4EAHJ;AAKD;;AAED,aAAK,eAAL,GAAuB,IAAvB;AACD;;AAED,aAAO,YAAP;AACD;;AACD,WAAO,WAAP;AACD;;AA8DD,EAAA,EAAE,CACA,MADA,EAEA,OAFA,EAEkD;AAElD,SAAK,MAAL,IAAe,KAAK,MAAL,CAAY,MAAZ,CAAmB,aAAnB,CAAf;;AAEA,QAAI,SAAS,CAAC,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,aAAO,KAAK,SAAL,CAAe,KAAf,CAAqB,IAArB,EAA2B,SAA3B,CAAP;AACD;;AACD,QAAI,MAAM,GAAI,MAAiB,CAAC,KAAlB,CAAwB,KAAxB,CAAd;AAAA,QACE,GAAG,GAAG,MAAM,CAAC,MADf;AAAA,QAEE,CAFF;AAAA,QAGE,KAHF;AAAA,QAIE,KAJF;AAAA,QAKE,SALF;AAAA,QAME,IANF;;AAaA,SAAK,CAAC,GAAG,CAAT,EAAY,CAAC,GAAG,GAAhB,EAAqB,CAAC,EAAtB,EAA0B;AACxB,MAAA,KAAK,GAAG,MAAM,CAAC,CAAD,CAAd;AACA,MAAA,KAAK,GAAG,KAAK,CAAC,KAAN,CAAY,GAAZ,CAAR;AACA,MAAA,SAAS,GAAG,KAAK,CAAC,CAAD,CAAjB;AACA,MAAA,IAAI,GAAG,KAAK,CAAC,CAAD,CAAL,IAAY,EAAnB;;AAGA,UAAI,CAAC,KAAK,cAAL,CAAoB,SAApB,CAAL,EAAqC;AACnC,aAAK,cAAL,CAAoB,SAApB,IAAiC,EAAjC;AACD;;AAED,WAAK,cAAL,CAAoB,SAApB,EAA+B,IAA/B,CAAoC;AAClC,QAAA,IAAI,EAAE,IAD4B;AAElC,QAAA,OAAO,EAAE;AAFyB,OAApC;AAID;;AAED,WAAO,IAAP;AACD;;AAsBD,EAAA,GAAG,CAAC,MAAD,EAAkB,QAAlB,EAAqC;AACtC,QAAI,MAAM,GAAG,CAAC,MAAM,IAAI,EAAX,EAAe,KAAf,CAAqB,KAArB,CAAb;AAAA,QACE,GAAG,GAAG,MAAM,CAAC,MADf;AAAA,QAEE,CAFF;AAAA,QAGE,CAHF;AAAA,QAIE,KAJF;AAAA,QAKE,KALF;AAAA,QAME,SANF;AAAA,QAOE,IAPF;AASA,SAAK,MAAL,IAAe,KAAK,MAAL,CAAY,MAAZ,CAAmB,aAAnB,CAAf;;AAEA,QAAI,CAAC,MAAL,EAAa;AAEX,WAAK,CAAL,IAAU,KAAK,cAAf,EAA+B;AAC7B,aAAK,IAAL,CAAU,CAAV;AACD;AACF;;AACD,SAAK,CAAC,GAAG,CAAT,EAAY,CAAC,GAAG,GAAhB,EAAqB,CAAC,EAAtB,EAA0B;AACxB,MAAA,KAAK,GAAG,MAAM,CAAC,CAAD,CAAd;AACA,MAAA,KAAK,GAAG,KAAK,CAAC,KAAN,CAAY,GAAZ,CAAR;AACA,MAAA,SAAS,GAAG,KAAK,CAAC,CAAD,CAAjB;AACA,MAAA,IAAI,GAAG,KAAK,CAAC,CAAD,CAAZ;;AAEA,UAAI,SAAJ,EAAe;AACb,YAAI,KAAK,cAAL,CAAoB,SAApB,CAAJ,EAAoC;AAClC,eAAK,IAAL,CAAU,SAAV,EAAqB,IAArB,EAA2B,QAA3B;AACD;AACF,OAJD,MAIO;AACL,aAAK,CAAL,IAAU,KAAK,cAAf,EAA+B;AAC7B,eAAK,IAAL,CAAU,CAAV,EAAa,IAAb,EAAmB,QAAnB;AACD;AACF;AACF;;AACD,WAAO,IAAP;AACD;;AAED,EAAA,aAAa,CAAC,GAAD,EAAS;AACpB,QAAI,CAAC,GAAG;AACN,MAAA,MAAM,EAAE,IADF;AAEN,MAAA,IAAI,EAAE,GAAG,CAAC,IAFJ;AAGN,MAAA,GAAG,EAAE;AAHC,KAAR;AAKA,SAAK,IAAL,CAAU,GAAG,CAAC,IAAd,EAAoB,CAApB;AACA,WAAO,IAAP;AACD;;AACD,EAAA,gBAAgB,CAAC,IAAD,EAAe,OAAf,EAA0C;AAExD,SAAK,EAAL,CAAQ,IAAR,EAAc,UAAU,GAAV,EAAa;AACzB,MAAA,OAAO,CAAC,IAAR,CAAa,IAAb,EAAmB,GAAG,CAAC,GAAvB;AACD,KAFD;AAGA,WAAO,IAAP;AACD;;AACD,EAAA,mBAAmB,CAAC,IAAD,EAAa;AAC9B,SAAK,GAAL,CAAS,IAAT;AACA,WAAO,IAAP;AACD;;AAED,EAAA,SAAS,CAAC,KAAD,EAAgB,QAAhB,EAAkC,OAAlC,EAA6D;AACpE,QAAI,QAAQ,GAAG,IAAf;AACA,SAAK,EAAL,CAAQ,KAAR,EAAe,UAAU,GAAV,EAAa;AAC1B,UAAI,OAAO,GAAG,GAAG,CAAC,MAAJ,CAAW,aAAX,CAAyB,QAAzB,EAAmC,IAAnC,EAAyC,QAAzC,CAAd;;AACA,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,OAAO,CAAC,MAA5B,EAAoC,CAAC,EAArC,EAAyC;AACvC,QAAA,GAAG,GAAG,IAAI,CAAC,WAAL,CAAiB,GAAjB,CAAN;AACA,QAAA,GAAG,CAAC,aAAJ,GAAoB,OAAO,CAAC,CAAD,CAA3B;AACA,QAAA,OAAO,CAAC,IAAR,CAAa,OAAO,CAAC,CAAD,CAApB,EAAyB,GAAzB;AACD;AACF,KAPD;AAQD;;AASD,EAAA,MAAM,GAAA;AACJ,QAAI,KAAK,UAAL,EAAJ,EAAuB;AACrB,WAAK,QAAL;AACD;;AAGD,IAAA,EAAE,CAAC,aAAH,CAAiB,MAAjB,CAAwB,KAAK,GAA7B;;AACA,SAAK,OAAL;;AACA,WAAO,IAAP;AACD;;AACD,EAAA,YAAY,GAAA;AACV,SAAK,4BAAL,CAAkC,kBAAlC;;AACA,SAAK,4BAAL,CAAkC,gBAAlC;;AACA,SAAK,4BAAL,CAAkC,cAAlC;;AACA,SAAK,4BAAL,CAAkC,KAAlC;;AACA,SAAK,4BAAL,CAAkC,OAAlC;;AACA,SAAK,4BAAL,CAAkC,SAAlC;AACD;;AACD,EAAA,OAAO,GAAA;AAGL,SAAK,YAAL;;AAEA,QAAI,MAAM,GAAG,KAAK,SAAL,EAAb;;AAEA,QAAI,MAAM,IAAI,MAAM,CAAC,QAArB,EAA+B;AAC7B,MAAA,MAAM,CAAC,QAAP,CAAgB,MAAhB,CAAuB,KAAK,KAA5B,EAAmC,CAAnC;;AACA,MAAA,MAAM,CAAC,mBAAP;;AACA,WAAK,MAAL,GAAc,IAAd;AACD;AACF;;AASD,EAAA,OAAO,GAAA;AACL,SAAK,MAAL;AACA,WAAO,IAAP;AACD;;AAUD,EAAA,OAAO,CAAC,IAAD,EAAa;AAClB,QAAI,MAAM,GAAG,QAAQ,IAAI,CAAC,WAAL,CAAiB,IAAjB,CAArB;;AACA,QAAI,IAAI,CAAC,WAAL,CAAkB,KAAa,MAAb,CAAlB,CAAJ,EAA6C;AAC3C,aAAQ,KAAa,MAAb,GAAR;AACD;;AAED,WAAO,KAAK,KAAL,CAAW,IAAX,CAAP;AACD;;AAWD,EAAA,YAAY,GAAA;AACV,QAAI,MAAM,GAAG,KAAK,SAAL,EAAb;AAAA,QACE,SAAS,GAAgB,EAD3B;;AAGA,WAAO,MAAP,EAAe;AACb,MAAA,SAAS,CAAC,IAAV,CAAe,MAAf;AACA,MAAA,MAAM,GAAG,MAAM,CAAC,SAAP,EAAT;AACD;;AAED,WAAO,SAAP;AACD;;AAOD,EAAA,QAAQ,GAAA;AACN,WAAO,KAAK,KAAL,IAAc,EAArB;AACD;;AAaD,EAAA,QAAQ,CAAC,MAAD,EAAY;AAClB,SAAK,sBAAL,CAA4B,MAAK;AAC/B,UAAI,GAAJ,EAAS,MAAT;;AACA,UAAI,CAAC,MAAL,EAAa;AACX,eAAO,IAAP;AACD;;AACD,WAAK,GAAL,IAAY,MAAZ,EAAoB;AAClB,YAAI,GAAG,KAAK,QAAZ,EAAsB;AACpB;AACD;;AACD,QAAA,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,WAAL,CAAiB,GAAjB,CAAf;;AAEA,YAAI,IAAI,CAAC,WAAL,CAAiB,KAAK,MAAL,CAAjB,CAAJ,EAAoC;AAClC,eAAK,MAAL,EAAa,MAAM,CAAC,GAAD,CAAnB;AACD,SAFD,MAEO;AAEL,eAAK,QAAL,CAAc,GAAd,EAAmB,MAAM,CAAC,GAAD,CAAzB;AACD;AACF;AACF,KAlBD;;AAoBA,WAAO,IAAP;AACD;;AAgBD,EAAA,WAAW,GAAA;AACT,WAAO,KAAK,SAAL,CAAe,SAAf,EAA0B,KAAK,YAA/B,CAAP;AACD;;AACD,EAAA,YAAY,CAAC,UAAD,EAAkB;AAC5B,UAAM,SAAS,GAAG,KAAK,SAAL,EAAlB;;AACA,QAAI,CAAC,SAAL,EAAgB;AACd,aAAO,KAAP;AACD;;AACD,UAAM,MAAM,GAAG,KAAK,SAAL,EAAf;;AACA,QAAI,MAAM,IAAI,MAAM,KAAK,UAArB,IAAmC,SAAS,UAAhD,EAA4D;AAC1D,aAAO,MAAM,CAAC,YAAP,CAAoB,UAApB,CAAP;AACD,KAFD,MAEO;AACL,aAAO,IAAP;AACD;AACF;;AAeD,EAAA,SAAS,GAAA;AACP,WAAO,KAAK,SAAL,CAAe,OAAf,EAAwB,KAAK,UAA7B,CAAP;AACD;;AACD,EAAA,UAAU,CAAC,UAAD,EAAkB;AAC1B,UAAM,OAAO,GAAG,KAAK,OAAL,EAAhB;;AACA,QAAI,CAAC,OAAL,EAAc;AACZ,aAAO,KAAP;AACD;;AACD,UAAM,MAAM,GAAG,KAAK,SAAL,EAAf;;AACA,QAAI,MAAM,IAAI,MAAM,KAAK,UAArB,IAAmC,SAAS,UAAhD,EAA4D;AAC1D,aAAO,MAAM,CAAC,UAAP,CAAkB,UAAlB,CAAP;AACD,KAFD,MAEO;AACL,aAAO,IAAP;AACD;AACF;;AACD,EAAA,aAAa,CAAC,GAAD,EAAkC;AAAA,QAArB,aAAqB,uEAAL,KAAK;;AAC7C,QAAI,GAAJ,EAAS;AACP,aAAO,KAAK,UAAL,CAAgB,GAAhB,KAAwB,KAAK,YAAL,CAAkB,GAAlB,CAA/B;AACD;;AACD,QAAI,KAAK,GAAG,KAAK,QAAL,EAAZ;AAEA,QAAI,cAAc,GAAG,KAArB;;AACA,IAAA,EAAE,CAAC,aAAH,CAAiB,OAAjB,CAA0B,IAAD,IAAS;AAChC,UAAI,IAAI,CAAC,UAAL,KAAoB,UAAxB,EAAoC;AAClC;AACD,OAFD,MAEO,IAAI,IAAI,CAAC,IAAL,CAAU,QAAV,KAAuB,OAA3B,EAAoC;AACzC,QAAA,cAAc,GAAG,IAAjB;AACD,OAFM,MAEA,IAAI,IAAI,CAAC,IAAL,CAAU,QAAV,OAAyB,KAA7B,EAAoC;AACzC,QAAA,cAAc,GAAG,IAAjB;AACD;AACF,KARD;;AAUA,QAAI,QAAQ,GAAG,CAAC,aAAD,IAAkB,CAAC,KAAK,CAAC,gBAAzB,IAA6C,cAA5D;AACA,WAAO,KAAK,WAAL,MAAsB,KAAK,SAAL,EAAtB,IAA0C,CAAC,QAAlD;AACD;;AAQD,EAAA,IAAI,GAAA;AACF,SAAK,OAAL,CAAa,IAAb;AACA,WAAO,IAAP;AACD;;AAOD,EAAA,IAAI,GAAA;AACF,SAAK,OAAL,CAAa,KAAb;AACA,WAAO,IAAP;AACD;;AACD,EAAA,SAAS,GAAA;AACP,WAAO,KAAK,KAAL,IAAc,CAArB;AACD;;AAQD,EAAA,iBAAiB,GAAA;AACf,QAAI,KAAK,GAAG,KAAK,QAAL,EAAZ;AAAA,QACE,IAAI,GAAG,IADT;AAAA,QAEE,KAAK,GAAG,CAFV;AAAA,QAGE,KAHF;AAAA,QAIE,GAJF;AAAA,QAKE,CALF;AAAA,QAME,KANF;;AAQA,aAAS,WAAT,CAAqB,QAArB,EAA6B;AAC3B,MAAA,KAAK,GAAG,EAAR;AACA,MAAA,GAAG,GAAG,QAAQ,CAAC,MAAf;;AACA,WAAK,CAAC,GAAG,CAAT,EAAY,CAAC,GAAG,GAAhB,EAAqB,CAAC,EAAtB,EAA0B;AACxB,QAAA,KAAK,GAAG,QAAQ,CAAC,CAAD,CAAhB;AACA,QAAA,KAAK;;AAEL,YAAI,KAAK,CAAC,QAAN,KAAmB,KAAvB,EAA8B;AAC5B,UAAA,KAAK,GAAG,KAAK,CAAC,MAAN,CAAa,KAAK,CAAC,WAAN,GAAoB,KAApB,EAAb,CAAR;AACD;;AAED,YAAI,KAAK,CAAC,GAAN,KAAc,IAAI,CAAC,GAAvB,EAA4B;AAC1B,UAAA,CAAC,GAAG,GAAJ;AACD;AACF;;AAED,UAAI,KAAK,CAAC,MAAN,GAAe,CAAf,IAAoB,KAAK,CAAC,CAAD,CAAL,CAAS,QAAT,MAAuB,KAA/C,EAAsD;AACpD,QAAA,WAAW,CAAC,KAAD,CAAX;AACD;AACF;;AACD,QAAI,IAAI,CAAC,QAAL,KAAkB,WAAtB,EAAmC;AACjC,MAAA,WAAW,CAAC,IAAI,CAAC,QAAL,GAAgB,WAAhB,EAAD,CAAX;AACD;;AAED,WAAO,KAAP;AACD;;AASD,EAAA,QAAQ,GAAA;AACN,QAAI,KAAK,GAAG,CAAZ;AAAA,QACE,MAAM,GAAG,KAAK,MADhB;;AAGA,WAAO,MAAP,EAAe;AACb,MAAA,KAAK;AACL,MAAA,MAAM,GAAG,MAAM,CAAC,MAAhB;AACD;;AACD,WAAO,KAAP;AACD;;AAMD,EAAA,sBAAsB,CAAC,IAAD,EAAK;AACzB,SAAK,wBAAL,GAAgC,IAAhC;AACA,IAAA,IAAI;AACJ,SAAK,wBAAL,GAAgC,KAAhC;;AACA,QAAI,KAAK,wBAAT,EAAmC;AACjC,WAAK,WAAL,CAAiB,SAAjB;;AACA,WAAK,4BAAL,CAAkC,kBAAlC;AACD;;AACD,SAAK,wBAAL,GAAgC,KAAhC;AACD;;AAED,EAAA,WAAW,CAAC,GAAD,EAAc;AACvB,SAAK,sBAAL,CAA4B,MAAK;AAC/B,WAAK,CAAL,CAAO,GAAG,CAAC,CAAX;AACA,WAAK,CAAL,CAAO,GAAG,CAAC,CAAX;AACD,KAHD;;AAIA,WAAO,IAAP;AACD;;AACD,EAAA,WAAW,GAAA;AACT,WAAO;AACL,MAAA,CAAC,EAAE,KAAK,CAAL,EADE;AAEL,MAAA,CAAC,EAAE,KAAK,CAAL;AAFE,KAAP;AAID;;AAaD,EAAA,0BAA0B,GAAA;AACxB,QAAI,CAAC,KAAK,QAAL,EAAL,EAAsB;AACpB,aAAO,IAAP;AACD;;AAED,QAAI,GAAG,GAAG,KAAK,QAAL,GAAgB,kBAAhB,EAAV;;AACA,QAAI,CAAC,GAAL,EAAU;AACR,aAAO,IAAP;AACD;;AACD,QAAI,SAAS,GAAG,KAAK,oBAAL,GAA4B,IAA5B,EAAhB;AAEA,IAAA,SAAS,CAAC,MAAV;AAEA,WAAO,SAAS,CAAC,KAAV,CAAgB,GAAhB,CAAP;AACD;;AAgBD,EAAA,mBAAmB,CAAC,GAAD,EAAW;AAC5B,QAAI,gBAAgB,GAAG,KAAvB;AACA,QAAI,MAAM,GAAG,KAAK,MAAlB;;AACA,WAAO,MAAP,EAAe;AACb,UAAI,MAAM,CAAC,QAAP,EAAJ,EAAuB;AACrB,QAAA,gBAAgB,GAAG,IAAnB;AACA;AACD;;AACD,MAAA,MAAM,GAAG,MAAM,CAAC,MAAhB;AACD;;AACD,QAAI,gBAAgB,IAAI,CAAC,GAAzB,EAA8B;AAG5B,MAAA,GAAG,GAAG,IAAN;AACD;;AACD,QAAI,cAAc,GAAG,KAAK,oBAAL,CAA0B,GAA1B,EAA+B,SAA/B,EAArB;AAAA,QACE,iBAAiB,GAAG,IAAI,SAAJ,EADtB;AAAA,QAEE,MAAM,GAAG,KAAK,MAAL,EAFX;AAKA,IAAA,iBAAiB,CAAC,CAAlB,GAAsB,cAAc,CAAC,KAAf,EAAtB;AACA,IAAA,iBAAiB,CAAC,SAAlB,CAA4B,MAAM,CAAC,CAAnC,EAAsC,MAAM,CAAC,CAA7C;AAEA,WAAO,iBAAiB,CAAC,cAAlB,EAAP;AACD;;AACD,EAAA,mBAAmB,CAAC,GAAD,EAAc;AAC/B,QAAI,SAAS,GAAG,KAAK,eAAL,EAAhB;;AAGA,SAAK,KAAL,CAAW,CAAX,GAAe,SAAS,CAAC,CAAzB;AACA,SAAK,KAAL,CAAW,CAAX,GAAe,SAAS,CAAC,CAAzB;AACA,WAAO,SAAS,CAAC,CAAjB;AACA,WAAO,SAAS,CAAC,CAAjB;;AAGA,SAAK,WAAL,CAAiB,SAAjB;;AACA,QAAI,EAAE,GAAG,KAAK,qBAAL,GAA6B,IAA7B,EAAT;;AAEA,IAAA,EAAE,CAAC,MAAH;AACA,IAAA,EAAE,CAAC,SAAH,CAAa,GAAG,CAAC,CAAjB,EAAoB,GAAG,CAAC,CAAxB;AACA,IAAA,GAAG,GAAG;AACJ,MAAA,CAAC,EAAE,KAAK,KAAL,CAAW,CAAX,GAAe,EAAE,CAAC,cAAH,GAAoB,CADlC;AAEJ,MAAA,CAAC,EAAE,KAAK,KAAL,CAAW,CAAX,GAAe,EAAE,CAAC,cAAH,GAAoB;AAFlC,KAAN;;AAIA,SAAK,aAAL,CAAmB,SAAnB;;AACA,SAAK,WAAL,CAAiB;AAAE,MAAA,CAAC,EAAE,GAAG,CAAC,CAAT;AAAY,MAAA,CAAC,EAAE,GAAG,CAAC;AAAnB,KAAjB;;AACA,SAAK,WAAL,CAAiB,SAAjB;;AACA,SAAK,4BAAL,CAAkC,kBAAlC;;AAEA,WAAO,IAAP;AACD;;AACD,EAAA,aAAa,CAAC,KAAD,EAAM;AACjB,QAAI,GAAJ;;AAEA,SAAK,GAAL,IAAY,KAAZ,EAAmB;AACjB,WAAK,KAAL,CAAW,GAAX,IAAkB,KAAK,CAAC,GAAD,CAAvB;AACD;AAGF;;AACD,EAAA,eAAe,GAAA;AACb,QAAI,KAAK,GAAG;AACV,MAAA,CAAC,EAAE,KAAK,CAAL,EADO;AAEV,MAAA,CAAC,EAAE,KAAK,CAAL,EAFO;AAGV,MAAA,QAAQ,EAAE,KAAK,QAAL,EAHA;AAIV,MAAA,MAAM,EAAE,KAAK,MAAL,EAJE;AAKV,MAAA,MAAM,EAAE,KAAK,MAAL,EALE;AAMV,MAAA,OAAO,EAAE,KAAK,OAAL,EANC;AAOV,MAAA,OAAO,EAAE,KAAK,OAAL,EAPC;AAQV,MAAA,KAAK,EAAE,KAAK,KAAL,EARG;AASV,MAAA,KAAK,EAAE,KAAK,KAAL;AATG,KAAZ;AAYA,SAAK,KAAL,CAAW,CAAX,GAAe,CAAf;AACA,SAAK,KAAL,CAAW,CAAX,GAAe,CAAf;AACA,SAAK,KAAL,CAAW,QAAX,GAAsB,CAAtB;AACA,SAAK,KAAL,CAAW,MAAX,GAAoB,CAApB;AACA,SAAK,KAAL,CAAW,MAAX,GAAoB,CAApB;AACA,SAAK,KAAL,CAAW,OAAX,GAAqB,CAArB;AACA,SAAK,KAAL,CAAW,OAAX,GAAqB,CAArB;AACA,SAAK,KAAL,CAAW,KAAX,GAAmB,CAAnB;AACA,SAAK,KAAL,CAAW,KAAX,GAAmB,CAAnB;AAGA,WAAO,KAAP;AACD;;AAgBD,EAAA,IAAI,CAAC,MAAD,EAAiB;AACnB,QAAI,OAAO,GAAG,MAAM,CAAC,CAArB;AAAA,QACE,OAAO,GAAG,MAAM,CAAC,CADnB;AAAA,QAEE,CAAC,GAAG,KAAK,CAAL,EAFN;AAAA,QAGE,CAAC,GAAG,KAAK,CAAL,EAHN;;AAKA,QAAI,OAAO,KAAK,SAAhB,EAA2B;AACzB,MAAA,CAAC,IAAI,OAAL;AACD;;AAED,QAAI,OAAO,KAAK,SAAhB,EAA2B;AACzB,MAAA,CAAC,IAAI,OAAL;AACD;;AAED,SAAK,WAAL,CAAiB;AAAE,MAAA,CAAC,EAAE,CAAL;AAAQ,MAAA,CAAC,EAAE;AAAX,KAAjB;AACA,WAAO,IAAP;AACD;;AACD,EAAA,oBAAoB,CAAC,IAAD,EAAO,GAAP,EAAU;AAC5B,QAAI,MAAM,GAAG,EAAb;AAAA,QACE,MAAM,GAAG,KAAK,SAAL,EADX;AAAA,QAEE,GAFF;AAAA,QAGE,CAHF;;AAQA,QAAI,GAAG,IAAI,GAAG,CAAC,GAAJ,KAAY,KAAK,GAA5B,EAAiC;AAE/B;AACD;;AAED,IAAA,MAAM,CAAC,OAAP,CAAe,IAAf;;AAEA,WAAO,MAAM,KAAK,CAAC,GAAD,IAAQ,MAAM,CAAC,GAAP,KAAe,GAAG,CAAC,GAAhC,CAAb,EAAmD;AACjD,MAAA,MAAM,CAAC,OAAP,CAAe,MAAf;AACA,MAAA,MAAM,GAAG,MAAM,CAAC,MAAhB;AACD;;AAED,IAAA,GAAG,GAAG,MAAM,CAAC,MAAb;;AACA,SAAK,CAAC,GAAG,CAAT,EAAY,CAAC,GAAG,GAAhB,EAAqB,CAAC,EAAtB,EAA0B;AACxB,MAAA,IAAI,CAAC,MAAM,CAAC,CAAD,CAAP,CAAJ;AACD;AACF;;AAQD,EAAA,MAAM,CAAC,KAAD,EAAc;AAClB,SAAK,QAAL,CAAc,KAAK,QAAL,KAAkB,KAAhC;AACA,WAAO,IAAP;AACD;;AAOD,EAAA,SAAS,GAAA;AACP,QAAI,CAAC,KAAK,MAAV,EAAkB;AAChB,MAAA,IAAI,CAAC,IAAL,CAAU,oDAAV;AACA,aAAO,KAAP;AACD;;AACD,QAAI,KAAK,GAAG,KAAK,KAAjB;AAAA,QACE,GAAG,GAAG,KAAK,MAAL,CAAY,WAAZ,GAA0B,MADlC;;AAEA,QAAI,KAAK,GAAG,GAAG,GAAG,CAAlB,EAAqB;AACnB,WAAK,MAAL,CAAY,QAAZ,CAAqB,MAArB,CAA4B,KAA5B,EAAmC,CAAnC;AACA,WAAK,MAAL,CAAY,QAAZ,CAAqB,IAArB,CAA0B,IAA1B;;AACA,WAAK,MAAL,CAAY,mBAAZ;;AACA,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD;;AAOD,EAAA,MAAM,GAAA;AACJ,QAAI,CAAC,KAAK,MAAV,EAAkB;AAChB,MAAA,IAAI,CAAC,IAAL,CAAU,iDAAV;AACA,aAAO,KAAP;AACD;;AACD,QAAI,KAAK,GAAG,KAAK,KAAjB;AAAA,QACE,GAAG,GAAG,KAAK,MAAL,CAAY,WAAZ,GAA0B,MADlC;;AAEA,QAAI,KAAK,GAAG,GAAG,GAAG,CAAlB,EAAqB;AACnB,WAAK,MAAL,CAAY,QAAZ,CAAqB,MAArB,CAA4B,KAA5B,EAAmC,CAAnC;AACA,WAAK,MAAL,CAAY,QAAZ,CAAqB,MAArB,CAA4B,KAAK,GAAG,CAApC,EAAuC,CAAvC,EAA0C,IAA1C;;AACA,WAAK,MAAL,CAAY,mBAAZ;;AACA,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD;;AAOD,EAAA,QAAQ,GAAA;AACN,QAAI,CAAC,KAAK,MAAV,EAAkB;AAChB,MAAA,IAAI,CAAC,IAAL,CAAU,mDAAV;AACA,aAAO,KAAP;AACD;;AACD,QAAI,KAAK,GAAG,KAAK,KAAjB;;AACA,QAAI,KAAK,GAAG,CAAZ,EAAe;AACb,WAAK,MAAL,CAAY,QAAZ,CAAqB,MAArB,CAA4B,KAA5B,EAAmC,CAAnC;AACA,WAAK,MAAL,CAAY,QAAZ,CAAqB,MAArB,CAA4B,KAAK,GAAG,CAApC,EAAuC,CAAvC,EAA0C,IAA1C;;AACA,WAAK,MAAL,CAAY,mBAAZ;;AACA,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD;;AAOD,EAAA,YAAY,GAAA;AACV,QAAI,CAAC,KAAK,MAAV,EAAkB;AAChB,MAAA,IAAI,CAAC,IAAL,CAAU,uDAAV;AACA,aAAO,KAAP;AACD;;AACD,QAAI,KAAK,GAAG,KAAK,KAAjB;;AACA,QAAI,KAAK,GAAG,CAAZ,EAAe;AACb,WAAK,MAAL,CAAY,QAAZ,CAAqB,MAArB,CAA4B,KAA5B,EAAmC,CAAnC;AACA,WAAK,MAAL,CAAY,QAAZ,CAAqB,OAArB,CAA6B,IAA7B;;AACA,WAAK,MAAL,CAAY,mBAAZ;;AACA,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD;;AACD,EAAA,SAAS,CAAC,MAAD,EAAO;AACd,QAAI,CAAC,KAAK,MAAV,EAAkB;AAChB,MAAA,IAAI,CAAC,IAAL,CAAU,kDAAV;AACA,aAAO,IAAP;AACD;;AACD,QAAI,MAAM,GAAG,CAAT,IAAc,MAAM,IAAI,KAAK,MAAL,CAAY,QAAZ,CAAqB,MAAjD,EAAyD;AACvD,MAAA,IAAI,CAAC,IAAL,CACE,sBACE,MADF,GAEE,8GAFF,IAGG,KAAK,MAAL,CAAY,QAAZ,CAAqB,MAArB,GAA8B,CAHjC,IAIE,GALJ;AAOD;;AACD,QAAI,KAAK,GAAG,KAAK,KAAjB;AACA,SAAK,MAAL,CAAY,QAAZ,CAAqB,MAArB,CAA4B,KAA5B,EAAmC,CAAnC;AACA,SAAK,MAAL,CAAY,QAAZ,CAAqB,MAArB,CAA4B,MAA5B,EAAoC,CAApC,EAAuC,IAAvC;;AACA,SAAK,MAAL,CAAY,mBAAZ;;AACA,WAAO,IAAP;AACD;;AAOD,EAAA,kBAAkB,GAAA;AAChB,WAAO,KAAK,SAAL,CAAe,gBAAf,EAAiC,KAAK,mBAAtC,CAAP;AACD;;AACD,EAAA,mBAAmB,GAAA;AACjB,QAAI,UAAU,GAAG,KAAK,OAAL,EAAjB;AACA,QAAI,MAAM,GAAG,KAAK,SAAL,EAAb;;AACA,QAAI,MAAM,IAAI,CAAC,MAAM,CAAC,aAAtB,EAAqC;AACnC,MAAA,UAAU,IAAI,MAAM,CAAC,kBAAP,EAAd;AACD;;AACD,WAAO,UAAP;AACD;;AAWD,EAAA,MAAM,CAAC,YAAD,EAAkB;AAEtB,QAAI,KAAK,SAAL,OAAqB,YAAzB,EAAuC;AACrC,WAAK,OAAL;;AACA,MAAA,YAAY,CAAC,GAAb,CAAiB,IAAjB;AACD;;AACD,WAAO,IAAP;AACD;;AAOD,EAAA,QAAQ,GAAA;AACN,QAAI,GAAG,GAAG,EAAV;AAAA,QACE,KAAK,GAAG,KAAK,QAAL,EADV;AAAA,QAEE,GAFF;AAAA,QAGE,GAHF;AAAA,QAIE,MAJF;AAAA,QAKE,YALF;AAAA,QAME,cANF;AAQA,IAAA,GAAG,CAAC,KAAJ,GAAY,EAAZ;;AAEA,SAAK,GAAL,IAAY,KAAZ,EAAmB;AACjB,MAAA,GAAG,GAAG,KAAK,CAAC,GAAD,CAAX;AAGA,MAAA,cAAc,GACZ,IAAI,CAAC,QAAL,CAAc,GAAd,KAAsB,CAAC,IAAI,CAAC,cAAL,CAAoB,GAApB,CAAvB,IAAmD,CAAC,IAAI,CAAC,QAAL,CAAc,GAAd,CADtD;;AAEA,UAAI,cAAJ,EAAoB;AAClB;AACD;;AACD,MAAA,MAAM,GAAG,OAAO,KAAK,GAAL,CAAP,KAAqB,UAArB,IAAmC,KAAK,GAAL,CAA5C;AAEA,aAAO,KAAK,CAAC,GAAD,CAAZ;AACA,MAAA,YAAY,GAAG,MAAM,GAAG,MAAM,CAAC,IAAP,CAAY,IAAZ,CAAH,GAAuB,IAA5C;AAEA,MAAA,KAAK,CAAC,GAAD,CAAL,GAAa,GAAb;;AACA,UAAI,YAAY,KAAK,GAArB,EAA0B;AACxB,QAAA,GAAG,CAAC,KAAJ,CAAU,GAAV,IAAiB,GAAjB;AACD;AACF;;AAED,IAAA,GAAG,CAAC,SAAJ,GAAgB,KAAK,YAAL,EAAhB;AACA,WAAO,IAAI,CAAC,mBAAL,CAAyB,GAAzB,CAAP;AACD;;AAOD,EAAA,MAAM,GAAA;AACJ,WAAO,IAAI,CAAC,SAAL,CAAe,KAAK,QAAL,EAAf,CAAP;AACD;;AAOD,EAAA,SAAS,GAAA;AACP,WAAO,KAAK,MAAZ;AACD;;AAaD,EAAA,aAAa,CAAC,QAAD,EAAmB,WAAnB,EAA0C,QAA1C,EAAyD;AACpE,QAAI,GAAG,GAAgB,EAAvB;;AAEA,QAAI,WAAW,IAAI,KAAK,QAAL,CAAc,QAAd,CAAnB,EAA4C;AAC1C,MAAA,GAAG,CAAC,IAAJ,CAAS,IAAT;AACD;;AACD,QAAI,QAAQ,GAAG,KAAK,MAApB;;AACA,WAAO,QAAP,EAAiB;AACf,UAAI,QAAQ,KAAK,QAAjB,EAA2B;AACzB,eAAO,GAAP;AACD;;AACD,UAAI,QAAQ,CAAC,QAAT,CAAkB,QAAlB,CAAJ,EAAiC;AAC/B,QAAA,GAAG,CAAC,IAAJ,CAAS,QAAT;AACD;;AACD,MAAA,QAAQ,GAAG,QAAQ,CAAC,MAApB;AACD;;AACD,WAAO,GAAP;AACD;;AACD,EAAA,YAAY,CAAC,IAAD,EAAW;AACrB,WAAO,KAAP;AACD;;AAaD,EAAA,YAAY,CAAC,QAAD,EAAoB,WAApB,EAA2C,QAA3C,EAA+D;AACzE,WAAO,KAAK,aAAL,CAAmB,QAAnB,EAA6B,WAA7B,EAA0C,QAA1C,EAAoD,CAApD,CAAP;AACD;;AAED,EAAA,QAAQ,CAAC,QAAD,EAA4B;AAClC,QAAI,CAAC,QAAL,EAAe;AACb,aAAO,KAAP;AACD;;AACD,QAAI,OAAO,QAAP,KAAoB,UAAxB,EAAoC;AAClC,aAAO,QAAQ,CAAC,IAAD,CAAf;AACD;;AACD,QAAI,WAAW,GAAG,QAAQ,CAAC,OAAT,CAAiB,IAAjB,EAAuB,EAAvB,EAA2B,KAA3B,CAAiC,GAAjC,CAAlB;AAAA,QACE,GAAG,GAAG,WAAW,CAAC,MADpB;AAAA,QAEE,CAFF;AAAA,QAGE,GAHF;;AAKA,SAAK,CAAC,GAAG,CAAT,EAAY,CAAC,GAAG,GAAhB,EAAqB,CAAC,EAAtB,EAA0B;AACxB,MAAA,GAAG,GAAG,WAAW,CAAC,CAAD,CAAjB;;AACA,UAAI,CAAC,IAAI,CAAC,eAAL,CAAqB,GAArB,CAAL,EAAgC;AAC9B,QAAA,IAAI,CAAC,IAAL,CACE,eACE,GADF,GAEE,yEAHJ;AAKA,QAAA,IAAI,CAAC,IAAL,CACE,8GADF;AAGA,QAAA,IAAI,CAAC,IAAL,CAAU,0BAAV;AACD;;AAED,UAAI,GAAG,CAAC,MAAJ,CAAW,CAAX,MAAkB,GAAtB,EAA2B;AACzB,YAAI,KAAK,EAAL,OAAc,GAAG,CAAC,KAAJ,CAAU,CAAV,CAAlB,EAAgC;AAC9B,iBAAO,IAAP;AACD;AACF,OAJD,MAIO,IAAI,GAAG,CAAC,MAAJ,CAAW,CAAX,MAAkB,GAAtB,EAA2B;AAEhC,YAAI,KAAK,OAAL,CAAa,GAAG,CAAC,KAAJ,CAAU,CAAV,CAAb,CAAJ,EAAgC;AAC9B,iBAAO,IAAP;AACD;AACF,OALM,MAKA,IAAI,KAAK,SAAL,KAAmB,GAAnB,IAA0B,KAAK,QAAL,KAAkB,GAAhD,EAAqD;AAC1D,eAAO,IAAP;AACD;AACF;;AACD,WAAO,KAAP;AACD;;AAOD,EAAA,QAAQ,GAAA;AACN,QAAI,MAAM,GAAG,KAAK,SAAL,EAAb;AACA,WAAO,MAAM,GAAG,MAAM,CAAC,QAAP,EAAH,GAAuB,IAApC;AACD;;AAOD,EAAA,QAAQ,GAAA;AACN,WAAO,KAAK,SAAL,CAAe,KAAf,EAAsB,KAAK,SAA3B,CAAP;AACD;;AAED,EAAA,SAAS,GAAA;AACP,QAAI,MAAM,GAAG,KAAK,SAAL,EAAb;;AACA,QAAI,MAAJ,EAAY;AACV,aAAO,MAAM,CAAC,QAAP,EAAP;AACD,KAFD,MAEO;AACL,aAAO,SAAP;AACD;AACF;;AAyBD,EAAA,IAAI,CAAC,SAAD,EAAmD;AAAA,QAA/B,GAA+B,uEAApB,EAAoB;AAAA,QAAhB,MAAgB;AACrD,IAAA,GAAG,CAAC,MAAJ,GAAa,GAAG,CAAC,MAAJ,IAAc,IAA3B;;AAEA,QAAI,MAAJ,EAAY;AACV,WAAK,cAAL,CAAoB,SAApB,EAA+B,GAA/B;AACD,KAFD,MAEO;AAEL,WAAK,KAAL,CAAW,SAAX,EAAsB,GAAtB;AACD;;AACD,WAAO,IAAP;AACD;;AAQD,EAAA,oBAAoB,CAAC,GAAD,EAAW;AAE7B,QAAI,GAAJ,EAAS;AACP,aAAO,KAAK,qBAAL,CAA2B,GAA3B,CAAP;AACD,KAFD,MAEO;AAEL,aAAO,KAAK,SAAL,CACL,kBADK,EAEL,KAAK,qBAFA,CAAP;AAID;AACF;;AACD,EAAA,qBAAqB,CAAC,GAAD,EAAW;AAC9B,QAAI,EAAJ;;AAEA,QAAI,GAAJ,EAAS;AACP,MAAA,EAAE,GAAG,IAAI,SAAJ,EAAL;;AAEA,WAAK,oBAAL,CAA0B,UAAU,IAAV,EAAoB;AAC5C,YAAI,iBAAiB,GAAG,IAAI,CAAC,iBAAL,EAAxB;;AAEA,YAAI,iBAAiB,KAAK,KAA1B,EAAiC;AAC/B,UAAA,EAAE,CAAC,QAAH,CAAY,IAAI,CAAC,YAAL,EAAZ;AACD,SAFD,MAEO,IAAI,iBAAiB,KAAK,UAA1B,EAAsC;AAC3C,UAAA,EAAE,CAAC,SAAH,CAAa,IAAI,CAAC,CAAL,KAAW,IAAI,CAAC,OAAL,EAAxB,EAAwC,IAAI,CAAC,CAAL,KAAW,IAAI,CAAC,OAAL,EAAnD;AACD;AACF,OARD,EAQG,GARH;;AASA,aAAO,EAAP;AACD,KAbD,MAaO;AAEL,MAAA,EAAE,GAAG,KAAK,MAAL,CAAY,GAAZ,CAAgB,kBAAhB,KAAuC,IAAI,SAAJ,EAA5C;;AACA,UAAI,KAAK,MAAT,EAAiB;AAEf,aAAK,MAAL,CAAY,oBAAZ,GAAmC,QAAnC,CAA4C,EAA5C;AACD,OAHD,MAGO;AACL,QAAA,EAAE,CAAC,KAAH;AACD;;AACD,UAAI,iBAAiB,GAAG,KAAK,iBAAL,EAAxB;;AACA,UAAI,iBAAiB,KAAK,KAA1B,EAAiC;AAC/B,QAAA,EAAE,CAAC,QAAH,CAAY,KAAK,YAAL,EAAZ;AACD,OAFD,MAEO,IAAI,iBAAiB,KAAK,UAA1B,EAAsC;AAE3C,cAAM,CAAC,GAAG,KAAK,KAAL,CAAW,CAAX,IAAgB,CAA1B;AACA,cAAM,CAAC,GAAG,KAAK,KAAL,CAAW,CAAX,IAAgB,CAA1B;AACA,cAAM,OAAO,GAAG,KAAK,KAAL,CAAW,OAAX,IAAsB,CAAtC;AACA,cAAM,OAAO,GAAG,KAAK,KAAL,CAAW,OAAX,IAAsB,CAAtC;AAEA,QAAA,EAAE,CAAC,SAAH,CAAa,CAAC,GAAG,OAAjB,EAA0B,CAAC,GAAG,OAA9B;AACD;;AACD,MAAA,EAAE,CAAC,KAAH,GAAW,KAAX;AACA,aAAO,EAAP;AACD;AACF;;AAWD,EAAA,gBAAgB,CAAC,GAAD,EAAW;AAIzB,QAAI,MAAM,GAAS,IAAnB;;AACA,WAAO,MAAP,EAAe;AACb,UAAI,MAAM,CAAC,aAAX,EAA0B;AACxB,QAAA,GAAG,GAAG,MAAN;AACD;;AACD,MAAA,MAAM,GAAG,MAAM,CAAC,SAAP,EAAT;AACD;;AAED,UAAM,SAAS,GAAG,KAAK,oBAAL,CAA0B,GAA1B,CAAlB;AACA,UAAM,KAAK,GAAG,SAAS,CAAC,SAAV,EAAd;AAEA,WAAO;AACL,MAAA,CAAC,EAAE,KAAK,CAAC,MADJ;AAEL,MAAA,CAAC,EAAE,KAAK,CAAC;AAFJ,KAAP;AAID;;AAWD,EAAA,mBAAmB,GAAA;AASjB,WAAO,KAAK,oBAAL,GAA4B,SAA5B,GAAwC,QAA/C;AACD;;AAOD,EAAA,YAAY,GAAA;AACV,WAAO,KAAK,SAAL,CAAe,SAAf,EAA0B,KAAK,aAA/B,CAAP;AACD;;AACD,EAAA,aAAa,GAAA;;;AACX,QAAI,CAAC,GAAc,KAAK,MAAL,CAAY,GAAZ,CAAgB,SAAhB,KAA8B,IAAI,SAAJ,EAAjD;AACA,IAAA,CAAC,CAAC,KAAF;AAKA,QAAI,CAAC,GAAG,KAAK,CAAL,EAAR;AAAA,QACE,CAAC,GAAG,KAAK,CAAL,EADN;AAAA,QAEE,QAAQ,GAAG,KAAK,CAAC,QAAN,CAAe,KAAK,QAAL,EAAf,CAFb;AAAA,QAGE,MAAM,GAAG,CAAA,EAAA,GAAA,KAAK,KAAL,CAAW,MAAX,MAAiB,IAAjB,IAAiB,EAAA,KAAA,KAAA,CAAjB,GAAiB,EAAjB,GAAqB,CAHhC;AAAA,QAIE,MAAM,GAAG,CAAA,EAAA,GAAA,KAAK,KAAL,CAAW,MAAX,MAAiB,IAAjB,IAAiB,EAAA,KAAA,KAAA,CAAjB,GAAiB,EAAjB,GAAqB,CAJhC;AAAA,QAKE,KAAK,GAAG,KAAK,KAAL,CAAW,KAAX,IAAoB,CAL9B;AAAA,QAME,KAAK,GAAG,KAAK,KAAL,CAAW,KAAX,IAAoB,CAN9B;AAAA,QAOE,OAAO,GAAG,KAAK,KAAL,CAAW,OAAX,IAAsB,CAPlC;AAAA,QAQE,OAAO,GAAG,KAAK,KAAL,CAAW,OAAX,IAAsB,CARlC;;AAUA,QAAI,CAAC,KAAK,CAAN,IAAW,CAAC,KAAK,CAArB,EAAwB;AACtB,MAAA,CAAC,CAAC,SAAF,CAAY,CAAZ,EAAe,CAAf;AACD;;AACD,QAAI,QAAQ,KAAK,CAAjB,EAAoB;AAClB,MAAA,CAAC,CAAC,MAAF,CAAS,QAAT;AACD;;AACD,QAAI,KAAK,KAAK,CAAV,IAAe,KAAK,KAAK,CAA7B,EAAgC;AAC9B,MAAA,CAAC,CAAC,IAAF,CAAO,KAAP,EAAc,KAAd;AACD;;AACD,QAAI,MAAM,KAAK,CAAX,IAAgB,MAAM,KAAK,CAA/B,EAAkC;AAChC,MAAA,CAAC,CAAC,KAAF,CAAQ,MAAR,EAAgB,MAAhB;AACD;;AACD,QAAI,OAAO,KAAK,CAAZ,IAAiB,OAAO,KAAK,CAAjC,EAAoC;AAClC,MAAA,CAAC,CAAC,SAAF,CAAY,CAAC,CAAD,GAAK,OAAjB,EAA0B,CAAC,CAAD,GAAK,OAA/B;AACD;;AAED,IAAA,CAAC,CAAC,KAAF,GAAU,KAAV;AAEA,WAAO,CAAP;AACD;;AAkBD,EAAA,KAAK,CAAC,GAAD,EAAU;AAEb,QAAI,KAAK,GAAG,IAAI,CAAC,WAAL,CAAiB,KAAK,KAAtB,CAAZ;AAAA,QACE,GADF;AAAA,QAEE,YAFF;AAAA,QAGE,GAHF;AAAA,QAIE,CAJF;AAAA,QAKE,QALF;;AAOA,SAAK,GAAL,IAAY,GAAZ,EAAiB;AACf,MAAA,KAAK,CAAC,GAAD,CAAL,GAAa,GAAG,CAAC,GAAD,CAAhB;AACD;;AAED,QAAI,IAAI,GAAG,IAAU,KAAK,WAAf,CAA4B,KAA5B,CAAX;;AAEA,SAAK,GAAL,IAAY,KAAK,cAAjB,EAAiC;AAC/B,MAAA,YAAY,GAAG,KAAK,cAAL,CAAoB,GAApB,CAAf;AACA,MAAA,GAAG,GAAG,YAAY,CAAC,MAAnB;;AACA,WAAK,CAAC,GAAG,CAAT,EAAY,CAAC,GAAG,GAAhB,EAAqB,CAAC,EAAtB,EAA0B;AACxB,QAAA,QAAQ,GAAG,YAAY,CAAC,CAAD,CAAvB;;AAKA,YAAI,QAAQ,CAAC,IAAT,CAAc,OAAd,CAAsB,KAAtB,IAA+B,CAAnC,EAAsC;AAEpC,cAAI,CAAC,IAAI,CAAC,cAAL,CAAoB,GAApB,CAAL,EAA+B;AAC7B,YAAA,IAAI,CAAC,cAAL,CAAoB,GAApB,IAA2B,EAA3B;AACD;;AACD,UAAA,IAAI,CAAC,cAAL,CAAoB,GAApB,EAAyB,IAAzB,CAA8B,QAA9B;AACD;AACF;AACF;;AACD,WAAO,IAAP;AACD;;AACD,EAAA,cAAc,CAAC,MAAD,EAAO;AACnB,IAAA,MAAM,GAAG,MAAM,IAAI,EAAnB;AAEA,QAAI,GAAG,GAAG,KAAK,aAAL,EAAV;AAEA,QAAI,KAAK,GAAG,KAAK,QAAL,EAAZ;AAAA,QACE,CAAC,GAAG,MAAM,CAAC,CAAP,KAAa,SAAb,GAAyB,MAAM,CAAC,CAAhC,GAAoC,GAAG,CAAC,CAD9C;AAAA,QAEE,CAAC,GAAG,MAAM,CAAC,CAAP,KAAa,SAAb,GAAyB,MAAM,CAAC,CAAhC,GAAoC,GAAG,CAAC,CAF9C;AAAA,QAGE,UAAU,GAAG,MAAM,CAAC,UAAP,IAAqB,CAHpC;AAAA,QAIE,MAAM,GAAG,IAAI,WAAJ,CAAgB;AACvB,MAAA,KAAK,EAAE,MAAM,CAAC,KAAP,IAAgB,GAAG,CAAC,KAApB,KAA8B,KAAK,GAAG,KAAK,CAAC,KAAN,EAAH,GAAmB,CAAtD,CADgB;AAEvB,MAAA,MAAM,EAAE,MAAM,CAAC,MAAP,IAAiB,GAAG,CAAC,MAArB,KAAgC,KAAK,GAAG,KAAK,CAAC,MAAN,EAAH,GAAoB,CAAzD,CAFe;AAGvB,MAAA,UAAU,EAAE;AAHW,KAAhB,CAJX;AAAA,QASE,OAAO,GAAG,MAAM,CAAC,UAAP,EATZ;AAWA,IAAA,OAAO,CAAC,IAAR;;AAEA,QAAI,CAAC,IAAI,CAAT,EAAY;AACV,MAAA,OAAO,CAAC,SAAR,CAAkB,CAAC,CAAD,GAAK,CAAvB,EAA0B,CAAC,CAAD,GAAK,CAA/B;AACD;;AAED,SAAK,SAAL,CAAe,MAAf;AACA,IAAA,OAAO,CAAC,OAAR;AAEA,WAAO,MAAP;AACD;;AAkBD,EAAA,QAAQ,CAAC,MAAD,EAAQ;AACd,WAAO,KAAK,cAAL,CAAoB,MAApB,EAA4B,OAAnC;AACD;;AAuBD,EAAA,SAAS,CAAC,MAAD,EASR;AACC,IAAA,MAAM,GAAG,MAAM,IAAI,EAAnB;AACA,QAAI,QAAQ,GAAG,MAAM,CAAC,QAAP,IAAmB,IAAlC;AAAA,QACE,OAAO,GAAG,MAAM,CAAC,OAAP,IAAkB,IAD9B;;AAEA,QAAI,GAAG,GAAG,KAAK,cAAL,CAAoB,MAApB,EAA4B,SAA5B,CAAsC,QAAtC,EAAgD,OAAhD,CAAV;;AACA,QAAI,MAAM,CAAC,QAAX,EAAqB;AACnB,MAAA,MAAM,CAAC,QAAP,CAAgB,GAAhB;AACD;;AACD,WAAO,GAAP;AACD;;AA6BD,EAAA,OAAO,CAAC,MAAD,EASN;AACC,QAAI,CAAC,MAAD,IAAW,CAAC,MAAM,CAAC,QAAvB,EAAiC;AAC/B,YAAM,sDAAN;AACD;;AACD,QAAI,QAAQ,GAAG,MAAM,CAAC,QAAtB;AACA,WAAO,MAAM,CAAC,QAAd;;AACA,IAAA,IAAI,CAAC,WAAL,CAAiB,KAAK,SAAL,CAAe,MAAf,CAAjB,EAAgD,UAAU,GAAV,EAAa;AAC3D,MAAA,QAAQ,CAAC,GAAD,CAAR;AACD,KAFD;AAGD;;AACD,EAAA,OAAO,CAAC,IAAD,EAAK;AACV,SAAK,KAAL,CAAW,IAAI,CAAC,KAAhB;AACA,SAAK,MAAL,CAAY,IAAI,CAAC,MAAjB;AACA,WAAO,IAAP;AACD;;AACD,EAAA,OAAO,GAAA;AACL,WAAO;AACL,MAAA,KAAK,EAAE,KAAK,KAAL,EADF;AAEL,MAAA,MAAM,EAAE,KAAK,MAAL;AAFH,KAAP;AAID;;AAOD,EAAA,YAAY,GAAA;AACV,WAAO,KAAK,SAAL,IAAkB,KAAK,QAA9B;AACD;;AAOD,EAAA,OAAO,GAAA;AACL,WAAO,KAAK,QAAZ;AACD;;AACD,EAAA,eAAe,GAAA;AAEb,QAAI,KAAK,KAAL,CAAW,YAAX,KAA4B,SAAhC,EAA2C;AACzC,aAAO,KAAK,KAAL,CAAW,YAAlB;AACD,KAFD,MAEO,IAAI,KAAK,MAAT,EAAiB;AACtB,aAAO,KAAK,MAAL,CAAY,eAAZ,EAAP;AACD,KAFM,MAEA;AACL,aAAO,KAAK,CAAC,YAAb;AACD;AACF;;AACD,EAAA,IAAI,CAAC,IAAD,EAAO,IAAP,EAAc,QAAd,EAAuB;AACzB,QAAI,YAAY,GAAG,KAAK,cAAL,CAAoB,IAApB,CAAnB;AAAA,QACE,CADF;AAAA,QAEE,OAFF;AAAA,QAGE,OAHF;;AAKA,SAAK,CAAC,GAAG,CAAT,EAAY,CAAC,GAAG,YAAY,CAAC,MAA7B,EAAqC,CAAC,EAAtC,EAA0C;AACxC,MAAA,OAAO,GAAG,YAAY,CAAC,CAAD,CAAZ,CAAgB,IAA1B;AACA,MAAA,OAAO,GAAG,YAAY,CAAC,CAAD,CAAZ,CAAgB,OAA1B;;AAMA,UACE,CAAC,OAAO,KAAK,OAAZ,IAAuB,IAAI,KAAK,OAAjC,MACC,CAAC,IAAD,IAAS,OAAO,KAAK,IADtB,MAEC,CAAC,QAAD,IAAa,QAAQ,KAAK,OAF3B,CADF,EAIE;AACA,QAAA,YAAY,CAAC,MAAb,CAAoB,CAApB,EAAuB,CAAvB;;AACA,YAAI,YAAY,CAAC,MAAb,KAAwB,CAA5B,EAA+B;AAC7B,iBAAO,KAAK,cAAL,CAAoB,IAApB,CAAP;AACA;AACD;;AACD,QAAA,CAAC;AACF;AACF;AACF;;AACD,EAAA,gBAAgB,CAAC,IAAD,EAAO,MAAP,EAAe,MAAf,EAAqB;AACnC,SAAK,KAAL,CAAW,IAAI,GAAG,MAAlB,EAA0B;AACxB,MAAA,MAAM,EAAE,MADgB;AAExB,MAAA,MAAM,EAAE;AAFgB,KAA1B;AAID;;AAYD,EAAA,OAAO,CAAC,IAAD,EAAK;AACV,QAAI,CAAC,KAAK,OAAL,CAAa,IAAb,CAAL,EAAyB;AACvB,UAAI,OAAO,GAAG,KAAK,IAAL,EAAd;AACA,UAAI,OAAO,GAAG,OAAO,GAAG,OAAO,GAAG,GAAV,GAAgB,IAAnB,GAA0B,IAA/C;AACA,WAAK,IAAL,CAAU,OAAV;AACD;;AACD,WAAO,IAAP;AACD;;AAaD,EAAA,OAAO,CAAC,IAAD,EAAK;AACV,QAAI,CAAC,IAAL,EAAW;AACT,aAAO,KAAP;AACD;;AACD,UAAM,QAAQ,GAAG,KAAK,IAAL,EAAjB;;AACA,QAAI,CAAC,QAAL,EAAe;AACb,aAAO,KAAP;AACD;;AAED,QAAI,KAAK,GAAG,CAAC,QAAQ,IAAI,EAAb,EAAiB,KAAjB,CAAuB,KAAvB,CAAZ;AACA,WAAO,KAAK,CAAC,OAAN,CAAc,IAAd,MAAwB,CAAC,CAAhC;AACD;;AAaD,EAAA,UAAU,CAAC,IAAD,EAAK;AACb,QAAI,KAAK,GAAG,CAAC,KAAK,IAAL,MAAe,EAAhB,EAAoB,KAApB,CAA0B,KAA1B,CAAZ;AACA,QAAI,KAAK,GAAG,KAAK,CAAC,OAAN,CAAc,IAAd,CAAZ;;AACA,QAAI,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,MAAA,KAAK,CAAC,MAAN,CAAa,KAAb,EAAoB,CAApB;AACA,WAAK,IAAL,CAAU,KAAK,CAAC,IAAN,CAAW,GAAX,CAAV;AACD;;AACD,WAAO,IAAP;AACD;;AAWD,EAAA,OAAO,CAAC,IAAD,EAAO,GAAP,EAAU;AACf,QAAI,IAAI,GAAG,KAAK,GAAG,GAAG,IAAI,CAAC,WAAL,CAAiB,IAAjB,CAAX,CAAX;;AAEA,QAAI,IAAI,CAAC,WAAL,CAAiB,IAAjB,CAAJ,EAA4B;AAC1B,MAAA,IAAI,CAAC,IAAL,CAAU,IAAV,EAAgB,GAAhB;AACD,KAFD,MAEO;AAEL,WAAK,QAAL,CAAc,IAAd,EAAoB,GAApB;AACD;;AACD,WAAO,IAAP;AACD;;AACD,EAAA,YAAY,GAAA;AACV,QAAI,KAAK,CAAC,eAAV,EAA2B;AACzB,YAAM,QAAQ,GAAG,KAAK,QAAL,MAAmB,KAAK,QAAL,EAApC;AACA,MAAA,QAAQ,KAAA,IAAR,IAAA,QAAQ,KAAA,KAAA,CAAR,GAAQ,KAAA,CAAR,GAAA,QAAQ,CAAE,SAAV,EAAA;AACD;AACF;;AACD,EAAA,QAAQ,CAAC,GAAD,EAAM,GAAN,EAAS;AACf,QAAI,MAAM,GAAG,KAAK,KAAL,CAAW,GAAX,CAAb;;AACA,QAAI,MAAM,KAAK,GAAX,IAAkB,CAAC,IAAI,CAAC,QAAL,CAAc,GAAd,CAAvB,EAA2C;AACzC;AACD;;AACD,QAAI,GAAG,KAAK,SAAR,IAAqB,GAAG,KAAK,IAAjC,EAAuC;AACrC,aAAO,KAAK,KAAL,CAAW,GAAX,CAAP;AACD,KAFD,MAEO;AACL,WAAK,KAAL,CAAW,GAAX,IAAkB,GAAlB;AACD;;AACD,QAAI,KAAK,uBAAT,EAAkC;AAChC,WAAK,gBAAL,CAAsB,GAAtB,EAA2B,MAA3B,EAAmC,GAAnC;AACD;;AACD,SAAK,YAAL;AACD;;AACD,EAAA,iBAAiB,CAAC,GAAD,EAAM,SAAN,EAAiB,GAAjB,EAAoB;AACnC,QAAI,MAAJ;;AACA,QAAI,GAAG,KAAK,SAAZ,EAAuB;AACrB,MAAA,MAAM,GAAG,KAAK,KAAL,CAAW,GAAX,CAAT;;AAEA,UAAI,CAAC,MAAL,EAAa;AAEX,aAAK,KAAL,CAAW,GAAX,IAAkB,KAAK,OAAL,CAAa,GAAb,CAAlB;AACD;;AAED,WAAK,KAAL,CAAW,GAAX,EAAgB,SAAhB,IAA6B,GAA7B;;AACA,WAAK,gBAAL,CAAsB,GAAtB,EAA2B,MAA3B,EAAmC,GAAnC;AACD;AACF;;AACD,EAAA,cAAc,CAAC,SAAD,EAAY,GAAZ,EAAiB,YAAjB,EAA8B;AAC1C,QAAI,GAAG,IAAI,KAAK,QAAL,KAAkB,KAA7B,EAAoC;AAClC,MAAA,GAAG,CAAC,MAAJ,GAAa,IAAb;AACD;;AAED,QAAI,UAAU,GACZ,CAAC,SAAS,KAAK,UAAd,IAA4B,SAAS,KAAK,UAA3C,MACE,YAAY,KACX,SAAS,YAAT,IACE,KAAK,YAAL,IAAqB,KAAK,YAAL,CAAkB,YAAlB,CAFZ,CAAb,IAGE,KAAK,QAAL,KAAkB,OAAlB,IAA6B,CAAC,YAJjC,CADF;;AAOA,QAAI,CAAC,UAAL,EAAiB;AACf,WAAK,KAAL,CAAW,SAAX,EAAsB,GAAtB;;AAGA,UAAI,UAAU,GACZ,CAAC,SAAS,KAAK,UAAd,IAA4B,SAAS,KAAK,UAA3C,KACA,YADA,IAEA,YAAY,CAAC,YAFb,IAGA,YAAY,CAAC,YAAb,CAA0B,IAA1B,CAHA,IAIA,CAAC,YAAY,CAAC,YAAb,CAA0B,KAAK,MAA/B,CALH;;AAMA,UACE,CAAE,GAAG,IAAI,CAAC,GAAG,CAAC,YAAb,IAA8B,CAAC,GAAhC,KACA,KAAK,MADL,IAEA,KAAK,MAAL,CAAY,WAAZ,EAFA,IAGA,CAAC,UAJH,EAKE;AACA,YAAI,YAAY,IAAI,YAAY,CAAC,MAAjC,EAAyC;AACvC,eAAK,cAAL,CAAoB,IAApB,CAAyB,KAAK,MAA9B,EAAsC,SAAtC,EAAiD,GAAjD,EAAsD,YAAtD;AACD,SAFD,MAEO;AACL,eAAK,cAAL,CAAoB,IAApB,CAAyB,KAAK,MAA9B,EAAsC,SAAtC,EAAiD,GAAjD;AACD;AACF;AACF;AACF;;AAED,EAAA,kBAAkB,CAAC,SAAD,EAAU;AAC1B,QAAI,SAAS,GAAG,KAAK,MAAL,CAAY,GAAZ,CAAgB,aAAhB,CAAhB;;AAEA,QAAI,CAAC,SAAL,EAAgB;AACd,MAAA,SAAS,GAAG,EAAZ;AACA,UAAI,GAAG,GAAG,MAAM,CAAC,cAAP,CAAsB,IAAtB,CAAV;;AACA,aAAO,GAAP,EAAY;AACV,YAAI,CAAC,GAAG,CAAC,cAAT,EAAyB;AACvB,UAAA,GAAG,GAAG,MAAM,CAAC,cAAP,CAAsB,GAAtB,CAAN;AACA;AACD;;AACD,aAAK,IAAI,KAAT,IAAkB,GAAG,CAAC,cAAtB,EAAsC;AACpC,gBAAM,SAAS,GAAG,GAAG,CAAC,cAAJ,CAAmB,KAAnB,CAAlB;AACA,gBAAM,SAAS,GAAG,SAAS,CAAC,KAAD,CAAT,IAAoB,EAAtC;AAEA,UAAA,SAAS,CAAC,KAAD,CAAT,GAAmB,SAAS,CAAC,MAAV,CAAiB,SAAjB,CAAnB;AACD;;AACD,QAAA,GAAG,GAAG,MAAM,CAAC,cAAP,CAAsB,GAAtB,CAAN;AACD;;AACD,WAAK,MAAL,CAAY,GAAZ,CAAgB,aAAhB,EAA+B,SAA/B;AACD;;AAED,WAAO,SAAS,CAAC,SAAD,CAAhB;AACD;;AACD,EAAA,KAAK,CAAC,SAAD,EAAY,GAAZ,EAAe;AAClB,IAAA,GAAG,GAAG,GAAG,IAAI,EAAb;AACA,IAAA,GAAG,CAAC,aAAJ,GAAoB,IAApB;AACA,IAAA,GAAG,CAAC,IAAJ,GAAW,SAAX;;AAEA,UAAM,YAAY,GAAG,KAAK,kBAAL,CAAwB,SAAxB,CAArB;;AACA,QAAI,YAAJ,EAAkB;AAChB,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,YAAY,CAAC,MAAjC,EAAyC,CAAC,EAA1C,EAA8C;AAC5C,QAAA,YAAY,CAAC,CAAD,CAAZ,CAAgB,OAAhB,CAAwB,IAAxB,CAA6B,IAA7B,EAAmC,GAAnC;AACD;AACF;;AAID,UAAM,aAAa,GAAG,KAAK,cAAL,CAAoB,SAApB,CAAtB;;AACA,QAAI,aAAJ,EAAmB;AACjB,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,aAAa,CAAC,MAAlC,EAA0C,CAAC,EAA3C,EAA+C;AAC7C,QAAA,aAAa,CAAC,CAAD,CAAb,CAAiB,OAAjB,CAAyB,IAAzB,CAA8B,IAA9B,EAAoC,GAApC;AACD;AACF;AACF;;AAOD,EAAA,IAAI,GAAA;AACF,SAAK,SAAL;AACA,SAAK,OAAL;AACA,WAAO,IAAP;AACD;;AAGD,EAAA,kBAAkB,CAAC,GAAD,EAAI;AACpB,QAAI,SAAS,GAAG,GAAG,GAAG,GAAG,CAAC,SAAP,GAAmB,SAAtC;AACA,QAAI,KAAK,GAAG,KAAK,QAAL,EAAZ;AACA,QAAI,EAAE,GAAG,KAAK,mBAAL,EAAT;AACA,QAAI,GAAG,GACL,KAAK,CAAC,eAAN,CAAsB,SAAtB,KACA,KAAK,CAAC,wBAAN,CAA+B,CAA/B,CADA,IAEA,EAHF;;AAIA,IAAA,EAAE,CAAC,aAAH,CAAiB,GAAjB,CAAqB,KAAK,GAA1B,EAA+B;AAC7B,MAAA,IAAI,EAAE,IADuB;AAE7B,MAAA,eAAe,EAAE,GAFY;AAG7B,MAAA,MAAM,EAAE;AACN,QAAA,CAAC,EAAE,GAAG,CAAC,CAAJ,GAAQ,EAAE,CAAC,CADR;AAEN,QAAA,CAAC,EAAE,GAAG,CAAC,CAAJ,GAAQ,EAAE,CAAC;AAFR,OAHqB;AAO7B,MAAA,UAAU,EAAE,OAPiB;AAQ7B,MAAA;AAR6B,KAA/B;AAUD;;AAOD,EAAA,SAAS,CAAC,GAAD,EAA8B;AAAA,QAAlB,WAAkB,uEAAJ,IAAI;;AACrC,QAAI,CAAC,EAAE,CAAC,aAAH,CAAiB,GAAjB,CAAqB,KAAK,GAA1B,CAAL,EAAqC;AACnC,WAAK,kBAAL,CAAwB,GAAxB;AACD;;AAED,UAAM,IAAI,GAAG,EAAE,CAAC,aAAH,CAAiB,GAAjB,CAAqB,KAAK,GAA1B,CAAb;;AACA,IAAA,IAAI,CAAC,UAAL,GAAkB,UAAlB;AACA,SAAK,IAAL,CACE,WADF,EAEE;AACE,MAAA,IAAI,EAAE,WADR;AAEE,MAAA,MAAM,EAAE,IAFV;AAGE,MAAA,GAAG,EAAE,GAAG,IAAI,GAAG,CAAC;AAHlB,KAFF,EAOE,WAPF;AASD;;AAED,EAAA,gBAAgB,CAAC,GAAD,EAAM,IAAN,EAAU;AAGxB,UAAM,GAAG,GAAG,KAAK,QAAL,GAAgB,eAAhB,CAAgC,IAAI,CAAC,SAArC,CAAZ;;AAEA,QAAI,CAAC,GAAL,EAAU;AACR;AACD;;AACD,QAAI,UAAU,GAAG;AACf,MAAA,CAAC,EAAE,GAAG,CAAC,CAAJ,GAAQ,IAAI,CAAC,MAAL,CAAY,CADR;AAEf,MAAA,CAAC,EAAE,GAAG,CAAC,CAAJ,GAAQ,IAAI,CAAC,MAAL,CAAY;AAFR,KAAjB;AAKA,QAAI,GAAG,GAAG,KAAK,aAAL,EAAV;;AACA,QAAI,GAAG,KAAK,SAAZ,EAAuB;AACrB,YAAM,OAAO,GAAG,GAAG,CAAC,IAAJ,CAAS,IAAT,EAAe,UAAf,EAA2B,GAA3B,CAAhB;;AACA,UAAI,CAAC,OAAL,EAAc;AACZ,QAAA,IAAI,CAAC,IAAL,CACE,gIADF;AAGD,OAJD,MAIO;AACL,QAAA,UAAU,GAAG,OAAb;AACD;AACF;;AAED,QACE,CAAC,KAAK,QAAN,IACA,KAAK,QAAL,CAAc,CAAd,KAAoB,UAAU,CAAC,CAD/B,IAEA,KAAK,QAAL,CAAc,CAAd,KAAoB,UAAU,CAAC,CAHjC,EAIE;AACA,WAAK,mBAAL,CAAyB,UAAzB;;AACA,WAAK,YAAL;AACD;;AAED,SAAK,QAAL,GAAgB,UAAhB;AACD;;AAOD,EAAA,QAAQ,CAAC,GAAD,EAAK;AACX,UAAM,IAAI,GAAG,EAAE,CAAC,aAAH,CAAiB,GAAjB,CAAqB,KAAK,GAA1B,CAAb;;AACA,QAAI,IAAJ,EAAU;AACR,MAAA,IAAI,CAAC,UAAL,GAAkB,SAAlB;AACD;;AACD,IAAA,EAAE,CAAC,cAAH,CAAkB,GAAlB;;AACA,IAAA,EAAE,CAAC,aAAH,CAAiB,GAAjB;AACD;;AAED,EAAA,YAAY,CAAC,SAAD,EAAU;AACpB,SAAK,QAAL,CAAc,WAAd,EAA2B,SAA3B;;AACA,SAAK,WAAL;AACD;;AAOD,EAAA,UAAU,GAAA;AACR,UAAM,IAAI,GAAG,EAAE,CAAC,aAAH,CAAiB,GAAjB,CAAqB,KAAK,GAA1B,CAAb;;AACA,WAAO,IAAI,GAAG,IAAI,CAAC,UAAL,KAAoB,UAAvB,GAAoC,KAA/C;AACD;;AAED,EAAA,WAAW,GAAA;AACT,SAAK,YAAL;;AAEA,SAAK,EAAL,CAAQ,kCAAR,EAA4C,UAAU,GAAV,EAAa;AACvD,UAAI,iBAAiB,GAAG,GAAG,CAAC,GAAJ,CAAQ,QAAR,MAAsB,SAA9C;AACA,UAAI,OAAO,GACT,CAAC,iBAAD,IAAsB,KAAK,CAAC,WAAN,CAAkB,OAAlB,CAA0B,GAAG,CAAC,GAAJ,CAAQ,QAAR,CAA1B,KAAgD,CADxE;;AAEA,UAAI,CAAC,OAAL,EAAc;AACZ;AACD;;AACD,UAAI,KAAK,UAAL,EAAJ,EAAuB;AACrB;AACD;;AAED,UAAI,gBAAgB,GAAG,KAAvB;;AACA,MAAA,EAAE,CAAC,aAAH,CAAiB,OAAjB,CAA0B,IAAD,IAAS;AAChC,YAAI,KAAK,YAAL,CAAkB,IAAI,CAAC,IAAvB,CAAJ,EAAkC;AAChC,UAAA,gBAAgB,GAAG,IAAnB;AACD;AACF,OAJD;;AAOA,UAAI,CAAC,gBAAL,EAAuB;AACrB,aAAK,kBAAL,CAAwB,GAAxB;AACD;AACF,KAtBD;AAuBD;;AAED,EAAA,WAAW,GAAA;AACT,QAAI,KAAK,KAAL,CAAW,SAAf,EAA0B;AACxB,WAAK,WAAL;AACD,KAFD,MAEO;AAEL,WAAK,YAAL;;AAOA,UAAI,KAAK,GAAG,KAAK,QAAL,EAAZ;;AACA,UAAI,CAAC,KAAL,EAAY;AACV;AACD;;AACD,YAAM,WAAW,GAAG,EAAE,CAAC,aAAH,CAAiB,GAAjB,CAAqB,KAAK,GAA1B,CAApB;;AACA,YAAM,UAAU,GAAG,WAAW,IAAI,WAAW,CAAC,UAAZ,KAA2B,UAA7D;AACA,YAAM,OAAO,GAAG,WAAW,IAAI,WAAW,CAAC,UAAZ,KAA2B,OAA1D;;AAEA,UAAI,UAAJ,EAAgB;AACd,aAAK,QAAL;AACD,OAFD,MAEO,IAAI,OAAJ,EAAa;AAClB,QAAA,EAAE,CAAC,aAAH,CAAiB,MAAjB,CAAwB,KAAK,GAA7B;AACD;AACF;AACF;;AAED,EAAA,YAAY,GAAA;AACV,SAAK,GAAL,CAAS,iBAAT;AACA,SAAK,GAAL,CAAS,kBAAT;AACD;;AAiBD,EAAA,oBAAoB,GAC+B;AAAA,QAAjD,MAAiD,uEAAd;AAAE,MAAA,CAAC,EAAE,CAAL;AAAQ,MAAA,CAAC,EAAE;AAAX,KAAc;AAEjD,UAAM,KAAK,GAAG,KAAK,QAAL,EAAd;;AACA,QAAI,CAAC,KAAL,EAAY;AACV,aAAO,KAAP;AACD;;AACD,UAAM,UAAU,GAAG;AACjB,MAAA,CAAC,EAAE,CAAC,MAAM,CAAC,CADM;AAEjB,MAAA,CAAC,EAAE,CAAC,MAAM,CAAC,CAFM;AAGjB,MAAA,KAAK,EAAE,KAAK,CAAC,KAAN,KAAgB,MAAM,CAAC,CAHb;AAIjB,MAAA,MAAM,EAAE,KAAK,CAAC,MAAN,KAAiB,MAAM,CAAC;AAJf,KAAnB;AAMA,WAAO,IAAI,CAAC,gBAAL,CAAsB,UAAtB,EAAkC,KAAK,aAAL,EAAlC,CAAP;AACD;;AAgFY,SAAN,MAAM,CAAC,IAAD,EAAO,SAAP,EAAiB;AAC5B,QAAI,IAAI,CAAC,SAAL,CAAe,IAAf,CAAJ,EAA0B;AACxB,MAAA,IAAI,GAAG,IAAI,CAAC,KAAL,CAAW,IAAX,CAAP;AACD;;AACD,WAAO,KAAK,WAAL,CAAiB,IAAjB,EAAuB,SAAvB,CAAP;AACD;;AAEiB,SAAX,WAAW,CAAC,GAAD,EAAM,SAAN,EAAgB;AAChC,QAAI,SAAS,GAAG,IAAI,CAAC,SAAL,CAAe,YAAf,CAA4B,IAA5B,CAAiC,GAAjC,CAAhB;AAAA,QACE,QAAQ,GAAG,GAAG,CAAC,QADjB;AAAA,QAEE,EAFF;AAAA,QAGE,GAHF;AAAA,QAIE,CAJF;;AAOA,QAAI,SAAJ,EAAe;AACb,MAAA,GAAG,CAAC,KAAJ,CAAU,SAAV,GAAsB,SAAtB;AACD;;AAED,QAAI,CAAC,KAAK,CAAC,SAAD,CAAV,EAAuB;AACrB,MAAA,IAAI,CAAC,IAAL,CACE,0CACE,SADF,GAEE,yBAHJ;AAKA,MAAA,SAAS,GAAG,OAAZ;AACD;;AAED,UAAM,KAAK,GAAG,KAAK,CAAC,SAAD,CAAnB;AAEA,IAAA,EAAE,GAAG,IAAI,KAAJ,CAAU,GAAG,CAAC,KAAd,CAAL;;AACA,QAAI,QAAJ,EAAc;AACZ,MAAA,GAAG,GAAG,QAAQ,CAAC,MAAf;;AACA,WAAK,CAAC,GAAG,CAAT,EAAY,CAAC,GAAG,GAAhB,EAAqB,CAAC,EAAtB,EAA0B;AACxB,QAAA,EAAE,CAAC,GAAH,CAAO,IAAI,CAAC,WAAL,CAAiB,QAAQ,CAAC,CAAD,CAAzB,CAAP;AACD;AACF;;AAED,WAAO,EAAP;AACD;;AA36EuB;AAo7E1B,IAAI,CAAC,SAAL,CAAe,QAAf,GAA0B,MAA1B;AACA,IAAI,CAAC,SAAL,CAAe,mBAAf,GAAqC,EAArC;AAIA,IAAI,CAAC,SAAL,CAAe,cAAf,GAAgC,EAAhC;AACA,IAAI,CAAC,SAAL,CAAe,EAAf,CAAkB,IAAlB,CAAuB,IAAI,CAAC,SAA5B,EAAuC,oBAAvC,EAA6D,YAAA;AAC3D,MAAI,KAAK,wBAAT,EAAmC;AACjC,SAAK,wBAAL,GAAgC,IAAhC;AACA;AACD;;AACD,OAAK,WAAL,CAAiB,SAAjB;;AACA,OAAK,4BAAL,CAAkC,kBAAlC;AACD,CAPD;AASA,IAAI,CAAC,SAAL,CAAe,EAAf,CAAkB,IAAlB,CAAuB,IAAI,CAAC,SAA5B,EAAuC,qBAAvC,EAA8D,YAAA;AAC5D,OAAK,4BAAL,CAAkC,OAAlC;AACD,CAFD;AAGA,IAAI,CAAC,SAAL,CAAe,EAAf,CAAkB,IAAlB,CAAuB,IAAI,CAAC,SAA5B,EAAuC,uBAAvC,EAAgE,YAAA;AAC9D,OAAK,4BAAL,CAAkC,SAAlC;AACD,CAFD;AAGA,IAAI,CAAC,SAAL,CAAe,EAAf,CAAkB,IAAlB,CAAuB,IAAI,CAAC,SAA5B,EAAuC,qBAAvC,EAA8D,YAAA;AAC5D,OAAK,4BAAL,CAAkC,gBAAlC;AACD,CAFD;AAIA,MAAM,eAAe,GAAG,OAAO,CAAC,eAAhC;AAgBA,eAAe,CAAC,IAAD,EAAO,QAAP,CAAf;AAoBA,eAAe,CAAC,IAAD,EAAO,kBAAP,CAAf;AAEA,eAAe,CAAC,IAAD,EAAO,UAAP,CAAf;AAoBA,eAAe,CAAC,IAAD,EAAO,GAAP,EAAY,CAAZ,EAAe,kBAAkB,EAAjC,CAAf;AAgBA,eAAe,CAAC,IAAD,EAAO,GAAP,EAAY,CAAZ,EAAe,kBAAkB,EAAjC,CAAf;AAgBA,eAAe,CACb,IADa,EAEb,0BAFa,EAGb,aAHa,EAIb,kBAAkB,EAJL,CAAf;AAoBA,eAAe,CAAC,IAAD,EAAO,SAAP,EAAkB,CAAlB,EAAqB,kBAAkB,EAAvC,CAAf;AAkBA,eAAe,CAAC,IAAD,EAAO,MAAP,EAAe,EAAf,EAAmB,kBAAkB,EAArC,CAAf;AAmBA,eAAe,CAAC,IAAD,EAAO,IAAP,EAAa,EAAb,EAAiB,kBAAkB,EAAnC,CAAf;AAgBA,eAAe,CAAC,IAAD,EAAO,UAAP,EAAmB,CAAnB,EAAsB,kBAAkB,EAAxC,CAAf;AAgBA,OAAO,CAAC,yBAAR,CAAkC,IAAlC,EAAwC,OAAxC,EAAiD,CAAC,GAAD,EAAM,GAAN,CAAjD;AAqBA,eAAe,CAAC,IAAD,EAAO,QAAP,EAAiB,CAAjB,EAAoB,kBAAkB,EAAtC,CAAf;AAgBA,eAAe,CAAC,IAAD,EAAO,QAAP,EAAiB,CAAjB,EAAoB,kBAAkB,EAAtC,CAAf;AAgBA,OAAO,CAAC,yBAAR,CAAkC,IAAlC,EAAwC,MAAxC,EAAgD,CAAC,GAAD,EAAM,GAAN,CAAhD;AAqBA,eAAe,CAAC,IAAD,EAAO,OAAP,EAAgB,CAAhB,EAAmB,kBAAkB,EAArC,CAAf;AAgBA,eAAe,CAAC,IAAD,EAAO,OAAP,EAAgB,CAAhB,EAAmB,kBAAkB,EAArC,CAAf;AAgBA,OAAO,CAAC,yBAAR,CAAkC,IAAlC,EAAwC,QAAxC,EAAkD,CAAC,GAAD,EAAM,GAAN,CAAlD;AAoBA,eAAe,CAAC,IAAD,EAAO,SAAP,EAAkB,CAAlB,EAAqB,kBAAkB,EAAvC,CAAf;AAgBA,eAAe,CAAC,IAAD,EAAO,SAAP,EAAkB,CAAlB,EAAqB,kBAAkB,EAAvC,CAAf;AAgBA,eAAe,CAAC,IAAD,EAAO,cAAP,EAAuB,IAAvB,EAA6B,kBAAkB,EAA/C,CAAf;AAmBA,eAAe,CAAC,IAAD,EAAO,OAAP,EAAgB,CAAhB,EAAmB,kBAAkB,EAArC,CAAf;AAeA,eAAe,CAAC,IAAD,EAAO,QAAP,EAAiB,CAAjB,EAAoB,kBAAkB,EAAtC,CAAf;AAeA,eAAe,CAAC,IAAD,EAAO,WAAP,EAAoB,IAApB,EAA0B,mBAAmB,EAA7C,CAAf;AAsCA,eAAe,CAAC,IAAD,EAAO,gBAAP,EAAyB,IAAzB,EAA+B,mBAAmB,EAAlD,CAAf;AAEA,eAAe,CAAC,IAAD,EAAO,SAAP,EAAkB,IAAlB,EAAwB,UAAU,GAAV,EAAa;AAClD,OAAK,eAAL,GAAuB,KAAvB;AACA,SAAO,GAAP;AACD,CAHc,CAAf;AA2BA,eAAe,CAAC,IAAD,EAAO,SAAP,EAAkB,IAAlB,EAAwB,mBAAmB,EAA3C,CAAf;AAqBA,eAAe,CAAC,IAAD,EAAO,mBAAP,EAA4B,KAA5B,EAAmC,kBAAkB,EAArD,CAAf;AAqCA,eAAe,CAAC,IAAD,EAAO,MAAP,CAAf;AAuBA,eAAe,CAAC,IAAD,EAAO,eAAP,CAAf;AAkBA,eAAe,CAAC,IAAD,EAAO,WAAP,EAAoB,KAApB,EAA2B,mBAAmB,EAA9C,CAAf;AAEA,OAAO,CAAC,UAAR,CAAmB,IAAnB,EAAyB;AACvB,EAAA,SAAS,EAAE,QADY;AAEvB,EAAA,cAAc,EAAE,aAFO;AAGvB,EAAA,cAAc,EAAE;AAHO,CAAzB","sourceRoot":"","sourcesContent":["import { Util, Transform } from './Util.js';\nimport { Factory } from './Factory.js';\nimport { SceneCanvas, HitCanvas } from './Canvas.js';\nimport { Konva } from './Global.js';\nimport { DD } from './DragAndDrop.js';\nimport { getNumberValidator, getStringValidator, getBooleanValidator, } from './Validators.js';\nvar ABSOLUTE_OPACITY = 'absoluteOpacity', ALL_LISTENERS = 'allEventListeners', ABSOLUTE_TRANSFORM = 'absoluteTransform', ABSOLUTE_SCALE = 'absoluteScale', CANVAS = 'canvas', CHANGE = 'Change', CHILDREN = 'children', KONVA = 'konva', LISTENING = 'listening', MOUSEENTER = 'mouseenter', MOUSELEAVE = 'mouseleave', NAME = 'name', SET = 'set', SHAPE = 'Shape', SPACE = ' ', STAGE = 'stage', TRANSFORM = 'transform', UPPER_STAGE = 'Stage', VISIBLE = 'visible', TRANSFORM_CHANGE_STR = [\n    'xChange.konva',\n    'yChange.konva',\n    'scaleXChange.konva',\n    'scaleYChange.konva',\n    'skewXChange.konva',\n    'skewYChange.konva',\n    'rotationChange.konva',\n    'offsetXChange.konva',\n    'offsetYChange.konva',\n    'transformsEnabledChange.konva',\n].join(SPACE);\nlet idCounter = 1;\nexport class Node {\n    constructor(config) {\n        this._id = idCounter++;\n        this.eventListeners = {};\n        this.attrs = {};\n        this.index = 0;\n        this._allEventListeners = null;\n        this.parent = null;\n        this._cache = new Map();\n        this._attachedDepsListeners = new Map();\n        this._lastPos = null;\n        this._batchingTransformChange = false;\n        this._needClearTransformCache = false;\n        this._filterUpToDate = false;\n        this._isUnderCache = false;\n        this._dragEventId = null;\n        this._shouldFireChangeEvents = false;\n        this.setAttrs(config);\n        this._shouldFireChangeEvents = true;\n    }\n    hasChildren() {\n        return false;\n    }\n    _clearCache(attr) {\n        if ((attr === TRANSFORM || attr === ABSOLUTE_TRANSFORM) &&\n            this._cache.get(attr)) {\n            this._cache.get(attr).dirty = true;\n        }\n        else if (attr) {\n            this._cache.delete(attr);\n        }\n        else {\n            this._cache.clear();\n        }\n    }\n    _getCache(attr, privateGetter) {\n        var cache = this._cache.get(attr);\n        var isTransform = attr === TRANSFORM || attr === ABSOLUTE_TRANSFORM;\n        var invalid = cache === undefined || (isTransform && cache.dirty === true);\n        if (invalid) {\n            cache = privateGetter.call(this);\n            this._cache.set(attr, cache);\n        }\n        return cache;\n    }\n    _calculate(name, deps, getter) {\n        if (!this._attachedDepsListeners.get(name)) {\n            const depsString = deps.map((dep) => dep + 'Change.konva').join(SPACE);\n            this.on(depsString, () => {\n                this._clearCache(name);\n            });\n            this._attachedDepsListeners.set(name, true);\n        }\n        return this._getCache(name, getter);\n    }\n    _getCanvasCache() {\n        return this._cache.get(CANVAS);\n    }\n    _clearSelfAndDescendantCache(attr) {\n        this._clearCache(attr);\n        if (attr === ABSOLUTE_TRANSFORM) {\n            this.fire('absoluteTransformChange');\n        }\n    }\n    clearCache() {\n        this._cache.delete(CANVAS);\n        this._clearSelfAndDescendantCache();\n        this._requestDraw();\n        return this;\n    }\n    cache(config) {\n        var conf = config || {};\n        var rect = {};\n        if (conf.x === undefined ||\n            conf.y === undefined ||\n            conf.width === undefined ||\n            conf.height === undefined) {\n            rect = this.getClientRect({\n                skipTransform: true,\n                relativeTo: this.getParent(),\n            });\n        }\n        var width = Math.ceil(conf.width || rect.width), height = Math.ceil(conf.height || rect.height), pixelRatio = conf.pixelRatio, x = conf.x === undefined ? rect.x : conf.x, y = conf.y === undefined ? rect.y : conf.y, offset = conf.offset || 0, drawBorder = conf.drawBorder || false, hitCanvasPixelRatio = conf.hitCanvasPixelRatio || 1;\n        if (!width || !height) {\n            Util.error('Can not cache the node. Width or height of the node equals 0. Caching is skipped.');\n            return;\n        }\n        width += offset * 2;\n        height += offset * 2;\n        x -= offset;\n        y -= offset;\n        var cachedSceneCanvas = new SceneCanvas({\n            pixelRatio: pixelRatio,\n            width: width,\n            height: height,\n        }), cachedFilterCanvas = new SceneCanvas({\n            pixelRatio: pixelRatio,\n            width: 0,\n            height: 0,\n        }), cachedHitCanvas = new HitCanvas({\n            pixelRatio: hitCanvasPixelRatio,\n            width: width,\n            height: height,\n        }), sceneContext = cachedSceneCanvas.getContext(), hitContext = cachedHitCanvas.getContext();\n        cachedHitCanvas.isCache = true;\n        cachedSceneCanvas.isCache = true;\n        this._cache.delete(CANVAS);\n        this._filterUpToDate = false;\n        if (conf.imageSmoothingEnabled === false) {\n            cachedSceneCanvas.getContext()._context.imageSmoothingEnabled = false;\n            cachedFilterCanvas.getContext()._context.imageSmoothingEnabled = false;\n        }\n        sceneContext.save();\n        hitContext.save();\n        sceneContext.translate(-x, -y);\n        hitContext.translate(-x, -y);\n        this._isUnderCache = true;\n        this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n        this._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\n        this.drawScene(cachedSceneCanvas, this);\n        this.drawHit(cachedHitCanvas, this);\n        this._isUnderCache = false;\n        sceneContext.restore();\n        hitContext.restore();\n        if (drawBorder) {\n            sceneContext.save();\n            sceneContext.beginPath();\n            sceneContext.rect(0, 0, width, height);\n            sceneContext.closePath();\n            sceneContext.setAttr('strokeStyle', 'red');\n            sceneContext.setAttr('lineWidth', 5);\n            sceneContext.stroke();\n            sceneContext.restore();\n        }\n        this._cache.set(CANVAS, {\n            scene: cachedSceneCanvas,\n            filter: cachedFilterCanvas,\n            hit: cachedHitCanvas,\n            x: x,\n            y: y,\n        });\n        this._requestDraw();\n        return this;\n    }\n    isCached() {\n        return this._cache.has(CANVAS);\n    }\n    getClientRect(config) {\n        throw new Error('abstract \"getClientRect\" method call');\n    }\n    _transformedRect(rect, top) {\n        var points = [\n            { x: rect.x, y: rect.y },\n            { x: rect.x + rect.width, y: rect.y },\n            { x: rect.x + rect.width, y: rect.y + rect.height },\n            { x: rect.x, y: rect.y + rect.height },\n        ];\n        var minX, minY, maxX, maxY;\n        var trans = this.getAbsoluteTransform(top);\n        points.forEach(function (point) {\n            var transformed = trans.point(point);\n            if (minX === undefined) {\n                minX = maxX = transformed.x;\n                minY = maxY = transformed.y;\n            }\n            minX = Math.min(minX, transformed.x);\n            minY = Math.min(minY, transformed.y);\n            maxX = Math.max(maxX, transformed.x);\n            maxY = Math.max(maxY, transformed.y);\n        });\n        return {\n            x: minX,\n            y: minY,\n            width: maxX - minX,\n            height: maxY - minY,\n        };\n    }\n    _drawCachedSceneCanvas(context) {\n        context.save();\n        context._applyOpacity(this);\n        context._applyGlobalCompositeOperation(this);\n        const canvasCache = this._getCanvasCache();\n        context.translate(canvasCache.x, canvasCache.y);\n        var cacheCanvas = this._getCachedSceneCanvas();\n        var ratio = cacheCanvas.pixelRatio;\n        context.drawImage(cacheCanvas._canvas, 0, 0, cacheCanvas.width / ratio, cacheCanvas.height / ratio);\n        context.restore();\n    }\n    _drawCachedHitCanvas(context) {\n        var canvasCache = this._getCanvasCache(), hitCanvas = canvasCache.hit;\n        context.save();\n        context.translate(canvasCache.x, canvasCache.y);\n        context.drawImage(hitCanvas._canvas, 0, 0, hitCanvas.width / hitCanvas.pixelRatio, hitCanvas.height / hitCanvas.pixelRatio);\n        context.restore();\n    }\n    _getCachedSceneCanvas() {\n        var filters = this.filters(), cachedCanvas = this._getCanvasCache(), sceneCanvas = cachedCanvas.scene, filterCanvas = cachedCanvas.filter, filterContext = filterCanvas.getContext(), len, imageData, n, filter;\n        if (filters) {\n            if (!this._filterUpToDate) {\n                var ratio = sceneCanvas.pixelRatio;\n                filterCanvas.setSize(sceneCanvas.width / sceneCanvas.pixelRatio, sceneCanvas.height / sceneCanvas.pixelRatio);\n                try {\n                    len = filters.length;\n                    filterContext.clear();\n                    filterContext.drawImage(sceneCanvas._canvas, 0, 0, sceneCanvas.getWidth() / ratio, sceneCanvas.getHeight() / ratio);\n                    imageData = filterContext.getImageData(0, 0, filterCanvas.getWidth(), filterCanvas.getHeight());\n                    for (n = 0; n < len; n++) {\n                        filter = filters[n];\n                        if (typeof filter !== 'function') {\n                            Util.error('Filter should be type of function, but got ' +\n                                typeof filter +\n                                ' instead. Please check correct filters');\n                            continue;\n                        }\n                        filter.call(this, imageData);\n                        filterContext.putImageData(imageData, 0, 0);\n                    }\n                }\n                catch (e) {\n                    Util.error('Unable to apply filter. ' +\n                        e.message +\n                        ' This post my help you https://konvajs.org/docs/posts/Tainted_Canvas.html.');\n                }\n                this._filterUpToDate = true;\n            }\n            return filterCanvas;\n        }\n        return sceneCanvas;\n    }\n    on(evtStr, handler) {\n        this._cache && this._cache.delete(ALL_LISTENERS);\n        if (arguments.length === 3) {\n            return this._delegate.apply(this, arguments);\n        }\n        var events = evtStr.split(SPACE), len = events.length, n, event, parts, baseEvent, name;\n        for (n = 0; n < len; n++) {\n            event = events[n];\n            parts = event.split('.');\n            baseEvent = parts[0];\n            name = parts[1] || '';\n            if (!this.eventListeners[baseEvent]) {\n                this.eventListeners[baseEvent] = [];\n            }\n            this.eventListeners[baseEvent].push({\n                name: name,\n                handler: handler,\n            });\n        }\n        return this;\n    }\n    off(evtStr, callback) {\n        var events = (evtStr || '').split(SPACE), len = events.length, n, t, event, parts, baseEvent, name;\n        this._cache && this._cache.delete(ALL_LISTENERS);\n        if (!evtStr) {\n            for (t in this.eventListeners) {\n                this._off(t);\n            }\n        }\n        for (n = 0; n < len; n++) {\n            event = events[n];\n            parts = event.split('.');\n            baseEvent = parts[0];\n            name = parts[1];\n            if (baseEvent) {\n                if (this.eventListeners[baseEvent]) {\n                    this._off(baseEvent, name, callback);\n                }\n            }\n            else {\n                for (t in this.eventListeners) {\n                    this._off(t, name, callback);\n                }\n            }\n        }\n        return this;\n    }\n    dispatchEvent(evt) {\n        var e = {\n            target: this,\n            type: evt.type,\n            evt: evt,\n        };\n        this.fire(evt.type, e);\n        return this;\n    }\n    addEventListener(type, handler) {\n        this.on(type, function (evt) {\n            handler.call(this, evt.evt);\n        });\n        return this;\n    }\n    removeEventListener(type) {\n        this.off(type);\n        return this;\n    }\n    _delegate(event, selector, handler) {\n        var stopNode = this;\n        this.on(event, function (evt) {\n            var targets = evt.target.findAncestors(selector, true, stopNode);\n            for (var i = 0; i < targets.length; i++) {\n                evt = Util.cloneObject(evt);\n                evt.currentTarget = targets[i];\n                handler.call(targets[i], evt);\n            }\n        });\n    }\n    remove() {\n        if (this.isDragging()) {\n            this.stopDrag();\n        }\n        DD._dragElements.delete(this._id);\n        this._remove();\n        return this;\n    }\n    _clearCaches() {\n        this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n        this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n        this._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\n        this._clearSelfAndDescendantCache(STAGE);\n        this._clearSelfAndDescendantCache(VISIBLE);\n        this._clearSelfAndDescendantCache(LISTENING);\n    }\n    _remove() {\n        this._clearCaches();\n        var parent = this.getParent();\n        if (parent && parent.children) {\n            parent.children.splice(this.index, 1);\n            parent._setChildrenIndices();\n            this.parent = null;\n        }\n    }\n    destroy() {\n        this.remove();\n        return this;\n    }\n    getAttr(attr) {\n        var method = 'get' + Util._capitalize(attr);\n        if (Util._isFunction(this[method])) {\n            return this[method]();\n        }\n        return this.attrs[attr];\n    }\n    getAncestors() {\n        var parent = this.getParent(), ancestors = [];\n        while (parent) {\n            ancestors.push(parent);\n            parent = parent.getParent();\n        }\n        return ancestors;\n    }\n    getAttrs() {\n        return this.attrs || {};\n    }\n    setAttrs(config) {\n        this._batchTransformChanges(() => {\n            var key, method;\n            if (!config) {\n                return this;\n            }\n            for (key in config) {\n                if (key === CHILDREN) {\n                    continue;\n                }\n                method = SET + Util._capitalize(key);\n                if (Util._isFunction(this[method])) {\n                    this[method](config[key]);\n                }\n                else {\n                    this._setAttr(key, config[key]);\n                }\n            }\n        });\n        return this;\n    }\n    isListening() {\n        return this._getCache(LISTENING, this._isListening);\n    }\n    _isListening(relativeTo) {\n        const listening = this.listening();\n        if (!listening) {\n            return false;\n        }\n        const parent = this.getParent();\n        if (parent && parent !== relativeTo && this !== relativeTo) {\n            return parent._isListening(relativeTo);\n        }\n        else {\n            return true;\n        }\n    }\n    isVisible() {\n        return this._getCache(VISIBLE, this._isVisible);\n    }\n    _isVisible(relativeTo) {\n        const visible = this.visible();\n        if (!visible) {\n            return false;\n        }\n        const parent = this.getParent();\n        if (parent && parent !== relativeTo && this !== relativeTo) {\n            return parent._isVisible(relativeTo);\n        }\n        else {\n            return true;\n        }\n    }\n    shouldDrawHit(top, skipDragCheck = false) {\n        if (top) {\n            return this._isVisible(top) && this._isListening(top);\n        }\n        var layer = this.getLayer();\n        var layerUnderDrag = false;\n        DD._dragElements.forEach((elem) => {\n            if (elem.dragStatus !== 'dragging') {\n                return;\n            }\n            else if (elem.node.nodeType === 'Stage') {\n                layerUnderDrag = true;\n            }\n            else if (elem.node.getLayer() === layer) {\n                layerUnderDrag = true;\n            }\n        });\n        var dragSkip = !skipDragCheck && !Konva.hitOnDragEnabled && layerUnderDrag;\n        return this.isListening() && this.isVisible() && !dragSkip;\n    }\n    show() {\n        this.visible(true);\n        return this;\n    }\n    hide() {\n        this.visible(false);\n        return this;\n    }\n    getZIndex() {\n        return this.index || 0;\n    }\n    getAbsoluteZIndex() {\n        var depth = this.getDepth(), that = this, index = 0, nodes, len, n, child;\n        function addChildren(children) {\n            nodes = [];\n            len = children.length;\n            for (n = 0; n < len; n++) {\n                child = children[n];\n                index++;\n                if (child.nodeType !== SHAPE) {\n                    nodes = nodes.concat(child.getChildren().slice());\n                }\n                if (child._id === that._id) {\n                    n = len;\n                }\n            }\n            if (nodes.length > 0 && nodes[0].getDepth() <= depth) {\n                addChildren(nodes);\n            }\n        }\n        if (that.nodeType !== UPPER_STAGE) {\n            addChildren(that.getStage().getChildren());\n        }\n        return index;\n    }\n    getDepth() {\n        var depth = 0, parent = this.parent;\n        while (parent) {\n            depth++;\n            parent = parent.parent;\n        }\n        return depth;\n    }\n    _batchTransformChanges(func) {\n        this._batchingTransformChange = true;\n        func();\n        this._batchingTransformChange = false;\n        if (this._needClearTransformCache) {\n            this._clearCache(TRANSFORM);\n            this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n        }\n        this._needClearTransformCache = false;\n    }\n    setPosition(pos) {\n        this._batchTransformChanges(() => {\n            this.x(pos.x);\n            this.y(pos.y);\n        });\n        return this;\n    }\n    getPosition() {\n        return {\n            x: this.x(),\n            y: this.y(),\n        };\n    }\n    getRelativePointerPosition() {\n        if (!this.getStage()) {\n            return null;\n        }\n        var pos = this.getStage().getPointerPosition();\n        if (!pos) {\n            return null;\n        }\n        var transform = this.getAbsoluteTransform().copy();\n        transform.invert();\n        return transform.point(pos);\n    }\n    getAbsolutePosition(top) {\n        let haveCachedParent = false;\n        let parent = this.parent;\n        while (parent) {\n            if (parent.isCached()) {\n                haveCachedParent = true;\n                break;\n            }\n            parent = parent.parent;\n        }\n        if (haveCachedParent && !top) {\n            top = true;\n        }\n        var absoluteMatrix = this.getAbsoluteTransform(top).getMatrix(), absoluteTransform = new Transform(), offset = this.offset();\n        absoluteTransform.m = absoluteMatrix.slice();\n        absoluteTransform.translate(offset.x, offset.y);\n        return absoluteTransform.getTranslation();\n    }\n    setAbsolutePosition(pos) {\n        var origTrans = this._clearTransform();\n        this.attrs.x = origTrans.x;\n        this.attrs.y = origTrans.y;\n        delete origTrans.x;\n        delete origTrans.y;\n        this._clearCache(TRANSFORM);\n        var it = this._getAbsoluteTransform().copy();\n        it.invert();\n        it.translate(pos.x, pos.y);\n        pos = {\n            x: this.attrs.x + it.getTranslation().x,\n            y: this.attrs.y + it.getTranslation().y,\n        };\n        this._setTransform(origTrans);\n        this.setPosition({ x: pos.x, y: pos.y });\n        this._clearCache(TRANSFORM);\n        this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n        return this;\n    }\n    _setTransform(trans) {\n        var key;\n        for (key in trans) {\n            this.attrs[key] = trans[key];\n        }\n    }\n    _clearTransform() {\n        var trans = {\n            x: this.x(),\n            y: this.y(),\n            rotation: this.rotation(),\n            scaleX: this.scaleX(),\n            scaleY: this.scaleY(),\n            offsetX: this.offsetX(),\n            offsetY: this.offsetY(),\n            skewX: this.skewX(),\n            skewY: this.skewY(),\n        };\n        this.attrs.x = 0;\n        this.attrs.y = 0;\n        this.attrs.rotation = 0;\n        this.attrs.scaleX = 1;\n        this.attrs.scaleY = 1;\n        this.attrs.offsetX = 0;\n        this.attrs.offsetY = 0;\n        this.attrs.skewX = 0;\n        this.attrs.skewY = 0;\n        return trans;\n    }\n    move(change) {\n        var changeX = change.x, changeY = change.y, x = this.x(), y = this.y();\n        if (changeX !== undefined) {\n            x += changeX;\n        }\n        if (changeY !== undefined) {\n            y += changeY;\n        }\n        this.setPosition({ x: x, y: y });\n        return this;\n    }\n    _eachAncestorReverse(func, top) {\n        var family = [], parent = this.getParent(), len, n;\n        if (top && top._id === this._id) {\n            return;\n        }\n        family.unshift(this);\n        while (parent && (!top || parent._id !== top._id)) {\n            family.unshift(parent);\n            parent = parent.parent;\n        }\n        len = family.length;\n        for (n = 0; n < len; n++) {\n            func(family[n]);\n        }\n    }\n    rotate(theta) {\n        this.rotation(this.rotation() + theta);\n        return this;\n    }\n    moveToTop() {\n        if (!this.parent) {\n            Util.warn('Node has no parent. moveToTop function is ignored.');\n            return false;\n        }\n        var index = this.index, len = this.parent.getChildren().length;\n        if (index < len - 1) {\n            this.parent.children.splice(index, 1);\n            this.parent.children.push(this);\n            this.parent._setChildrenIndices();\n            return true;\n        }\n        return false;\n    }\n    moveUp() {\n        if (!this.parent) {\n            Util.warn('Node has no parent. moveUp function is ignored.');\n            return false;\n        }\n        var index = this.index, len = this.parent.getChildren().length;\n        if (index < len - 1) {\n            this.parent.children.splice(index, 1);\n            this.parent.children.splice(index + 1, 0, this);\n            this.parent._setChildrenIndices();\n            return true;\n        }\n        return false;\n    }\n    moveDown() {\n        if (!this.parent) {\n            Util.warn('Node has no parent. moveDown function is ignored.');\n            return false;\n        }\n        var index = this.index;\n        if (index > 0) {\n            this.parent.children.splice(index, 1);\n            this.parent.children.splice(index - 1, 0, this);\n            this.parent._setChildrenIndices();\n            return true;\n        }\n        return false;\n    }\n    moveToBottom() {\n        if (!this.parent) {\n            Util.warn('Node has no parent. moveToBottom function is ignored.');\n            return false;\n        }\n        var index = this.index;\n        if (index > 0) {\n            this.parent.children.splice(index, 1);\n            this.parent.children.unshift(this);\n            this.parent._setChildrenIndices();\n            return true;\n        }\n        return false;\n    }\n    setZIndex(zIndex) {\n        if (!this.parent) {\n            Util.warn('Node has no parent. zIndex parameter is ignored.');\n            return this;\n        }\n        if (zIndex < 0 || zIndex >= this.parent.children.length) {\n            Util.warn('Unexpected value ' +\n                zIndex +\n                ' for zIndex property. zIndex is just index of a node in children of its parent. Expected value is from 0 to ' +\n                (this.parent.children.length - 1) +\n                '.');\n        }\n        var index = this.index;\n        this.parent.children.splice(index, 1);\n        this.parent.children.splice(zIndex, 0, this);\n        this.parent._setChildrenIndices();\n        return this;\n    }\n    getAbsoluteOpacity() {\n        return this._getCache(ABSOLUTE_OPACITY, this._getAbsoluteOpacity);\n    }\n    _getAbsoluteOpacity() {\n        var absOpacity = this.opacity();\n        var parent = this.getParent();\n        if (parent && !parent._isUnderCache) {\n            absOpacity *= parent.getAbsoluteOpacity();\n        }\n        return absOpacity;\n    }\n    moveTo(newContainer) {\n        if (this.getParent() !== newContainer) {\n            this._remove();\n            newContainer.add(this);\n        }\n        return this;\n    }\n    toObject() {\n        var obj = {}, attrs = this.getAttrs(), key, val, getter, defaultValue, nonPlainObject;\n        obj.attrs = {};\n        for (key in attrs) {\n            val = attrs[key];\n            nonPlainObject =\n                Util.isObject(val) && !Util._isPlainObject(val) && !Util._isArray(val);\n            if (nonPlainObject) {\n                continue;\n            }\n            getter = typeof this[key] === 'function' && this[key];\n            delete attrs[key];\n            defaultValue = getter ? getter.call(this) : null;\n            attrs[key] = val;\n            if (defaultValue !== val) {\n                obj.attrs[key] = val;\n            }\n        }\n        obj.className = this.getClassName();\n        return Util._prepareToStringify(obj);\n    }\n    toJSON() {\n        return JSON.stringify(this.toObject());\n    }\n    getParent() {\n        return this.parent;\n    }\n    findAncestors(selector, includeSelf, stopNode) {\n        var res = [];\n        if (includeSelf && this._isMatch(selector)) {\n            res.push(this);\n        }\n        var ancestor = this.parent;\n        while (ancestor) {\n            if (ancestor === stopNode) {\n                return res;\n            }\n            if (ancestor._isMatch(selector)) {\n                res.push(ancestor);\n            }\n            ancestor = ancestor.parent;\n        }\n        return res;\n    }\n    isAncestorOf(node) {\n        return false;\n    }\n    findAncestor(selector, includeSelf, stopNode) {\n        return this.findAncestors(selector, includeSelf, stopNode)[0];\n    }\n    _isMatch(selector) {\n        if (!selector) {\n            return false;\n        }\n        if (typeof selector === 'function') {\n            return selector(this);\n        }\n        var selectorArr = selector.replace(/ /g, '').split(','), len = selectorArr.length, n, sel;\n        for (n = 0; n < len; n++) {\n            sel = selectorArr[n];\n            if (!Util.isValidSelector(sel)) {\n                Util.warn('Selector \"' +\n                    sel +\n                    '\" is invalid. Allowed selectors examples are \"#foo\", \".bar\" or \"Group\".');\n                Util.warn('If you have a custom shape with such className, please change it to start with upper letter like \"Triangle\".');\n                Util.warn('Konva is awesome, right?');\n            }\n            if (sel.charAt(0) === '#') {\n                if (this.id() === sel.slice(1)) {\n                    return true;\n                }\n            }\n            else if (sel.charAt(0) === '.') {\n                if (this.hasName(sel.slice(1))) {\n                    return true;\n                }\n            }\n            else if (this.className === sel || this.nodeType === sel) {\n                return true;\n            }\n        }\n        return false;\n    }\n    getLayer() {\n        var parent = this.getParent();\n        return parent ? parent.getLayer() : null;\n    }\n    getStage() {\n        return this._getCache(STAGE, this._getStage);\n    }\n    _getStage() {\n        var parent = this.getParent();\n        if (parent) {\n            return parent.getStage();\n        }\n        else {\n            return undefined;\n        }\n    }\n    fire(eventType, evt = {}, bubble) {\n        evt.target = evt.target || this;\n        if (bubble) {\n            this._fireAndBubble(eventType, evt);\n        }\n        else {\n            this._fire(eventType, evt);\n        }\n        return this;\n    }\n    getAbsoluteTransform(top) {\n        if (top) {\n            return this._getAbsoluteTransform(top);\n        }\n        else {\n            return this._getCache(ABSOLUTE_TRANSFORM, this._getAbsoluteTransform);\n        }\n    }\n    _getAbsoluteTransform(top) {\n        var at;\n        if (top) {\n            at = new Transform();\n            this._eachAncestorReverse(function (node) {\n                var transformsEnabled = node.transformsEnabled();\n                if (transformsEnabled === 'all') {\n                    at.multiply(node.getTransform());\n                }\n                else if (transformsEnabled === 'position') {\n                    at.translate(node.x() - node.offsetX(), node.y() - node.offsetY());\n                }\n            }, top);\n            return at;\n        }\n        else {\n            at = this._cache.get(ABSOLUTE_TRANSFORM) || new Transform();\n            if (this.parent) {\n                this.parent.getAbsoluteTransform().copyInto(at);\n            }\n            else {\n                at.reset();\n            }\n            var transformsEnabled = this.transformsEnabled();\n            if (transformsEnabled === 'all') {\n                at.multiply(this.getTransform());\n            }\n            else if (transformsEnabled === 'position') {\n                const x = this.attrs.x || 0;\n                const y = this.attrs.y || 0;\n                const offsetX = this.attrs.offsetX || 0;\n                const offsetY = this.attrs.offsetY || 0;\n                at.translate(x - offsetX, y - offsetY);\n            }\n            at.dirty = false;\n            return at;\n        }\n    }\n    getAbsoluteScale(top) {\n        var parent = this;\n        while (parent) {\n            if (parent._isUnderCache) {\n                top = parent;\n            }\n            parent = parent.getParent();\n        }\n        const transform = this.getAbsoluteTransform(top);\n        const attrs = transform.decompose();\n        return {\n            x: attrs.scaleX,\n            y: attrs.scaleY,\n        };\n    }\n    getAbsoluteRotation() {\n        return this.getAbsoluteTransform().decompose().rotation;\n    }\n    getTransform() {\n        return this._getCache(TRANSFORM, this._getTransform);\n    }\n    _getTransform() {\n        var _a, _b;\n        var m = this._cache.get(TRANSFORM) || new Transform();\n        m.reset();\n        var x = this.x(), y = this.y(), rotation = Konva.getAngle(this.rotation()), scaleX = (_a = this.attrs.scaleX) !== null && _a !== void 0 ? _a : 1, scaleY = (_b = this.attrs.scaleY) !== null && _b !== void 0 ? _b : 1, skewX = this.attrs.skewX || 0, skewY = this.attrs.skewY || 0, offsetX = this.attrs.offsetX || 0, offsetY = this.attrs.offsetY || 0;\n        if (x !== 0 || y !== 0) {\n            m.translate(x, y);\n        }\n        if (rotation !== 0) {\n            m.rotate(rotation);\n        }\n        if (skewX !== 0 || skewY !== 0) {\n            m.skew(skewX, skewY);\n        }\n        if (scaleX !== 1 || scaleY !== 1) {\n            m.scale(scaleX, scaleY);\n        }\n        if (offsetX !== 0 || offsetY !== 0) {\n            m.translate(-1 * offsetX, -1 * offsetY);\n        }\n        m.dirty = false;\n        return m;\n    }\n    clone(obj) {\n        var attrs = Util.cloneObject(this.attrs), key, allListeners, len, n, listener;\n        for (key in obj) {\n            attrs[key] = obj[key];\n        }\n        var node = new this.constructor(attrs);\n        for (key in this.eventListeners) {\n            allListeners = this.eventListeners[key];\n            len = allListeners.length;\n            for (n = 0; n < len; n++) {\n                listener = allListeners[n];\n                if (listener.name.indexOf(KONVA) < 0) {\n                    if (!node.eventListeners[key]) {\n                        node.eventListeners[key] = [];\n                    }\n                    node.eventListeners[key].push(listener);\n                }\n            }\n        }\n        return node;\n    }\n    _toKonvaCanvas(config) {\n        config = config || {};\n        var box = this.getClientRect();\n        var stage = this.getStage(), x = config.x !== undefined ? config.x : box.x, y = config.y !== undefined ? config.y : box.y, pixelRatio = config.pixelRatio || 1, canvas = new SceneCanvas({\n            width: config.width || box.width || (stage ? stage.width() : 0),\n            height: config.height || box.height || (stage ? stage.height() : 0),\n            pixelRatio: pixelRatio,\n        }), context = canvas.getContext();\n        context.save();\n        if (x || y) {\n            context.translate(-1 * x, -1 * y);\n        }\n        this.drawScene(canvas);\n        context.restore();\n        return canvas;\n    }\n    toCanvas(config) {\n        return this._toKonvaCanvas(config)._canvas;\n    }\n    toDataURL(config) {\n        config = config || {};\n        var mimeType = config.mimeType || null, quality = config.quality || null;\n        var url = this._toKonvaCanvas(config).toDataURL(mimeType, quality);\n        if (config.callback) {\n            config.callback(url);\n        }\n        return url;\n    }\n    toImage(config) {\n        if (!config || !config.callback) {\n            throw 'callback required for toImage method config argument';\n        }\n        var callback = config.callback;\n        delete config.callback;\n        Util._urlToImage(this.toDataURL(config), function (img) {\n            callback(img);\n        });\n    }\n    setSize(size) {\n        this.width(size.width);\n        this.height(size.height);\n        return this;\n    }\n    getSize() {\n        return {\n            width: this.width(),\n            height: this.height(),\n        };\n    }\n    getClassName() {\n        return this.className || this.nodeType;\n    }\n    getType() {\n        return this.nodeType;\n    }\n    getDragDistance() {\n        if (this.attrs.dragDistance !== undefined) {\n            return this.attrs.dragDistance;\n        }\n        else if (this.parent) {\n            return this.parent.getDragDistance();\n        }\n        else {\n            return Konva.dragDistance;\n        }\n    }\n    _off(type, name, callback) {\n        var evtListeners = this.eventListeners[type], i, evtName, handler;\n        for (i = 0; i < evtListeners.length; i++) {\n            evtName = evtListeners[i].name;\n            handler = evtListeners[i].handler;\n            if ((evtName !== 'konva' || name === 'konva') &&\n                (!name || evtName === name) &&\n                (!callback || callback === handler)) {\n                evtListeners.splice(i, 1);\n                if (evtListeners.length === 0) {\n                    delete this.eventListeners[type];\n                    break;\n                }\n                i--;\n            }\n        }\n    }\n    _fireChangeEvent(attr, oldVal, newVal) {\n        this._fire(attr + CHANGE, {\n            oldVal: oldVal,\n            newVal: newVal,\n        });\n    }\n    addName(name) {\n        if (!this.hasName(name)) {\n            var oldName = this.name();\n            var newName = oldName ? oldName + ' ' + name : name;\n            this.name(newName);\n        }\n        return this;\n    }\n    hasName(name) {\n        if (!name) {\n            return false;\n        }\n        const fullName = this.name();\n        if (!fullName) {\n            return false;\n        }\n        var names = (fullName || '').split(/\\s/g);\n        return names.indexOf(name) !== -1;\n    }\n    removeName(name) {\n        var names = (this.name() || '').split(/\\s/g);\n        var index = names.indexOf(name);\n        if (index !== -1) {\n            names.splice(index, 1);\n            this.name(names.join(' '));\n        }\n        return this;\n    }\n    setAttr(attr, val) {\n        var func = this[SET + Util._capitalize(attr)];\n        if (Util._isFunction(func)) {\n            func.call(this, val);\n        }\n        else {\n            this._setAttr(attr, val);\n        }\n        return this;\n    }\n    _requestDraw() {\n        if (Konva.autoDrawEnabled) {\n            const drawNode = this.getLayer() || this.getStage();\n            drawNode === null || drawNode === void 0 ? void 0 : drawNode.batchDraw();\n        }\n    }\n    _setAttr(key, val) {\n        var oldVal = this.attrs[key];\n        if (oldVal === val && !Util.isObject(val)) {\n            return;\n        }\n        if (val === undefined || val === null) {\n            delete this.attrs[key];\n        }\n        else {\n            this.attrs[key] = val;\n        }\n        if (this._shouldFireChangeEvents) {\n            this._fireChangeEvent(key, oldVal, val);\n        }\n        this._requestDraw();\n    }\n    _setComponentAttr(key, component, val) {\n        var oldVal;\n        if (val !== undefined) {\n            oldVal = this.attrs[key];\n            if (!oldVal) {\n                this.attrs[key] = this.getAttr(key);\n            }\n            this.attrs[key][component] = val;\n            this._fireChangeEvent(key, oldVal, val);\n        }\n    }\n    _fireAndBubble(eventType, evt, compareShape) {\n        if (evt && this.nodeType === SHAPE) {\n            evt.target = this;\n        }\n        var shouldStop = (eventType === MOUSEENTER || eventType === MOUSELEAVE) &&\n            ((compareShape &&\n                (this === compareShape ||\n                    (this.isAncestorOf && this.isAncestorOf(compareShape)))) ||\n                (this.nodeType === 'Stage' && !compareShape));\n        if (!shouldStop) {\n            this._fire(eventType, evt);\n            var stopBubble = (eventType === MOUSEENTER || eventType === MOUSELEAVE) &&\n                compareShape &&\n                compareShape.isAncestorOf &&\n                compareShape.isAncestorOf(this) &&\n                !compareShape.isAncestorOf(this.parent);\n            if (((evt && !evt.cancelBubble) || !evt) &&\n                this.parent &&\n                this.parent.isListening() &&\n                !stopBubble) {\n                if (compareShape && compareShape.parent) {\n                    this._fireAndBubble.call(this.parent, eventType, evt, compareShape);\n                }\n                else {\n                    this._fireAndBubble.call(this.parent, eventType, evt);\n                }\n            }\n        }\n    }\n    _getProtoListeners(eventType) {\n        let listeners = this._cache.get(ALL_LISTENERS);\n        if (!listeners) {\n            listeners = {};\n            let obj = Object.getPrototypeOf(this);\n            while (obj) {\n                if (!obj.eventListeners) {\n                    obj = Object.getPrototypeOf(obj);\n                    continue;\n                }\n                for (var event in obj.eventListeners) {\n                    const newEvents = obj.eventListeners[event];\n                    const oldEvents = listeners[event] || [];\n                    listeners[event] = newEvents.concat(oldEvents);\n                }\n                obj = Object.getPrototypeOf(obj);\n            }\n            this._cache.set(ALL_LISTENERS, listeners);\n        }\n        return listeners[eventType];\n    }\n    _fire(eventType, evt) {\n        evt = evt || {};\n        evt.currentTarget = this;\n        evt.type = eventType;\n        const topListeners = this._getProtoListeners(eventType);\n        if (topListeners) {\n            for (var i = 0; i < topListeners.length; i++) {\n                topListeners[i].handler.call(this, evt);\n            }\n        }\n        const selfListeners = this.eventListeners[eventType];\n        if (selfListeners) {\n            for (var i = 0; i < selfListeners.length; i++) {\n                selfListeners[i].handler.call(this, evt);\n            }\n        }\n    }\n    draw() {\n        this.drawScene();\n        this.drawHit();\n        return this;\n    }\n    _createDragElement(evt) {\n        var pointerId = evt ? evt.pointerId : undefined;\n        var stage = this.getStage();\n        var ap = this.getAbsolutePosition();\n        var pos = stage._getPointerById(pointerId) ||\n            stage._changedPointerPositions[0] ||\n            ap;\n        DD._dragElements.set(this._id, {\n            node: this,\n            startPointerPos: pos,\n            offset: {\n                x: pos.x - ap.x,\n                y: pos.y - ap.y,\n            },\n            dragStatus: 'ready',\n            pointerId,\n        });\n    }\n    startDrag(evt, bubbleEvent = true) {\n        if (!DD._dragElements.has(this._id)) {\n            this._createDragElement(evt);\n        }\n        const elem = DD._dragElements.get(this._id);\n        elem.dragStatus = 'dragging';\n        this.fire('dragstart', {\n            type: 'dragstart',\n            target: this,\n            evt: evt && evt.evt,\n        }, bubbleEvent);\n    }\n    _setDragPosition(evt, elem) {\n        const pos = this.getStage()._getPointerById(elem.pointerId);\n        if (!pos) {\n            return;\n        }\n        var newNodePos = {\n            x: pos.x - elem.offset.x,\n            y: pos.y - elem.offset.y,\n        };\n        var dbf = this.dragBoundFunc();\n        if (dbf !== undefined) {\n            const bounded = dbf.call(this, newNodePos, evt);\n            if (!bounded) {\n                Util.warn('dragBoundFunc did not return any value. That is unexpected behavior. You must return new absolute position from dragBoundFunc.');\n            }\n            else {\n                newNodePos = bounded;\n            }\n        }\n        if (!this._lastPos ||\n            this._lastPos.x !== newNodePos.x ||\n            this._lastPos.y !== newNodePos.y) {\n            this.setAbsolutePosition(newNodePos);\n            this._requestDraw();\n        }\n        this._lastPos = newNodePos;\n    }\n    stopDrag(evt) {\n        const elem = DD._dragElements.get(this._id);\n        if (elem) {\n            elem.dragStatus = 'stopped';\n        }\n        DD._endDragBefore(evt);\n        DD._endDragAfter(evt);\n    }\n    setDraggable(draggable) {\n        this._setAttr('draggable', draggable);\n        this._dragChange();\n    }\n    isDragging() {\n        const elem = DD._dragElements.get(this._id);\n        return elem ? elem.dragStatus === 'dragging' : false;\n    }\n    _listenDrag() {\n        this._dragCleanup();\n        this.on('mousedown.konva touchstart.konva', function (evt) {\n            var shouldCheckButton = evt.evt['button'] !== undefined;\n            var canDrag = !shouldCheckButton || Konva.dragButtons.indexOf(evt.evt['button']) >= 0;\n            if (!canDrag) {\n                return;\n            }\n            if (this.isDragging()) {\n                return;\n            }\n            var hasDraggingChild = false;\n            DD._dragElements.forEach((elem) => {\n                if (this.isAncestorOf(elem.node)) {\n                    hasDraggingChild = true;\n                }\n            });\n            if (!hasDraggingChild) {\n                this._createDragElement(evt);\n            }\n        });\n    }\n    _dragChange() {\n        if (this.attrs.draggable) {\n            this._listenDrag();\n        }\n        else {\n            this._dragCleanup();\n            var stage = this.getStage();\n            if (!stage) {\n                return;\n            }\n            const dragElement = DD._dragElements.get(this._id);\n            const isDragging = dragElement && dragElement.dragStatus === 'dragging';\n            const isReady = dragElement && dragElement.dragStatus === 'ready';\n            if (isDragging) {\n                this.stopDrag();\n            }\n            else if (isReady) {\n                DD._dragElements.delete(this._id);\n            }\n        }\n    }\n    _dragCleanup() {\n        this.off('mousedown.konva');\n        this.off('touchstart.konva');\n    }\n    isClientRectOnScreen(margin = { x: 0, y: 0 }) {\n        const stage = this.getStage();\n        if (!stage) {\n            return false;\n        }\n        const screenRect = {\n            x: -margin.x,\n            y: -margin.y,\n            width: stage.width() + margin.x,\n            height: stage.height() + margin.y,\n        };\n        return Util.haveIntersection(screenRect, this.getClientRect());\n    }\n    static create(data, container) {\n        if (Util._isString(data)) {\n            data = JSON.parse(data);\n        }\n        return this._createNode(data, container);\n    }\n    static _createNode(obj, container) {\n        var className = Node.prototype.getClassName.call(obj), children = obj.children, no, len, n;\n        if (container) {\n            obj.attrs.container = container;\n        }\n        if (!Konva[className]) {\n            Util.warn('Can not find a node with class name \"' +\n                className +\n                '\". Fallback to \"Shape\".');\n            className = 'Shape';\n        }\n        const Class = Konva[className];\n        no = new Class(obj.attrs);\n        if (children) {\n            len = children.length;\n            for (n = 0; n < len; n++) {\n                no.add(Node._createNode(children[n]));\n            }\n        }\n        return no;\n    }\n}\nNode.prototype.nodeType = 'Node';\nNode.prototype._attrsAffectingSize = [];\nNode.prototype.eventListeners = {};\nNode.prototype.on.call(Node.prototype, TRANSFORM_CHANGE_STR, function () {\n    if (this._batchingTransformChange) {\n        this._needClearTransformCache = true;\n        return;\n    }\n    this._clearCache(TRANSFORM);\n    this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n});\nNode.prototype.on.call(Node.prototype, 'visibleChange.konva', function () {\n    this._clearSelfAndDescendantCache(VISIBLE);\n});\nNode.prototype.on.call(Node.prototype, 'listeningChange.konva', function () {\n    this._clearSelfAndDescendantCache(LISTENING);\n});\nNode.prototype.on.call(Node.prototype, 'opacityChange.konva', function () {\n    this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n});\nconst addGetterSetter = Factory.addGetterSetter;\naddGetterSetter(Node, 'zIndex');\naddGetterSetter(Node, 'absolutePosition');\naddGetterSetter(Node, 'position');\naddGetterSetter(Node, 'x', 0, getNumberValidator());\naddGetterSetter(Node, 'y', 0, getNumberValidator());\naddGetterSetter(Node, 'globalCompositeOperation', 'source-over', getStringValidator());\naddGetterSetter(Node, 'opacity', 1, getNumberValidator());\naddGetterSetter(Node, 'name', '', getStringValidator());\naddGetterSetter(Node, 'id', '', getStringValidator());\naddGetterSetter(Node, 'rotation', 0, getNumberValidator());\nFactory.addComponentsGetterSetter(Node, 'scale', ['x', 'y']);\naddGetterSetter(Node, 'scaleX', 1, getNumberValidator());\naddGetterSetter(Node, 'scaleY', 1, getNumberValidator());\nFactory.addComponentsGetterSetter(Node, 'skew', ['x', 'y']);\naddGetterSetter(Node, 'skewX', 0, getNumberValidator());\naddGetterSetter(Node, 'skewY', 0, getNumberValidator());\nFactory.addComponentsGetterSetter(Node, 'offset', ['x', 'y']);\naddGetterSetter(Node, 'offsetX', 0, getNumberValidator());\naddGetterSetter(Node, 'offsetY', 0, getNumberValidator());\naddGetterSetter(Node, 'dragDistance', null, getNumberValidator());\naddGetterSetter(Node, 'width', 0, getNumberValidator());\naddGetterSetter(Node, 'height', 0, getNumberValidator());\naddGetterSetter(Node, 'listening', true, getBooleanValidator());\naddGetterSetter(Node, 'preventDefault', true, getBooleanValidator());\naddGetterSetter(Node, 'filters', null, function (val) {\n    this._filterUpToDate = false;\n    return val;\n});\naddGetterSetter(Node, 'visible', true, getBooleanValidator());\naddGetterSetter(Node, 'transformsEnabled', 'all', getStringValidator());\naddGetterSetter(Node, 'size');\naddGetterSetter(Node, 'dragBoundFunc');\naddGetterSetter(Node, 'draggable', false, getBooleanValidator());\nFactory.backCompat(Node, {\n    rotateDeg: 'rotate',\n    setRotationDeg: 'setRotation',\n    getRotationDeg: 'getRotation',\n});\n//# sourceMappingURL=Node.js.map"]},"metadata":{},"sourceType":"module"}