{"ast":null,"code":"import store from './configureStore';\nimport { toggleSpinner } from './actions';\n\nconst axios = require('axios');\n\nexport let publicAxios; // eslint-disable-line\n\nexport let authAxios; // eslint-disable-line\n\nexport const setupPublicAxios = baseUrl => {\n  publicAxios = axios.create({\n    baseURL: baseUrl,\n    responseType: 'application/json',\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: '*/*'\n    }\n  });\n};\nexport const setupAuthAxios = (baseUrl, authToken) => {\n  authAxios = axios.create({\n    baseURL: baseUrl,\n    responseType: 'json',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: authToken\n    }\n  });\n  authAxios.interceptors.request.use(req => {\n    store.dispatch(toggleSpinner);\n    return req;\n  });\n  authAxios.interceptors.response.use(res => {\n    store.dispatch(toggleSpinner);\n    return res;\n  }, err => {} // eslint-disable-line\n  );\n};\nexport default authAxios;","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/axios.js"],"names":["store","toggleSpinner","axios","require","publicAxios","authAxios","setupPublicAxios","baseUrl","create","baseURL","responseType","headers","Accept","setupAuthAxios","authToken","Authorization","interceptors","request","use","req","dispatch","response","res","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,SAASC,aAAT,QAA8B,WAA9B;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,OAAO,IAAIC,WAAJ,C,CAAiB;;AACxB,OAAO,IAAIC,SAAJ,C,CAAe;;AAEtB,OAAO,MAAMC,gBAAgB,GAAGC,OAAO,IAAI;AACzCH,EAAAA,WAAW,GAAGF,KAAK,CAACM,MAAN,CAAa;AACzBC,IAAAA,OAAO,EAAEF,OADgB;AAEzBG,IAAAA,YAAY,EAAE,kBAFW;AAGzBC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,MAAM,EAAE;AAFD;AAHgB,GAAb,CAAd;AAQD,CATM;AAWP,OAAO,MAAMC,cAAc,GAAG,CAACN,OAAD,EAAUO,SAAV,KAAwB;AACpDT,EAAAA,SAAS,GAAGH,KAAK,CAACM,MAAN,CAAa;AACvBC,IAAAA,OAAO,EAAEF,OADc;AAEvBG,IAAAA,YAAY,EAAE,MAFS;AAGvBC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPI,MAAAA,aAAa,EAAED;AAFR;AAHc,GAAb,CAAZ;AASAT,EAAAA,SAAS,CAACW,YAAV,CAAuBC,OAAvB,CAA+BC,GAA/B,CAAmCC,GAAG,IAAI;AACxCnB,IAAAA,KAAK,CAACoB,QAAN,CAAenB,aAAf;AACA,WAAOkB,GAAP;AACD,GAHD;AAKAd,EAAAA,SAAS,CAACW,YAAV,CAAuBK,QAAvB,CAAgCH,GAAhC,CACEI,GAAG,IAAI;AACLtB,IAAAA,KAAK,CAACoB,QAAN,CAAenB,aAAf;AAEA,WAAOqB,GAAP;AACD,GALH,EAMEC,GAAG,IAAI,CAAG,CANZ,CAMc;AANd;AAQD,CAvBM;AAyBP,eAAelB,SAAf","sourcesContent":["import store from './configureStore';\r\nimport { toggleSpinner } from './actions';\r\nconst axios = require('axios');\r\nexport let publicAxios; // eslint-disable-line\r\nexport let authAxios; // eslint-disable-line\r\n\r\nexport const setupPublicAxios = baseUrl => {\r\n  publicAxios = axios.create({\r\n    baseURL: baseUrl,\r\n    responseType: 'application/json',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Accept: '*/*',\r\n    }\r\n  });\r\n};\r\n\r\nexport const setupAuthAxios = (baseUrl, authToken) => {\r\n  authAxios = axios.create({\r\n    baseURL: baseUrl,\r\n    responseType: 'json',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: authToken,\r\n    },\r\n  });\r\n\r\n  authAxios.interceptors.request.use(req => {\r\n    store.dispatch(toggleSpinner);\r\n    return req;\r\n  });\r\n\r\n  authAxios.interceptors.response.use(\r\n    res => {\r\n      store.dispatch(toggleSpinner);\r\n\r\n      return res;\r\n    },\r\n    err => { }, // eslint-disable-line\r\n  );\r\n};\r\n\r\nexport default authAxios;\r\n"]},"metadata":{},"sourceType":"module"}