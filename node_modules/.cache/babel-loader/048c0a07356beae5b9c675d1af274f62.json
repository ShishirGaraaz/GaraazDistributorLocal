{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Work\\\\garaaz-distributor\\\\src\\\\components\\\\PlaceOrderBulk\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState, useEffect, useCallback } from 'react';\nimport { Button, Select, Alert, AlertIcon, AlertTitle, AlertDescription, Box, Spinner, Flex } from '@chakra-ui/react';\nimport { useForm } from 'react-hook-form';\nimport { useDropzone } from 'react-dropzone';\nimport { useIntl } from 'react-intl';\nimport { Stepper, Step } from 'react-form-stepper';\nimport XLSX from 'xlsx';\nimport { useSelector, useDispatch } from 'react-redux';\nimport toast from 'react-hot-toast';\nimport messages from './messages';\nimport { publicAxios as axios } from '../../axios';\nimport _ from 'lodash';\nimport { useHistory } from 'react-router';\nimport withToast from '../../HOCs/withToast';\nimport { uploadBulkSales, getAllSales, addSingleQueue } from '../../containers/Sales/slice';\nimport { getPartByCodes, addBulkOrderItem } from '../../containers/PlaceOrder/slice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst baseStyle = {\n  flex: 1,\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  padding: '20px',\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: '#eeeeee',\n  borderStyle: 'dashed',\n  backgroundColor: '#fafafa',\n  color: '#bdbdbd',\n  outline: 'none',\n  transition: 'border .24s ease-in-out',\n  cursor: 'pointer'\n};\nconst activeStyle = {\n  borderColor: '#2196f3'\n};\nconst acceptStyle = {\n  borderColor: '#00e676'\n};\nconst rejectStyle = {\n  borderColor: '#ff1744'\n};\nconst acceptedSalesOnboardHeaders = ['Part Number', 'Quantity'];\n\nconst PlaceOrderBulk = _ref => {\n  _s();\n\n  let {\n    notification\n  } = _ref;\n  const auth = useSelector(state => state.auth);\n  const [errorMessage, setErrorMessage] = useState('');\n  const dispatcher = useDispatch();\n  const [loading, setLoading] = useState(false);\n  const [importedFile, setImportedFile] = useState(null);\n  const [importing, setImporting] = useState(false);\n  const [uploading, setUploading] = useState(false);\n  const [activeStep, setActiveStep] = useState(1);\n  const {\n    register,\n    formState: {\n      errors\n    },\n    handleSubmit,\n    reset\n  } = useForm({\n    mode: 'onSubmit'\n  });\n  const history = useHistory();\n  const intl = useIntl();\n  const onDrop = useCallback(acceptedFiles => {\n    try {\n      if (acceptedFiles.length > 0) {\n        setImporting(true);\n        const reader = new FileReader();\n\n        reader.onload = evt => {\n          const bstr = evt.target.result;\n          const wb = XLSX.read(bstr, {\n            type: 'binary'\n          });\n          const wsname = wb.SheetNames[0];\n          const ws = wb.Sheets[wsname];\n          const jsonData = XLSX.utils.sheet_to_json(ws, {\n            defval: '' //blankrows: true,\n\n          });\n\n          if (!jsonData.length) {\n            return Promise.reject('Either sheets is empty or the sheet is corrupted.');\n          } else {\n            setImportedFile(jsonData);\n          }\n\n          setImporting(false);\n        };\n\n        reader.readAsBinaryString(acceptedFiles[0]);\n      }\n    } catch (error) {\n      notification({\n        status: 'error',\n        title: 'Import Error',\n        description: error !== null && error !== void 0 ? error : 'Unable to import file'\n      });\n    }\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject,\n    acceptedFiles,\n    inputRef\n  } = useDropzone({\n    accept: 'text/csv,application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n    maxFiles: 1,\n    noKeyboard: true,\n    onDrop\n  });\n  useEffect(() => {\n    if (errorMessage) {\n      toast(errorMessage);\n    }\n  }, [errorMessage]);\n  const style = useMemo(() => ({ ...baseStyle,\n    ...(isDragActive ? activeStyle : {}),\n    ...(isDragAccept ? acceptStyle : {}),\n    ...(isDragReject ? rejectStyle : {})\n  }), [isDragActive, isDragReject, isDragAccept]);\n\n  const handleUpload = async data => {\n    if (activeStep === 1) {\n      setActiveStep(2);\n      return;\n    }\n\n    try {\n      if (importedFile) {\n        setUploading(true);\n        const realData = [];\n        [...importedFile].forEach(item => {\n          const partNumber = item[data['Part Number']];\n          const quantity = item[data['Quantity']];\n          realData.push({\n            partNumber,\n            quantity\n          });\n        });\n        const partNumberString = realData.map(item => item.partNumber).join(',');\n        const parts = await dispatcher(getPartByCodes({\n          auth,\n          partCodes: partNumberString\n        }));\n        const orderItems = parts.data.map((item, index) => {\n          const qty = realData.find(itm => itm.partNumber === item.partNumber).quantity;\n          const refinedData = {\n            partNumber: item._id,\n            partUUID: item === null || item === void 0 ? void 0 : item.partNumber,\n            quantity: qty,\n            description: item === null || item === void 0 ? void 0 : item.partName,\n            price: item === null || item === void 0 ? void 0 : item.mrp,\n            SNo: index + 1\n          };\n          return refinedData;\n        });\n        dispatcher(addBulkOrderItem(orderItems));\n        notification({\n          status: 'success',\n          title: 'File Imported Successfully',\n          description: 'Please select workshop and place order'\n        });\n        history.push('/place-order');\n        /*   history.push('/sales'); */\n\n        setUploading(false);\n      }\n    } catch (error) {\n      setUploading(false);\n      notification({\n        status: 'error',\n        title: 'File upload failed',\n        description: error.response ? error.response.data : 'Unable to upload file, please try again'\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full mb-3\",\n      children: /*#__PURE__*/_jsxDEV(Stepper, {\n        styleConfig: {\n          completedBgColor: '#1e293b',\n          activeBgColor: '#da0032'\n        },\n        activeStep: activeStep,\n        children: [/*#__PURE__*/_jsxDEV(Step, {\n          label: \"File Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Step, {\n          label: \"Field Mappings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 6\n    }, this), activeStep === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full px-4 lg:w-full mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        w: \"100%\",\n        mb: 10,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          status: \"info\",\n          children: [/*#__PURE__*/_jsxDEV(AlertIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AlertDescription, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Download a sample file from here \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              style: {\n                fontWeight: 'bold'\n              },\n              href: 'https://docs.google.com/uc?id=1pOjJiDvQu3Icvh_TEzwI6SNW577fdw61&export=download',\n              download: \"Accounts sample File\",\n              children: \"Download File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1\",\n          children: \"Order Detail Document\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"center\",\n          children: [(importing || uploading) && /*#__PURE__*/_jsxDEV(Spinner, {\n            size: \"sm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 42\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            ml: \"2\",\n            children: importing ? 'Importing file' : uploading ? 'Uploading file' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative w-full\",\n        ...getRootProps({\n          style,\n          className: 'dropzone'\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), isDragActive && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: intl.formatMessage(messages.dropFileHere)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 28\n        }, this), !acceptedFiles || acceptedFiles.length === 0 && !isDragActive && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: intl.formatMessage(messages.dragAndDropMessage)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 15\n        }, this), acceptedFiles && acceptedFiles.length > 0 && !isDragActive && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"far fa-file fa-2x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: acceptedFiles[0].path\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 29\n    }, this), activeStep === 2 && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(handleUpload),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"space-between\",\n        children: acceptedSalesOnboardHeaders.map(header => {\n          var _Object$keys$find;\n\n          return /*#__PURE__*/_jsxDEV(Box, {\n            width: \"48%\",\n            mb: 5,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative w-full mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1\",\n                children: header\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, { ...register(`${header}`, {\n                  required: true\n                }),\n                defaultValue: (_Object$keys$find = Object.keys(importedFile[0]).find(actualHeader => `${actualHeader}`.toLowerCase().indexOf(`${header}`.toLowerCase()) !== -1)) !== null && _Object$keys$find !== void 0 ? _Object$keys$find : 'No value',\n                placeholder: \"Select a value\",\n                children: Object.keys(importedFile[0]).map(actualHeader => /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: actualHeader\n                }, actualHeader, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 19\n              }, this), errors && errors[header] && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-youtube-regular text-sm\",\n                children: header\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }, this)\n          }, header, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bulkButtonsContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        isLoading: uploading,\n        onClick: handleSubmit(handleUpload),\n        style: {\n          backgroundColor: '#1e293b',\n          color: '#ffffff',\n          marginLeft: '10px'\n        },\n        isDisabled: !importedFile,\n        loadingText: \"Uploading\",\n        children: activeStep === 1 ? 'Next' : 'Submit'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"clrBtn\",\n        type: \"reset\",\n        onClick: () => {\n          acceptedFiles.length = 0;\n          acceptedFiles.splice(0, acceptedFiles.length);\n          setImportedFile(null);\n          setActiveStep(1);\n          reset({}, {\n            keepDirty: false,\n            keepErrors: false,\n            keepValues: false\n          });\n        },\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PlaceOrderBulk, \"SrtsylnkFiApa/SxY3KImQzdiuc=\", false, function () {\n  return [useSelector, useDispatch, useForm, useHistory, useIntl, useDropzone];\n});\n\n_c = PlaceOrderBulk;\nexport default _c2 = withToast(PlaceOrderBulk);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PlaceOrderBulk\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/components/PlaceOrderBulk/index.js"],"names":["React","useMemo","useState","useEffect","useCallback","Button","Select","Alert","AlertIcon","AlertTitle","AlertDescription","Box","Spinner","Flex","useForm","useDropzone","useIntl","Stepper","Step","XLSX","useSelector","useDispatch","toast","messages","publicAxios","axios","_","useHistory","withToast","uploadBulkSales","getAllSales","addSingleQueue","getPartByCodes","addBulkOrderItem","baseStyle","flex","display","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","color","outline","transition","cursor","activeStyle","acceptStyle","rejectStyle","acceptedSalesOnboardHeaders","PlaceOrderBulk","notification","auth","state","errorMessage","setErrorMessage","dispatcher","loading","setLoading","importedFile","setImportedFile","importing","setImporting","uploading","setUploading","activeStep","setActiveStep","register","formState","errors","handleSubmit","reset","mode","history","intl","onDrop","acceptedFiles","length","reader","FileReader","onload","evt","bstr","target","result","wb","read","type","wsname","SheetNames","ws","Sheets","jsonData","utils","sheet_to_json","defval","Promise","reject","readAsBinaryString","error","status","title","description","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","inputRef","accept","maxFiles","noKeyboard","style","handleUpload","data","realData","forEach","item","partNumber","quantity","push","partNumberString","map","join","parts","partCodes","orderItems","index","qty","find","itm","refinedData","_id","partUUID","partName","price","mrp","SNo","response","completedBgColor","activeBgColor","fontWeight","className","formatMessage","dropFileHere","dragAndDropMessage","path","header","required","Object","keys","actualHeader","toLowerCase","indexOf","marginLeft","splice","keepDirty","keepErrors","keepValues"],"mappings":"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","sourcesContent":["import React, { useMemo, useState, useEffect, useCallback } from 'react';\r\nimport {\r\n  Button,\r\n  Select,\r\n  Alert,\r\n  AlertIcon,\r\n  AlertTitle,\r\n  AlertDescription,\r\n  Box,\r\n  Spinner,\r\n  Flex,\r\n} from '@chakra-ui/react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { useIntl } from 'react-intl';\r\nimport { Stepper, Step } from 'react-form-stepper';\r\nimport XLSX from 'xlsx';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport toast from 'react-hot-toast';\r\nimport messages from './messages';\r\nimport { publicAxios as axios } from '../../axios';\r\nimport _ from 'lodash';\r\nimport { useHistory } from 'react-router';\r\nimport withToast from '../../HOCs/withToast';\r\nimport {\r\n  uploadBulkSales,\r\n  getAllSales,\r\n  addSingleQueue,\r\n} from '../../containers/Sales/slice';\r\nimport { getPartByCodes, addBulkOrderItem} from '../../containers/PlaceOrder/slice';\r\n\r\nconst baseStyle = {\r\n  flex: 1,\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  padding: '20px',\r\n  borderWidth: 2,\r\n  borderRadius: 2,\r\n  borderColor: '#eeeeee',\r\n  borderStyle: 'dashed',\r\n  backgroundColor: '#fafafa',\r\n  color: '#bdbdbd',\r\n  outline: 'none',\r\n  transition: 'border .24s ease-in-out',\r\n  cursor: 'pointer',\r\n};\r\n\r\nconst activeStyle = {\r\n  borderColor: '#2196f3',\r\n};\r\n\r\nconst acceptStyle = {\r\n  borderColor: '#00e676',\r\n};\r\n\r\nconst rejectStyle = {\r\n  borderColor: '#ff1744',\r\n};\r\n\r\nconst acceptedSalesOnboardHeaders = ['Part Number', 'Quantity']\r\n\r\nconst PlaceOrderBulk = ({ notification }) => {\r\n  const auth = useSelector((state) => state.auth);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const dispatcher = useDispatch();\r\n  const [loading, setLoading] = useState(false);\r\n  const [importedFile, setImportedFile] = useState(null);\r\n  const [importing, setImporting] = useState(false);\r\n  const [uploading, setUploading] = useState(false);\r\n  const [activeStep, setActiveStep] = useState(1);\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    handleSubmit,\r\n    reset,\r\n  } = useForm({\r\n    mode: 'onSubmit',\r\n  });\r\n  const history = useHistory();\r\n  const intl = useIntl();\r\n\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    try {\r\n      if (acceptedFiles.length > 0) {\r\n        setImporting(true);\r\n        const reader = new FileReader();\r\n        reader.onload = (evt) => {\r\n          const bstr = evt.target.result;\r\n          const wb = XLSX.read(bstr, { type: 'binary'});\r\n          const wsname = wb.SheetNames[0];\r\n          const ws = wb.Sheets[wsname];\r\n          const jsonData = XLSX.utils.sheet_to_json(ws, {\r\n            defval: '',\r\n            //blankrows: true,\r\n          });\r\n\r\n          if (!jsonData.length) {\r\n            return Promise.reject(\r\n              'Either sheets is empty or the sheet is corrupted.',\r\n            );\r\n          } else {\r\n            setImportedFile(jsonData);\r\n          }\r\n\r\n          setImporting(false);\r\n        };\r\n        reader.readAsBinaryString(acceptedFiles[0]);\r\n      }\r\n    } catch (error) {\r\n      notification({\r\n        status: 'error',\r\n        title: 'Import Error',\r\n        description: error ?? 'Unable to import file',\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive,\r\n    isDragAccept,\r\n    isDragReject,\r\n    acceptedFiles,\r\n    inputRef,\r\n  } = useDropzone({\r\n    accept:\r\n      'text/csv,application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n    maxFiles: 1,\r\n    noKeyboard: true,\r\n    onDrop,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (errorMessage) {\r\n      toast(errorMessage);\r\n    }\r\n  }, [errorMessage]);\r\n\r\n  const style = useMemo(\r\n    () => ({\r\n      ...baseStyle,\r\n      ...(isDragActive ? activeStyle : {}),\r\n      ...(isDragAccept ? acceptStyle : {}),\r\n      ...(isDragReject ? rejectStyle : {}),\r\n    }),\r\n    [isDragActive, isDragReject, isDragAccept],\r\n  );\r\n\r\n  const handleUpload = async (data) => {\r\n      if(activeStep === 1){\r\n          setActiveStep(2);\r\n          return;\r\n      }\r\n    try {\r\n       \r\n      if (importedFile) {\r\n        setUploading(true);\r\n\r\n        const realData =[];\r\n\r\n         [...importedFile].forEach(item => {\r\n            const partNumber = item[data['Part Number']];\r\n            const quantity = item[data['Quantity']];\r\n            realData.push({partNumber, quantity});\r\n         })\r\n\r\n         const partNumberString = realData.map(item => item.partNumber).join(',');\r\n\r\n\r\n         const parts = await dispatcher(getPartByCodes({auth, partCodes: partNumberString}))\r\n\r\n\r\n         const orderItems = parts.data.map((item, index) => {\r\n             const qty = realData.find(itm => itm.partNumber === item.partNumber).quantity;\r\n\r\n             const refinedData = {\r\n                 partNumber: item._id,\r\n                 partUUID: item?.partNumber,\r\n                 quantity: qty,\r\n                 description: item?.partName,\r\n                 price: item?.mrp,\r\n                 SNo: index + 1\r\n             }\r\n\r\n             return refinedData;\r\n         })\r\n\r\n\r\n         dispatcher(addBulkOrderItem(orderItems));\r\n         notification({\r\n            status: 'success',\r\n            title: 'File Imported Successfully',\r\n            description:\r\n              'Please select workshop and place order',\r\n          });\r\n\r\n         history.push('/place-order');\r\n\r\n\r\n\r\n        \r\n\r\n      /*   history.push('/sales'); */\r\n        setUploading(false);\r\n      }\r\n    } catch (error) {\r\n      setUploading(false);\r\n      notification({\r\n        status: 'error',\r\n        title: 'File upload failed',\r\n        description: error.response\r\n          ? error.response.data\r\n          : 'Unable to upload file, please try again',\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n     <div className='w-full mb-3'>\r\n        <Stepper\r\n          styleConfig={{\r\n            completedBgColor: '#1e293b',\r\n            activeBgColor: '#da0032',\r\n          }}\r\n          activeStep={activeStep}\r\n        >\r\n          <Step label='File Upload' />\r\n          <Step label='Field Mappings' />\r\n        </Stepper>\r\n      </div>\r\n      {activeStep === 1 && (<div className='w-full px-4 lg:w-full mb-3'>\r\n        <Box w='100%' mb={10}>\r\n          <Alert status='info'>\r\n            <AlertIcon />\r\n            <AlertDescription>\r\n              <label>Download a sample file from here </label>\r\n              <a\r\n                style={{ fontWeight: 'bold' }}\r\n                href={\r\n                  'https://docs.google.com/uc?id=1pOjJiDvQu3Icvh_TEzwI6SNW577fdw61&export=download'\r\n                }\r\n                download='Accounts sample File'\r\n              >\r\n                Download File\r\n              </a>\r\n            </AlertDescription>\r\n          </Alert>\r\n        </Box>\r\n        <Flex alignItems='center' justifyContent='space-between'>\r\n          <label className='block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1'>\r\n            Order Detail Document\r\n          </label>\r\n          <Flex alignItems='center' >\r\n            {(importing || uploading) && <Spinner size='sm' />}\r\n            <Box ml='2'>\r\n              {importing ? 'Importing file' : uploading ? 'Uploading file' : ''}\r\n            </Box>\r\n          </Flex>\r\n        </Flex>\r\n\r\n        <div\r\n          className='relative w-full'\r\n          {...getRootProps({ style, className: 'dropzone' })}\r\n        >\r\n          <input {...getInputProps()} />\r\n          {isDragActive && <p>{intl.formatMessage(messages.dropFileHere)}</p>}\r\n          {!acceptedFiles ||\r\n            (acceptedFiles.length === 0 && !isDragActive && (\r\n              <p>{intl.formatMessage(messages.dragAndDropMessage)}</p>\r\n            ))}\r\n          {acceptedFiles && acceptedFiles.length > 0 && !isDragActive && (\r\n            <>\r\n              <p>\r\n                <i className='far fa-file fa-2x' />\r\n              </p>\r\n              <p>{acceptedFiles[0].path}</p>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>)}\r\n      {activeStep === 2 && (\r\n        <form onSubmit={handleSubmit(handleUpload)}> \r\n          <Box display='flex' flexWrap='wrap' justifyContent='space-between'>\r\n            {acceptedSalesOnboardHeaders.map((header) => (\r\n              <Box key={header} width='48%' mb={5}>\r\n                <div className='relative w-full mb-3'>\r\n                  <label className='block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1'>\r\n                    {header}\r\n                  </label>\r\n                  <Select\r\n                    {...register(`${header}`, {\r\n                      required: true,\r\n                    })}\r\n                    defaultValue={\r\n                        Object.keys(importedFile[0]).find(\r\n                        (actualHeader) =>\r\n                          `${actualHeader}`\r\n                            .toLowerCase()\r\n                            .indexOf(`${header}`.toLowerCase()) !== -1,\r\n                      ) ?? 'No value'\r\n                    }\r\n                    placeholder='Select a value'\r\n                  >\r\n                    {Object.keys(importedFile[0]).map((actualHeader) => (\r\n                      <option key={actualHeader}>{actualHeader}</option>\r\n                    ))}\r\n                  </Select>\r\n                  {errors && errors[header] && (\r\n                    <span className='text-youtube-regular text-sm'>\r\n                      {header}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </Box>\r\n            ))}\r\n          </Box>\r\n        </form>\r\n      )}\r\n\r\n      <div className='bulkButtonsContainer'>\r\n        <Button\r\n          isLoading={uploading}\r\n          onClick={handleSubmit(handleUpload)}\r\n          style={{\r\n            backgroundColor: '#1e293b',\r\n            color: '#ffffff',\r\n            marginLeft: '10px',\r\n          }}\r\n          isDisabled={!importedFile}\r\n          loadingText='Uploading'\r\n        >\r\n         {activeStep === 1?  'Next' : 'Submit'}\r\n        </Button>\r\n\r\n        <Button\r\n          variant='clrBtn'\r\n          type='reset'\r\n          onClick={() => {\r\n            acceptedFiles.length = 0;\r\n            acceptedFiles.splice(0, acceptedFiles.length);\r\n            setImportedFile(null)\r\n            setActiveStep(1);\r\n            reset(\r\n              {},\r\n              {\r\n                keepDirty: false,\r\n                keepErrors: false,\r\n                keepValues: false,\r\n              },\r\n            );\r\n          }}\r\n        >\r\n          Clear\r\n        </Button>\r\n      </div>\r\n      {/*     </div> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withToast(PlaceOrderBulk);\r\n"]},"metadata":{},"sourceType":"module"}