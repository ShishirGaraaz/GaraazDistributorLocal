{"ast":null,"code":"import { publicAxios as axios } from '../../axios';\nimport { GET_ALL_ORDERS, SET_ALL_ORDERS, SET_TOTAL_COUNT } from './constants';\nimport getURLParams from '../../utils/getURLParams';\nexport const setAllOrders = payload => {\n  return {\n    type: SET_ALL_ORDERS,\n    payload\n  };\n};\nexport const setTotalCount = payload => ({\n  type: SET_TOTAL_COUNT,\n  payload\n});\nexport const getAllOrders = async function (auth) {\n  let paramsObj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const params = getURLParams(paramsObj);\n  const response = await axios.get(`${GET_ALL_ORDERS}${params}`, {\n    headers: {\n      Authorization: auth.authToken\n    }\n  });\n  const newObj = response.data.length > 0 ? response.data[0] : {\n    data: [],\n    totalCount: {\n      count: 0\n    }\n  };\n  return newObj;\n};","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/containers/OrderList/actions.js"],"names":["publicAxios","axios","GET_ALL_ORDERS","SET_ALL_ORDERS","SET_TOTAL_COUNT","getURLParams","setAllOrders","payload","type","setTotalCount","getAllOrders","auth","paramsObj","params","response","get","headers","Authorization","authToken","newObj","data","length","totalCount","count"],"mappings":"AAAA,SAASA,WAAW,IAAIC,KAAxB,QAAqC,aAArC;AACA,SAASC,cAAT,EAAyBC,cAAzB,EAAyCC,eAAzC,QAAgE,aAAhE;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AAEA,OAAO,MAAMC,YAAY,GAAIC,OAAD,IAAa;AACvC,SAAQ;AACRC,IAAAA,IAAI,EAAEL,cADE;AAERI,IAAAA;AAFQ,GAAR;AAGC,CAJI;AAMP,OAAO,MAAME,aAAa,GAAIF,OAAD,KAAc;AACvCC,EAAAA,IAAI,EAAEJ,eADiC;AAEvCG,EAAAA;AAFuC,CAAd,CAAtB;AAKP,OAAO,MAAMG,YAAY,GAAG,gBAAOC,IAAP,EAA8B;AAAA,MAAjBC,SAAiB,uEAAP,EAAO;AACxD,QAAMC,MAAM,GAAGR,YAAY,CAACO,SAAD,CAA3B;AAEA,QAAME,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAW,GAAEb,cAAe,GAAEW,MAAO,EAArC,EAAwC;AAC7DG,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAEN,IAAI,CAACO;AADb;AADoD,GAAxC,CAAvB;AAQA,QAAMC,MAAM,GAAGL,QAAQ,CAACM,IAAT,CAAcC,MAAd,GAAuB,CAAvB,GAA0BP,QAAQ,CAACM,IAAT,CAAc,CAAd,CAA1B,GAA6C;AAACA,IAAAA,IAAI,EAAE,EAAP;AAAWE,IAAAA,UAAU,EAAC;AAACC,MAAAA,KAAK,EAAE;AAAR;AAAtB,GAA5D;AAEA,SAAOJ,MAAP;AACD,CAdM","sourcesContent":["import { publicAxios as axios } from '../../axios';\r\nimport { GET_ALL_ORDERS, SET_ALL_ORDERS, SET_TOTAL_COUNT } from './constants';\r\nimport getURLParams from '../../utils/getURLParams';\r\n\r\nexport const setAllOrders = (payload) => { \r\n  return ({\r\n  type: SET_ALL_ORDERS,\r\n  payload,\r\n})};\r\n\r\nexport const setTotalCount = (payload) => ({\r\n    type: SET_TOTAL_COUNT,\r\n    payload\r\n})\r\n\r\nexport const getAllOrders = async (auth, paramsObj={}) => {\r\n  const params = getURLParams(paramsObj);\r\n\r\n  const response = await axios.get(`${GET_ALL_ORDERS}${params}`, {\r\n    headers: {\r\n      Authorization: auth.authToken,\r\n    },\r\n  });\r\n\r\n\r\n\r\n  const newObj = response.data.length > 0? response.data[0] : {data: [], totalCount:{count: 0}}\r\n  \r\n  return newObj;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}