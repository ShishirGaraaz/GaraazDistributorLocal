{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Work\\\\garaaz-distributor\\\\src\\\\utils\\\\Select.js\",\n    _s = $RefreshSig$();\n\nimport { Select } from '@chakra-ui/select';\nimport { useIntl } from 'react-intl';\nimport { Box } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomSelect = props => {\n  _s();\n\n  const {\n    inputName,\n    label,\n    placeHolder,\n    options,\n    requiredLabel,\n    boxSize,\n    required,\n    valueField,\n    labelField,\n    register,\n    errors,\n    width,\n    isDisabled\n  } = props;\n  const intl = useIntl();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    width: {\n      base: '100%',\n      lg: width\n    },\n    mt: {\n      base: 6,\n      lg: 0\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1\",\n      children: intl.formatMessage(label)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      isDisabled: isDisabled !== null && isDisabled !== void 0 ? isDisabled : false,\n      placeholder: intl.formatMessage(placeHolder),\n      ...register(inputName, {\n        required: required\n      }),\n      children: options.map(option => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option[valueField],\n          children: option[labelField]\n        }, option[valueField], false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), errors && inputName in errors && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-youtube-regular text-sm\",\n      children: intl.formatMessage(requiredLabel)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CustomSelect, \"rlSgSjbewJ1PrR/Ile8g/kr050o=\", false, function () {\n  return [useIntl];\n});\n\n_c = CustomSelect;\nexport default CustomSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomSelect\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/utils/Select.js"],"names":["Select","useIntl","Box","CustomSelect","props","inputName","label","placeHolder","options","requiredLabel","boxSize","required","valueField","labelField","register","errors","width","isDisabled","intl","base","lg","formatMessage","map","option"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,mBAAvB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,GAAT,QAAoB,kBAApB;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM;AACJC,IAAAA,SADI;AAEJC,IAAAA,KAFI;AAGJC,IAAAA,WAHI;AAIJC,IAAAA,OAJI;AAKJC,IAAAA,aALI;AAMJC,IAAAA,OANI;AAOJC,IAAAA,QAPI;AAQJC,IAAAA,UARI;AASJC,IAAAA,UATI;AAUJC,IAAAA,QAVI;AAWJC,IAAAA,MAXI;AAYJC,IAAAA,KAZI;AAaJC,IAAAA;AAbI,MAcFb,KAdJ;AAeA,QAAMc,IAAI,GAAGjB,OAAO,EAApB;AAEA,sBACE,QAAC,GAAD;AAAK,IAAA,KAAK,EAAE;AAAEkB,MAAAA,IAAI,EAAE,MAAR;AAAgBC,MAAAA,EAAE,EAAEJ;AAApB,KAAZ;AAAyC,IAAA,EAAE,EAAE;AAAEG,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,EAAE,EAAE;AAAf,KAA7C;AAAA,4BACE;AAAO,MAAA,SAAS,EAAC,+DAAjB;AAAA,gBACGF,IAAI,CAACG,aAAL,CAAmBf,KAAnB;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,MAAD;AACE,MAAA,UAAU,EAAEW,UAAF,aAAEA,UAAF,cAAEA,UAAF,GAAgB,KAD5B;AAEE,MAAA,WAAW,EAAEC,IAAI,CAACG,aAAL,CAAmBd,WAAnB,CAFf;AAAA,SAGMO,QAAQ,CAACT,SAAD,EAAY;AAAEM,QAAAA,QAAQ,EAAEA;AAAZ,OAAZ,CAHd;AAAA,gBAKGH,OAAO,CAACc,GAAR,CAAaC,MAAD,IAAY;AACvB,4BACE;AAAQ,UAAA,KAAK,EAAEA,MAAM,CAACX,UAAD,CAArB;AAAA,oBACGW,MAAM,CAACV,UAAD;AADT,WAAwCU,MAAM,CAACX,UAAD,CAA9C;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,OANA;AALH;AAAA;AAAA;AAAA;AAAA,YAJF,EAiBGG,MAAM,IAAIV,SAAS,IAAIU,MAAvB,iBACC;AAAM,MAAA,SAAS,EAAC,8BAAhB;AAAA,gBACGG,IAAI,CAACG,aAAL,CAAmBZ,aAAnB;AADH;AAAA;AAAA;AAAA;AAAA,YAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CA3CD;;GAAMN,Y;UAgBSF,O;;;KAhBTE,Y;AA6CN,eAAeA,YAAf","sourcesContent":["import { Select } from '@chakra-ui/select';\r\nimport { useIntl } from 'react-intl';\r\nimport { Box } from '@chakra-ui/react';\r\n\r\nconst CustomSelect = (props) => {\r\n  const {\r\n    inputName,\r\n    label,\r\n    placeHolder,\r\n    options,\r\n    requiredLabel,\r\n    boxSize,\r\n    required,\r\n    valueField,\r\n    labelField,\r\n    register,\r\n    errors,\r\n    width,\r\n    isDisabled,\r\n  } = props;\r\n  const intl = useIntl();\r\n\r\n  return (\r\n    <Box width={{ base: '100%', lg: width }} mt={{ base: 6, lg: 0 }}>\r\n      <label className='block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1'>\r\n        {intl.formatMessage(label)}\r\n      </label>\r\n      <Select\r\n        isDisabled={isDisabled ?? false}\r\n        placeholder={intl.formatMessage(placeHolder)}\r\n        {...register(inputName, { required: required })}\r\n      >\r\n        {options.map((option) => {\r\n          return (\r\n            <option value={option[valueField]} key={option[valueField]}>\r\n              {option[labelField]}\r\n            </option>\r\n          );\r\n        })}\r\n      </Select>\r\n      {errors && inputName in errors && (\r\n        <span className='text-youtube-regular text-sm'>\r\n          {intl.formatMessage(requiredLabel)}\r\n        </span>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CustomSelect;\r\n"]},"metadata":{},"sourceType":"module"}