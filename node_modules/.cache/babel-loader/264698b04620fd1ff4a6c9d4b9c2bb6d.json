{"ast":null,"code":"import { SET__BRANCHES } from './constants';\nimport { publicAxios as axios } from '../../axios';\nimport routes, { ROUTES } from '../../routes';\nimport getURLParams from '../../utils/getURLParams';\nexport function setBranches(data) {\n  return {\n    type: SET__BRANCHES,\n    payload: data\n  };\n}\nexport const getBranchList = async payload => {\n  const params = getURLParams(payload.params);\n  const data = await axios.get('/branches', {\n    url: `${ROUTES.BRANCHES}${params}&sort=updatedAt,asc`,\n    headers: {\n      Authorization: payload.auth.authToken\n    }\n  }); // data.status = 404\n\n  return data;\n};","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/containers/BranchList/actions.js"],"names":["SET__BRANCHES","publicAxios","axios","routes","ROUTES","getURLParams","setBranches","data","type","payload","getBranchList","params","get","url","BRANCHES","headers","Authorization","auth","authToken"],"mappings":"AAAA,SAASA,aAAT,QAA8B,aAA9B;AACA,SAASC,WAAW,IAAIC,KAAxB,QAAqC,aAArC;AACA,OAAOC,MAAP,IAAiBC,MAAjB,QAA+B,cAA/B;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAO,SAASC,WAAT,CAAqBC,IAArB,EAA2B;AAChC,SAAO;AACLC,IAAAA,IAAI,EAAER,aADD;AAELS,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID;AACD,OAAO,MAAMG,aAAa,GAAG,MAAOD,OAAP,IAAmB;AAC9C,QAAME,MAAM,GAAGN,YAAY,CAACI,OAAO,CAACE,MAAT,CAA3B;AAEA,QAAMJ,IAAI,GAAG,MAAML,KAAK,CAACU,GAAN,CAAU,WAAV,EAAuB;AACxCC,IAAAA,GAAG,EAAG,GAAET,MAAM,CAACU,QAAS,GAAEH,MAAO,qBADO;AAExCI,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAACP,OAAO,CAACQ,IAAR,CAAaC;AADpB;AAF+B,GAAvB,CAAnB,CAH8C,CAS9C;;AACA,SAAOX,IAAP;AACD,CAXM","sourcesContent":["import { SET__BRANCHES } from './constants';\r\nimport { publicAxios as axios } from '../../axios';\r\nimport routes, { ROUTES } from '../../routes';\r\nimport getURLParams from '../../utils/getURLParams';\r\nexport function setBranches(data) {\r\n  return {\r\n    type: SET__BRANCHES,\r\n    payload: data,\r\n  };\r\n}\r\nexport const getBranchList = async (payload) => {\r\n  const params = getURLParams(payload.params);\r\n\r\n  const data = await axios.get('/branches', {\r\n    url: `${ROUTES.BRANCHES}${params}&sort=updatedAt,asc`,\r\n    headers: {\r\n      Authorization:payload.auth.authToken,\r\n    },\r\n  })\r\n  // data.status = 404\r\n  return data\r\n}"]},"metadata":{},"sourceType":"module"}