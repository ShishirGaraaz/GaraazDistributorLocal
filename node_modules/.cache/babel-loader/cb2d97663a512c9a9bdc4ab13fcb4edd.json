{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Work\\\\garaaz-distributor\\\\src\\\\components\\\\PartBulk\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Select, Alert, AlertIcon, AlertTitle, AlertDescription, Box } from '@chakra-ui/react';\nimport { useForm } from 'react-hook-form';\nimport { useDropzone } from 'react-dropzone';\nimport { useIntl } from 'react-intl';\nimport { Stepper, Step } from 'react-form-stepper';\nimport XLSX from 'xlsx';\nimport { useSelector } from 'react-redux';\nimport toast from 'react-hot-toast';\nimport isEqual from 'lodash/isEqual';\nimport messages from './messages';\nimport { publicAxios as axios } from '../../axios';\nimport _ from 'lodash';\nimport { sheetValidation } from './helper';\nimport Layout from '../../containers/Layout';\nimport '../../utils/theme/bulkContainer.css';\nimport { api, requiredFields } from './constants';\nimport withToast from '../../HOCs/withToast';\nimport { useHistory } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst baseStyle = {\n  flex: 1,\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  padding: '20px',\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: '#eeeeee',\n  borderStyle: 'dashed',\n  backgroundColor: '#fafafa',\n  color: '#bdbdbd',\n  outline: 'none',\n  transition: 'border .24s ease-in-out',\n  cursor: 'pointer',\n  height: 250,\n  alignItems: 'center',\n  justifyContent: 'center'\n};\nconst activeStyle = {\n  borderColor: '#2196f3'\n};\nconst acceptStyle = {\n  borderColor: '#00e676'\n};\nconst rejectStyle = {\n  borderColor: '#ff1744'\n};\n\nconst PartBulk = _ref => {\n  _s();\n\n  let {\n    notification\n  } = _ref;\n  const auth = useSelector(state => state.auth);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [sheetData, setSheetData] = useState([]);\n  const [activeStep, setActiveStep] = useState(1);\n  const [mappedSheetDataValid, setMappedSheetDataValid] = useState([]);\n  const [mappedSheetDataInvalid, setMappedSheetDataInvalid] = useState([]);\n  const [globalMissingFields, setGlobalMissingFields] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [actualPartOnboardingHeaders, setActualPartOnboardingHeaders] = useState([]);\n  const acceptedPartsOnboardingHeaders = useSelector(state => state.app.acceptedPartsOnboardingHeaders);\n  const history = useHistory();\n  const {\n    register,\n    formState: {\n      errors\n    },\n    handleSubmit,\n    reset\n  } = useForm({\n    mode: 'onSubmit'\n  });\n  const intl = useIntl();\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject,\n    acceptedFiles,\n    inputRef\n  } = useDropzone({\n    accept: 'text/csv,application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n    maxFiles: 1,\n    noKeyboard: true\n  });\n  useEffect(() => {\n    if (acceptedFiles.length > 0) {\n      setLoading(true);\n      const reader = new FileReader();\n\n      reader.onload = evt => {\n        const bstr = evt.target.result;\n        const wb = XLSX.read(bstr, {\n          type: 'binary'\n        });\n        const wsname = wb.SheetNames[0];\n        const ws = wb.Sheets[wsname];\n        const jsonData = XLSX.utils.sheet_to_json(ws, {\n          defval: ''\n        });\n\n        if (!jsonData.length) {\n          setErrorMessage('Either sheets is empty or the sheet is corrupted.');\n        } else {\n          setErrorMessage('');\n          setActualPartOnboardingHeaders(Object.keys(jsonData[0]));\n          setSheetData(jsonData);\n        }\n\n        setLoading(false);\n      };\n\n      reader.readAsBinaryString(acceptedFiles[0]);\n    }\n  }, [acceptedFiles]);\n  useEffect(() => {\n    if (errorMessage) {\n      toast(errorMessage);\n    }\n  }, [errorMessage]);\n  const style = useMemo(() => ({ ...baseStyle,\n    ...(isDragActive ? activeStyle : {}),\n    ...(isDragAccept ? acceptStyle : {}),\n    ...(isDragReject ? rejectStyle : {})\n  }), [isDragActive, isDragReject, isDragAccept]);\n\n  const callback = async data => {\n    setLoading(true);\n    if (activeStep < 3) setActiveStep(activeStep + 1);\n\n    if (activeStep === 2) {\n      try {\n        const {\n          inValidData,\n          validData\n        } = await sheetValidation(sheetData, data, acceptedPartsOnboardingHeaders);\n        setMappedSheetDataValid(validData.map(val => val.data));\n\n        if (inValidData.length > 0) {\n          setMappedSheetDataInvalid(inValidData.map(val => val.data));\n          let otherError = [];\n          let singleField = [];\n          inValidData.map(val => val.missingFields.other).forEach(data => {\n            otherError = [...new Set([...otherError, ...data])];\n          });\n          inValidData.map(val => val.missingFields.singleField).forEach(data => {\n            singleField = [...new Set([...singleField, ...data])];\n          });\n\n          if (singleField.length > 0) {\n            notification({\n              status: 'error',\n              title: 'Invalid Fields',\n              description: `${singleField.join(',')} field${singleField.length > 1 ? 's' : ''} ${singleField.length > 1 ? 'are' : 'is'}  invalid`\n            });\n          }\n\n          if (otherError.length > 0) {\n            notification({\n              status: 'error',\n              title: 'Invalid Fields',\n              description: `${otherError.join(', ')}`\n            });\n          }\n        }\n      } catch (error) {\n        toast(error.toString());\n      }\n    } else if (activeStep === 3) {\n      const validLength = mappedSheetDataValid.length;\n      const totalLength = sheetData.length;\n      const ArrayOfKeysWithValue = mappedSheetDataValid.map(row => {\n        const res = Object.keys(row).filter(i => row[i] === '');\n        res.map(delKey => delete row[delKey]);\n        return row;\n      });\n\n      try {\n        await axios.post(api.ADD_PART_BULK, {\n          parts: ArrayOfKeysWithValue\n        }, {\n          headers: {\n            Authorization: auth.authToken\n          }\n        });\n        toast(intl.formatMessage(messages.partsAddedSuccess));\n        setMappedSheetDataValid([]);\n        history.push('/parts');\n      } catch (err) {\n        if (err.response) {\n          var _err$response$data$er, _err$response, _err$response$data;\n\n          notification({\n            status: 'error',\n            title: 'Error Occurred',\n            description: (_err$response$data$er = (_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.errorMsg) !== null && _err$response$data$er !== void 0 ? _err$response$data$er : 'Please try again'\n          });\n        } else {\n          toast(intl.formatMessage(messages.somethingWentWrong));\n        }\n\n        setMappedSheetDataValid([]);\n      }\n\n      reset({}, {\n        keepDirty: false,\n        keepErrors: false,\n        keepValues: false\n      });\n      toast(`Attempting to onboard ${validLength}/${totalLength} Branches.`);\n      onModalClose();\n    }\n\n    setLoading(false);\n  }; // eslint-disable-next-line react-hooks/exhaustive-deps\n\n\n  const mapOnboardingFields = useCallback(callback, [activeStep, setActiveStep, mappedSheetDataValid, globalMissingFields]);\n  const onModalClose = useCallback(e => {\n    setActiveStep(1);\n    acceptedFiles.length = 0;\n    acceptedFiles.splice(0, acceptedFiles.length);\n\n    if (inputRef.current) {\n      inputRef.current.value = '';\n    }\n\n    setSheetData([]);\n    setMappedSheetDataInvalid([]);\n    setMappedSheetDataValid([]);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full mb-3\",\n      children: /*#__PURE__*/_jsxDEV(Stepper, {\n        styleConfig: {\n          completedBgColor: '#008000',\n          activeBgColor: '#1e293b'\n        },\n        activeStep: activeStep,\n        children: [/*#__PURE__*/_jsxDEV(Step, {\n          label: \"File Upload\",\n          completed: acceptedFiles.length > 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Step, {\n          label: \"Field Mappings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Step, {\n          label: \"Review\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this), activeStep === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full px-4 lg:w-full mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        w: \"100%\",\n        mb: \"3\",\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          status: \"info\",\n          children: [/*#__PURE__*/_jsxDEV(AlertIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(AlertDescription, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Download a sample file from here \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              style: {\n                fontWeight: 'bold'\n              },\n              href: api.DOWNLOAD_SAMPLE,\n              download: \"Part sample File\",\n              children: \"Download File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1\",\n        children: intl.formatMessage(messages.partsDetailFile)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative w-full dropZone-area\",\n        ...getRootProps({\n          style,\n          className: 'dropzone'\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this), isDragActive && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: intl.formatMessage(messages.dropFileHere)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 30\n        }, this), !acceptedFiles || acceptedFiles.length === 0 && !isDragActive && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: intl.formatMessage(messages.dragAndDropMessage)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 17\n        }, this), acceptedFiles && acceptedFiles.length > 0 && !isDragActive && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"far fa-file fa-2x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: acceptedFiles[0].path\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }, this), activeStep === 2 && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(mapOnboardingFields),\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        w: \"100%\",\n        mb: \"3\",\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          status: \"info\",\n          children: [/*#__PURE__*/_jsxDEV(AlertIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(AlertDescription, {\n            children: \"Please thoroughly check the fields and align the values before moving to the next step.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        flexWrap: \"wrap\",\n        children: acceptedPartsOnboardingHeaders.map(header => {\n          var _actualPartOnboarding;\n\n          return /*#__PURE__*/_jsxDEV(Box, {\n            width: {\n              base: '100%',\n              lg: '48%'\n            },\n            mt: 6,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1\",\n              children: header\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select, { ...register(`${header}`, {\n                required: requiredFields.includes(header)\n              }),\n              defaultValue: (_actualPartOnboarding = actualPartOnboardingHeaders.find(actualHeader => `${actualHeader}`.toLowerCase().indexOf(`${header}`.toLowerCase()) !== -1 || new RegExp(actualHeader, 'ig').test(header) || header.toLowerCase().startsWith(actualHeader.toLowerCase()))) !== null && _actualPartOnboarding !== void 0 ? _actualPartOnboarding : 'No value',\n              placeholder: \"Select a value\",\n              children: actualPartOnboardingHeaders.map(actualHeader => /*#__PURE__*/_jsxDEV(\"option\", {\n                children: actualHeader\n              }, actualHeader, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 17\n            }, this), errors && errors[header] && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-youtube-regular text-sm\",\n              children: header\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 19\n            }, this)]\n          }, header, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 9\n    }, this), activeStep === 3 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        w: \"100%\",\n        p: 4,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          status: \"info\",\n          children: [/*#__PURE__*/_jsxDEV(AlertIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(AlertTitle, {\n            mr: 2,\n            children: \"Valid Rows\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(AlertDescription, {\n            children: [\"There are total \", mappedSheetDataValid.length, \"/\", sheetData.length, ' ', \"rows which are valid\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 11\n      }, this), mappedSheetDataInvalid.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n        w: \"100%\",\n        p: 4,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          status: \"error\",\n          children: [/*#__PURE__*/_jsxDEV(AlertIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(AlertTitle, {\n            mr: 2,\n            children: \"Invalid Rows\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(AlertDescription, {\n            children: [\"There are total \", mappedSheetDataInvalid.length, \"/\", sheetData.length, \" rows which are invalid\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 13\n      }, this), mappedSheetDataInvalid.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n        w: \"100%\",\n        p: 4,\n        style: {\n          overflowX: 'auto'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          variant: \"striped\" // style={{ backgroundColor: \"teal\" }}\n          ,\n          size: \"lg\",\n          className: \"table-auto border-collapse border border-green-800\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            style: {\n              backgroundColor: '#1e293b',\n              color: '#ffffff'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: Object.keys(mappedSheetDataInvalid[0]).map((header, index) => {\n                if (header === 'isInvalid' || header === 'manufacturerId' || header === 'categoryId') {} else {\n                  return /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-2 text-center\",\n                    style: {\n                      width: '150px',\n                      minWidth: '150px'\n                    },\n                    children: header.toUpperCase()\n                  }, header, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 422,\n                    columnNumber: 29\n                  }, this);\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            style: {\n              overflow: 'auto'\n            },\n            children: mappedSheetDataInvalid.map(row => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: Object.keys(row).map((header, index) => {\n                  if (header === 'isInvalid' || header === 'gallery' || header === 'manufacturerId' || header === 'categoryId') {} else {\n                    return /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-2 text-center\",\n                      style: {\n                        width: '110px',\n                        minWidth: '110px',\n                        color: row[header] === 'invalid' ? 'red' : 'black'\n                      },\n                      children: row[header] || '....'\n                    }, header, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 448,\n                      columnNumber: 31\n                    }, this);\n                  }\n                })\n              }, row.branchName + row.branchCode, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bulkButtonsContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmit(mapOnboardingFields),\n        isLoading: loading,\n        style: {\n          backgroundColor: '#1e293b',\n          color: '#ffffff',\n          marginLeft: '10px'\n        },\n        disabled: sheetData.length < 1,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"clrBtn\",\n        type: \"reset\",\n        onClick: () => {\n          setActiveStep(1);\n          acceptedFiles.length = 0;\n          acceptedFiles.splice(0, acceptedFiles.length);\n\n          if (inputRef.current) {\n            inputRef.current.value = '';\n          }\n\n          setSheetData([]);\n          setMappedSheetDataValid([]);\n          setMappedSheetDataInvalid([]);\n          reset({}, {\n            keepDirty: false,\n            keepErrors: false,\n            keepValues: false\n          });\n        },\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PartBulk, \"Ho34+HUcQWqduQW//KS6qUIKZ38=\", false, function () {\n  return [useSelector, useSelector, useHistory, useForm, useIntl, useDropzone];\n});\n\n_c = PartBulk;\nexport default _c2 = withToast(PartBulk);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PartBulk\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/components/PartBulk/index.js"],"names":["React","useMemo","useState","useEffect","useCallback","PropTypes","Button","Select","Alert","AlertIcon","AlertTitle","AlertDescription","Box","useForm","useDropzone","useIntl","Stepper","Step","XLSX","useSelector","toast","isEqual","messages","publicAxios","axios","_","sheetValidation","Layout","api","requiredFields","withToast","useHistory","baseStyle","flex","display","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","color","outline","transition","cursor","height","justifyContent","activeStyle","acceptStyle","rejectStyle","PartBulk","notification","auth","state","errorMessage","setErrorMessage","sheetData","setSheetData","activeStep","setActiveStep","mappedSheetDataValid","setMappedSheetDataValid","mappedSheetDataInvalid","setMappedSheetDataInvalid","globalMissingFields","setGlobalMissingFields","loading","setLoading","actualPartOnboardingHeaders","setActualPartOnboardingHeaders","acceptedPartsOnboardingHeaders","app","history","register","formState","errors","handleSubmit","reset","mode","intl","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","acceptedFiles","inputRef","accept","maxFiles","noKeyboard","length","reader","FileReader","onload","evt","bstr","target","result","wb","read","type","wsname","SheetNames","ws","Sheets","jsonData","utils","sheet_to_json","defval","Object","keys","readAsBinaryString","style","callback","data","inValidData","validData","map","val","otherError","singleField","missingFields","other","forEach","Set","status","title","description","join","error","toString","validLength","totalLength","ArrayOfKeysWithValue","row","res","filter","i","delKey","post","ADD_PART_BULK","parts","headers","Authorization","authToken","formatMessage","partsAddedSuccess","push","err","response","errorMsg","somethingWentWrong","keepDirty","keepErrors","keepValues","onModalClose","mapOnboardingFields","e","splice","current","value","completedBgColor","activeBgColor","fontWeight","DOWNLOAD_SAMPLE","partsDetailFile","className","dropFileHere","dragAndDropMessage","path","header","base","lg","required","includes","find","actualHeader","toLowerCase","indexOf","RegExp","test","startsWith","overflowX","index","width","minWidth","toUpperCase","overflow","branchName","branchCode","marginLeft"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,EAAyBC,QAAzB,EAAmCC,SAAnC,EAA8CC,WAA9C,QAAiE,OAAjE;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACEC,MADF,EAEEC,MAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,UALF,EAMEC,gBANF,EAOEC,GAPF,QAQO,kBARP;AASA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,OAAT,EAAkBC,IAAlB,QAA8B,oBAA9B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,WAAW,IAAIC,KAAxB,QAAqC,aAArC;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,eAAT,QAAgC,UAAhC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAO,qCAAP;AACA,SAASC,GAAT,EAAcC,cAAd,QAAoC,aAApC;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,SAASC,UAAT,QAA2B,cAA3B;;;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,IAAI,EAAE,CADU;AAEhBC,EAAAA,OAAO,EAAE,MAFO;AAGhBC,EAAAA,aAAa,EAAE,QAHC;AAIhBC,EAAAA,UAAU,EAAE,QAJI;AAKhBC,EAAAA,OAAO,EAAE,MALO;AAMhBC,EAAAA,WAAW,EAAE,CANG;AAOhBC,EAAAA,YAAY,EAAE,CAPE;AAQhBC,EAAAA,WAAW,EAAE,SARG;AAShBC,EAAAA,WAAW,EAAE,QATG;AAUhBC,EAAAA,eAAe,EAAE,SAVD;AAWhBC,EAAAA,KAAK,EAAE,SAXS;AAYhBC,EAAAA,OAAO,EAAE,MAZO;AAahBC,EAAAA,UAAU,EAAE,yBAbI;AAchBC,EAAAA,MAAM,EAAE,SAdQ;AAehBC,EAAAA,MAAM,EAAE,GAfQ;AAgBhBX,EAAAA,UAAU,EAAE,QAhBI;AAiBhBY,EAAAA,cAAc,EAAE;AAjBA,CAAlB;AAoBA,MAAMC,WAAW,GAAG;AAClBT,EAAAA,WAAW,EAAE;AADK,CAApB;AAIA,MAAMU,WAAW,GAAG;AAClBV,EAAAA,WAAW,EAAE;AADK,CAApB;AAIA,MAAMW,WAAW,GAAG;AAClBX,EAAAA,WAAW,EAAE;AADK,CAApB;;AAIA,MAAMY,QAAQ,GAAG,QAAsB;AAAA;;AAAA,MAArB;AAAEC,IAAAA;AAAF,GAAqB;AACrC,QAAMC,IAAI,GAAGnC,WAAW,CAAEoC,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB;AACA,QAAM,CAACE,YAAD,EAAeC,eAAf,IAAkCvD,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACwD,SAAD,EAAYC,YAAZ,IAA4BzD,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAC0D,UAAD,EAAaC,aAAb,IAA8B3D,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAAC4D,oBAAD,EAAuBC,uBAAvB,IAAkD7D,QAAQ,CAAC,EAAD,CAAhE;AACA,QAAM,CAAC8D,sBAAD,EAAyBC,yBAAzB,IAAsD/D,QAAQ,CAAC,EAAD,CAApE;AACA,QAAM,CAACgE,mBAAD,EAAsBC,sBAAtB,IAAgDjE,QAAQ,CAAC,EAAD,CAA9D;AACA,QAAM,CAACkE,OAAD,EAAUC,UAAV,IAAwBnE,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACoE,2BAAD,EAA8BC,8BAA9B,IACJrE,QAAQ,CAAC,EAAD,CADV;AAEA,QAAMsE,8BAA8B,GAAGrD,WAAW,CAC/CoC,KAAD,IAAWA,KAAK,CAACkB,GAAN,CAAUD,8BAD2B,CAAlD;AAGA,QAAME,OAAO,GAAG3C,UAAU,EAA1B;AAEA,QAAM;AACJ4C,IAAAA,QADI;AAEJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF,KAFP;AAGJC,IAAAA,YAHI;AAIJC,IAAAA;AAJI,MAKFlE,OAAO,CAAC;AACVmE,IAAAA,IAAI,EAAE;AADI,GAAD,CALX;AASA,QAAMC,IAAI,GAAGlE,OAAO,EAApB;AACA,QAAM;AACJmE,IAAAA,YADI;AAEJC,IAAAA,aAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA,YAJI;AAKJC,IAAAA,YALI;AAMJC,IAAAA,aANI;AAOJC,IAAAA;AAPI,MAQF1E,WAAW,CAAC;AACd2E,IAAAA,MAAM,EACJ,qGAFY;AAGdC,IAAAA,QAAQ,EAAE,CAHI;AAIdC,IAAAA,UAAU,EAAE;AAJE,GAAD,CARf;AAeAxF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIoF,aAAa,CAACK,MAAd,GAAuB,CAA3B,EAA8B;AAC5BvB,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMwB,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,MAAAA,MAAM,CAACE,MAAP,GAAiBC,GAAD,IAAS;AACvB,cAAMC,IAAI,GAAGD,GAAG,CAACE,MAAJ,CAAWC,MAAxB;AACA,cAAMC,EAAE,GAAGlF,IAAI,CAACmF,IAAL,CAAUJ,IAAV,EAAgB;AAAEK,UAAAA,IAAI,EAAE;AAAR,SAAhB,CAAX;AACA,cAAMC,MAAM,GAAGH,EAAE,CAACI,UAAH,CAAc,CAAd,CAAf;AACA,cAAMC,EAAE,GAAGL,EAAE,CAACM,MAAH,CAAUH,MAAV,CAAX;AACA,cAAMI,QAAQ,GAAGzF,IAAI,CAAC0F,KAAL,CAAWC,aAAX,CAAyBJ,EAAzB,EAA6B;AAAEK,UAAAA,MAAM,EAAE;AAAV,SAA7B,CAAjB;;AACA,YAAI,CAACH,QAAQ,CAACf,MAAd,EAAsB;AACpBnC,UAAAA,eAAe,CAAC,mDAAD,CAAf;AACD,SAFD,MAEO;AACLA,UAAAA,eAAe,CAAC,EAAD,CAAf;AACAc,UAAAA,8BAA8B,CAACwC,MAAM,CAACC,IAAP,CAAYL,QAAQ,CAAC,CAAD,CAApB,CAAD,CAA9B;AACAhD,UAAAA,YAAY,CAACgD,QAAD,CAAZ;AACD;;AAEDtC,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAfD;;AAgBAwB,MAAAA,MAAM,CAACoB,kBAAP,CAA0B1B,aAAa,CAAC,CAAD,CAAvC;AACD;AACF,GAtBQ,EAsBN,CAACA,aAAD,CAtBM,CAAT;AAwBApF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIqD,YAAJ,EAAkB;AAChBpC,MAAAA,KAAK,CAACoC,YAAD,CAAL;AACD;AACF,GAJQ,EAIN,CAACA,YAAD,CAJM,CAAT;AAMA,QAAM0D,KAAK,GAAGjH,OAAO,CACnB,OAAO,EACL,GAAG+B,SADE;AAEL,QAAIoD,YAAY,GAAGnC,WAAH,GAAiB,EAAjC,CAFK;AAGL,QAAIoC,YAAY,GAAGnC,WAAH,GAAiB,EAAjC,CAHK;AAIL,QAAIoC,YAAY,GAAGnC,WAAH,GAAiB,EAAjC;AAJK,GAAP,CADmB,EAOnB,CAACiC,YAAD,EAAeE,YAAf,EAA6BD,YAA7B,CAPmB,CAArB;;AASA,QAAM8B,QAAQ,GAAG,MAAOC,IAAP,IAAgB;AAC/B/C,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,QAAIT,UAAU,GAAG,CAAjB,EAAoBC,aAAa,CAACD,UAAU,GAAG,CAAd,CAAb;;AACpB,QAAIA,UAAU,KAAK,CAAnB,EAAsB;AACpB,UAAI;AACF,cAAM;AAACyD,UAAAA,WAAD;AAAcC,UAAAA;AAAd,YAA2B,MAAM5F,eAAe,CACpDgC,SADoD,EAEpD0D,IAFoD,EAGpD5C,8BAHoD,CAAtD;AAOAT,QAAAA,uBAAuB,CAACuD,SAAS,CAACC,GAAV,CAAcC,GAAG,IAAIA,GAAG,CAACJ,IAAzB,CAAD,CAAvB;;AAEA,YAAIC,WAAW,CAACzB,MAAZ,GAAqB,CAAzB,EAA4B;AAC1B3B,UAAAA,yBAAyB,CAACoD,WAAW,CAACE,GAAZ,CAAgBC,GAAG,IAAIA,GAAG,CAACJ,IAA3B,CAAD,CAAzB;AACA,cAAIK,UAAU,GAAG,EAAjB;AACA,cAAIC,WAAW,GAAG,EAAlB;AAEAL,UAAAA,WAAW,CAACE,GAAZ,CAAgBC,GAAG,IAAKA,GAAG,CAACG,aAAJ,CAAkBC,KAA1C,EAAiDC,OAAjD,CAAyDT,IAAI,IAAI;AAC/DK,YAAAA,UAAU,GAAG,CAAC,GAAG,IAAIK,GAAJ,CAAQ,CAAC,GAAGL,UAAJ,EAAgB,GAAGL,IAAnB,CAAR,CAAJ,CAAb;AACD,WAFD;AAIAC,UAAAA,WAAW,CAACE,GAAZ,CAAgBC,GAAG,IAAKA,GAAG,CAACG,aAAJ,CAAkBD,WAA1C,EAAuDG,OAAvD,CAA+DT,IAAI,IAAI;AACrEM,YAAAA,WAAW,GAAG,CAAC,GAAG,IAAII,GAAJ,CAAQ,CAAC,GAAGJ,WAAJ,EAAiB,GAAGN,IAApB,CAAR,CAAJ,CAAd;AACD,WAFD;;AAKA,cAAGM,WAAW,CAAC9B,MAAZ,GAAqB,CAAxB,EAA0B;AACxBvC,YAAAA,YAAY,CAAC;AACX0E,cAAAA,MAAM,EAAE,OADG;AAEXC,cAAAA,KAAK,EAAE,gBAFI;AAGXC,cAAAA,WAAW,EAAG,GAAEP,WAAW,CAACQ,IAAZ,CAAiB,GAAjB,CAAsB,SACpCR,WAAW,CAAC9B,MAAZ,GAAqB,CAArB,GAAyB,GAAzB,GAA+B,EAChC,IAAG8B,WAAW,CAAC9B,MAAZ,GAAqB,CAArB,GAAyB,KAAzB,GAAiC,IAAK;AAL/B,aAAD,CAAZ;AAOD;;AAED,cAAG6B,UAAU,CAAC7B,MAAX,GAAoB,CAAvB,EAAyB;AACvBvC,YAAAA,YAAY,CAAC;AACX0E,cAAAA,MAAM,EAAE,OADG;AAEXC,cAAAA,KAAK,EAAE,gBAFI;AAGXC,cAAAA,WAAW,EAAG,GAAER,UAAU,CAACS,IAAX,CAAgB,IAAhB,CAAsB;AAH3B,aAAD,CAAZ;AAKD;AAEF;AAEF,OA5CD,CA4CE,OAAOC,KAAP,EAAc;AACd/G,QAAAA,KAAK,CAAC+G,KAAK,CAACC,QAAN,EAAD,CAAL;AACD;AACF,KAhDD,MAgDO,IAAIxE,UAAU,KAAK,CAAnB,EAAsB;AAG3B,YAAMyE,WAAW,GAAGvE,oBAAoB,CAAC8B,MAAzC;AACA,YAAM0C,WAAW,GAAG5E,SAAS,CAACkC,MAA9B;AAEA,YAAM2C,oBAAoB,GAAGzE,oBAAoB,CAACyD,GAArB,CAA0BiB,GAAD,IAAS;AAC7D,cAAMC,GAAG,GAAG1B,MAAM,CAACC,IAAP,CAAYwB,GAAZ,EAAiBE,MAAjB,CAAyBC,CAAD,IAAOH,GAAG,CAACG,CAAD,CAAH,KAAW,EAA1C,CAAZ;AACAF,QAAAA,GAAG,CAAClB,GAAJ,CAASqB,MAAD,IAAY,OAAOJ,GAAG,CAACI,MAAD,CAA9B;AACA,eAAOJ,GAAP;AACD,OAJ4B,CAA7B;;AAMA,UAAI;AACF,cAAMhH,KAAK,CAACqH,IAAN,CACJjH,GAAG,CAACkH,aADA,EAEJ;AACEC,UAAAA,KAAK,EAAER;AADT,SAFI,EAKJ;AACES,UAAAA,OAAO,EAAE;AACPC,YAAAA,aAAa,EAAE3F,IAAI,CAAC4F;AADb;AADX,SALI,CAAN;AAWA9H,QAAAA,KAAK,CAAC6D,IAAI,CAACkE,aAAL,CAAmB7H,QAAQ,CAAC8H,iBAA5B,CAAD,CAAL;AACArF,QAAAA,uBAAuB,CAAC,EAAD,CAAvB;AACAW,QAAAA,OAAO,CAAC2E,IAAR,CAAa,QAAb;AACD,OAfD,CAeE,OAAOC,GAAP,EAAY;AACZ,YAAGA,GAAG,CAACC,QAAP,EAAgB;AAAA;;AACdlG,UAAAA,YAAY,CAAC;AAAC0E,YAAAA,MAAM,EAAE,OAAT;AAAkBC,YAAAA,KAAK,EAAE,gBAAzB;AAA2CC,YAAAA,WAAW,4CAAEqB,GAAG,CAACC,QAAN,wEAAE,cAAcnC,IAAhB,uDAAE,mBAAoBoC,QAAtB,yEAAkC;AAAxF,WAAD,CAAZ;AACD,SAFD,MAEM;AACJpI,UAAAA,KAAK,CAAC6D,IAAI,CAACkE,aAAL,CAAmB7H,QAAQ,CAACmI,kBAA5B,CAAD,CAAL;AACD;;AAED1F,QAAAA,uBAAuB,CAAC,EAAD,CAAvB;AACD;;AACDgB,MAAAA,KAAK,CACH,EADG,EAEH;AACE2E,QAAAA,SAAS,EAAE,KADb;AAEEC,QAAAA,UAAU,EAAE,KAFd;AAGEC,QAAAA,UAAU,EAAE;AAHd,OAFG,CAAL;AAQAxI,MAAAA,KAAK,CAAE,yBAAwBiH,WAAY,IAAGC,WAAY,YAArD,CAAL;AACAuB,MAAAA,YAAY;AACb;;AACDxF,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAnGD,CAhFqC,CAqLrC;;;AACA,QAAMyF,mBAAmB,GAAG1J,WAAW,CAAC+G,QAAD,EAAW,CAChDvD,UADgD,EAEhDC,aAFgD,EAGhDC,oBAHgD,EAIhDI,mBAJgD,CAAX,CAAvC;AAOA,QAAM2F,YAAY,GAAGzJ,WAAW,CAAE2J,CAAD,IAAO;AACtClG,IAAAA,aAAa,CAAC,CAAD,CAAb;AACA0B,IAAAA,aAAa,CAACK,MAAd,GAAuB,CAAvB;AACAL,IAAAA,aAAa,CAACyE,MAAd,CAAqB,CAArB,EAAwBzE,aAAa,CAACK,MAAtC;;AACA,QAAIJ,QAAQ,CAACyE,OAAb,EAAsB;AACpBzE,MAAAA,QAAQ,CAACyE,OAAT,CAAiBC,KAAjB,GAAyB,EAAzB;AACD;;AACDvG,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAM,IAAAA,yBAAyB,CAAC,EAAD,CAAzB;AACAF,IAAAA,uBAAuB,CAAC,EAAD,CAAvB;AACD,GAV+B,CAAhC;AAYA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACE,QAAC,OAAD;AACE,QAAA,WAAW,EAAE;AACXoG,UAAAA,gBAAgB,EAAE,SADP;AAEXC,UAAAA,aAAa,EAAE;AAFJ,SADf;AAKE,QAAA,UAAU,EAAExG,UALd;AAAA,gCAOE,QAAC,IAAD;AAAM,UAAA,KAAK,EAAC,aAAZ;AAA0B,UAAA,SAAS,EAAE2B,aAAa,CAACK,MAAd,GAAuB;AAA5D;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE,QAAC,IAAD;AAAM,UAAA,KAAK,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBARF,eASE,QAAC,IAAD;AAAM,UAAA,KAAK,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,EAcGhC,UAAU,KAAK,CAAf,iBACC;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,CAAC,EAAC,MAAP;AAAc,QAAA,EAAE,EAAC,GAAjB;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,MAAM,EAAC,MAAd;AAAA,kCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,gBAAD;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AACE,cAAA,KAAK,EAAE;AAAEyG,gBAAAA,UAAU,EAAE;AAAd,eADT;AAEE,cAAA,IAAI,EAAEzI,GAAG,CAAC0I,eAFZ;AAGE,cAAA,QAAQ,EAAC,kBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAgBE;AAAO,QAAA,SAAS,EAAC,+DAAjB;AAAA,kBACGrF,IAAI,CAACkE,aAAL,CAAmB7H,QAAQ,CAACiJ,eAA5B;AADH;AAAA;AAAA;AAAA;AAAA,cAhBF,eAmBE;AACE,QAAA,SAAS,EAAC,+BADZ;AAAA,WAEMrF,YAAY,CAAC;AAAEgC,UAAAA,KAAF;AAASsD,UAAAA,SAAS,EAAE;AAApB,SAAD,CAFlB;AAAA,gCAIE,sBAAWrF,aAAa;AAAxB;AAAA;AAAA;AAAA;AAAA,gBAJF,EAKGC,YAAY,iBAAI;AAAA,oBAAIH,IAAI,CAACkE,aAAL,CAAmB7H,QAAQ,CAACmJ,YAA5B;AAAJ;AAAA;AAAA;AAAA;AAAA,gBALnB,EAMG,CAAClF,aAAD,IACEA,aAAa,CAACK,MAAd,KAAyB,CAAzB,IAA8B,CAACR,YAA/B,iBACC;AAAA,oBAAIH,IAAI,CAACkE,aAAL,CAAmB7H,QAAQ,CAACoJ,kBAA5B;AAAJ;AAAA;AAAA;AAAA;AAAA,gBARN,EAUGnF,aAAa,IAAIA,aAAa,CAACK,MAAd,GAAuB,CAAxC,IAA6C,CAACR,YAA9C,iBACC;AAAA,kCACE;AAAA,mCACE;AAAG,cAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAA,sBAAIG,aAAa,CAAC,CAAD,CAAb,CAAiBoF;AAArB;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA,wBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAfJ,EAwDG/G,UAAU,KAAK,CAAf,iBACC;AAAM,MAAA,QAAQ,EAAEkB,YAAY,CAACgF,mBAAD,CAA5B;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,CAAC,EAAC,MAAP;AAAc,QAAA,EAAE,EAAC,GAAjB;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,MAAM,EAAC,MAAd;AAAA,kCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,GAAD;AAAK,QAAA,OAAO,EAAC,MAAb;AAAoB,QAAA,cAAc,EAAC,eAAnC;AAAmD,QAAA,QAAQ,EAAC,MAA5D;AAAA,kBACGtF,8BAA8B,CAAC+C,GAA/B,CAAoCqD,MAAD;AAAA;;AAAA,8BAClC,QAAC,GAAD;AAAkB,YAAA,KAAK,EAAE;AAAEC,cAAAA,IAAI,EAAE,MAAR;AAAgBC,cAAAA,EAAE,EAAE;AAApB,aAAzB;AAAsD,YAAA,EAAE,EAAE,CAA1D;AAAA,oCACE;AAAO,cAAA,SAAS,EAAC,+DAAjB;AAAA,wBACGF;AADH;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,QAAC,MAAD,OACMjG,QAAQ,CAAE,GAAEiG,MAAO,EAAX,EAAc;AACxBG,gBAAAA,QAAQ,EAAElJ,cAAc,CAACmJ,QAAf,CAAwBJ,MAAxB;AADc,eAAd,CADd;AAIE,cAAA,YAAY,2BACVtG,2BAA2B,CAAC2G,IAA5B,CACGC,YAAD,IACG,GAAEA,YAAa,EAAhB,CACGC,WADH,GAEGC,OAFH,CAEY,GAAER,MAAO,EAAV,CAAYO,WAAZ,EAFX,MAE0C,CAAC,CAF3C,IAGA,IAAIE,MAAJ,CAAWH,YAAX,EAAyB,IAAzB,EAA+BI,IAA/B,CAAoCV,MAApC,CAHA,IAG+CA,MAAM,CAACO,WAAP,GAAqBI,UAArB,CAAgCL,YAAY,CAACC,WAAb,EAAhC,CALnD,CADU,yEAOL,UAXT;AAaC,cAAA,WAAW,EAAC,gBAbb;AAAA,wBAeG7G,2BAA2B,CAACiD,GAA5B,CAAiC2D,YAAD,iBAC/B;AAAA,0BAA4BA;AAA5B,iBAAaA,YAAb;AAAA;AAAA;AAAA;AAAA,sBADD;AAfH;AAAA;AAAA;AAAA;AAAA,oBAJF,EAuBGrG,MAAM,IAAIA,MAAM,CAAC+F,MAAD,CAAhB,iBACC;AAAM,cAAA,SAAS,EAAC,8BAAhB;AAAA,wBAAgDA;AAAhD;AAAA;AAAA;AAAA;AAAA,oBAxBJ;AAAA,aAAUA,MAAV;AAAA;AAAA;AAAA;AAAA,kBADkC;AAAA,SAAnC;AADH;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YAzDJ,EAqGGhH,UAAU,KAAK,CAAf,iBACC;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,CAAC,EAAC,MAAP;AAAc,QAAA,CAAC,EAAE,CAAjB;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,MAAM,EAAC,MAAd;AAAA,kCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,UAAD;AAAY,YAAA,EAAE,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,gBAAD;AAAA,2CACmBE,oBAAoB,CAAC8B,MADxC,OACiDlC,SAAS,CAACkC,MAD3D,EACmE,GADnE;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EAaG5B,sBAAsB,CAAC4B,MAAvB,GAAgC,CAAhC,iBACC,QAAC,GAAD;AAAK,QAAA,CAAC,EAAC,MAAP;AAAc,QAAA,CAAC,EAAE,CAAjB;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,MAAM,EAAC,OAAd;AAAA,kCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,UAAD;AAAY,YAAA,EAAE,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,gBAAD;AAAA,2CACmB5B,sBAAsB,CAAC4B,MAD1C,OAEGlC,SAAS,CAACkC,MAFb;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAdJ,EA0BG5B,sBAAsB,CAAC4B,MAAvB,GAAgC,CAAhC,iBACC,QAAC,GAAD;AAAK,QAAA,CAAC,EAAC,MAAP;AAAc,QAAA,CAAC,EAAE,CAAjB;AAAoB,QAAA,KAAK,EAAE;AAAE4F,UAAAA,SAAS,EAAE;AAAb,SAA3B;AAAA,+BACE;AACE,UAAA,OAAO,EAAC,SADV,CAEE;AAFF;AAGE,UAAA,IAAI,EAAC,IAHP;AAIE,UAAA,SAAS,EAAC,oDAJZ;AAAA,kCAME;AAAO,YAAA,KAAK,EAAE;AAAE9I,cAAAA,eAAe,EAAE,SAAnB;AAA8BC,cAAAA,KAAK,EAAE;AAArC,aAAd;AAAA,mCAYE;AAAA,wBACGoE,MAAM,CAACC,IAAP,CAAYhD,sBAAsB,CAAC,CAAD,CAAlC,EAAuCuD,GAAvC,CACC,CAACqD,MAAD,EAASa,KAAT,KAAmB;AACjB,oBACEb,MAAM,KAAK,WAAX,IACAA,MAAM,KAAK,gBADX,IAEAA,MAAM,KAAK,YAHb,EAIE,CACD,CALD,MAKO;AACL,sCACE;AAEE,oBAAA,SAAS,EAAC,kBAFZ;AAGE,oBAAA,KAAK,EAAE;AAAEc,sBAAAA,KAAK,EAAE,OAAT;AAAkBC,sBAAAA,QAAQ,EAAE;AAA5B,qBAHT;AAAA,8BAKGf,MAAM,CAACgB,WAAP;AALH,qBACOhB,MADP;AAAA;AAAA;AAAA;AAAA,0BADF;AASD;AACF,eAlBF;AADH;AAAA;AAAA;AAAA;AAAA;AAZF;AAAA;AAAA;AAAA;AAAA,kBANF,eAyCE;AAAO,YAAA,KAAK,EAAE;AAAEiB,cAAAA,QAAQ,EAAE;AAAZ,aAAd;AAAA,sBACG7H,sBAAsB,CAACuD,GAAvB,CAA4BiB,GAAD,IAAS;AACnC,kCACE;AAAA,0BACGzB,MAAM,CAACC,IAAP,CAAYwB,GAAZ,EAAiBjB,GAAjB,CAAqB,CAACqD,MAAD,EAASa,KAAT,KAAmB;AACvC,sBACEb,MAAM,KAAK,WAAX,IACAA,MAAM,KAAK,SADX,IAEAA,MAAM,KAAK,gBAFX,IAGAA,MAAM,KAAK,YAJb,EAKE,CACD,CAND,MAMO;AACL,wCACE;AAEE,sBAAA,SAAS,EAAC,kBAFZ;AAGE,sBAAA,KAAK,EAAE;AACLc,wBAAAA,KAAK,EAAE,OADF;AAELC,wBAAAA,QAAQ,EAAE,OAFL;AAGLhJ,wBAAAA,KAAK,EACH6F,GAAG,CAACoC,MAAD,CAAH,KAAgB,SAAhB,GAA4B,KAA5B,GAAoC;AAJjC,uBAHT;AAAA,gCAUGpC,GAAG,CAACoC,MAAD,CAAH,IAAe;AAVlB,uBACOA,MADP;AAAA;AAAA;AAAA;AAAA,4BADF;AAcD;AACF,iBAvBA;AADH,iBAASpC,GAAG,CAACsD,UAAJ,GAAiBtD,GAAG,CAACuD,UAA9B;AAAA;AAAA;AAAA;AAAA,sBADF;AA4BD,aA7BA;AADH;AAAA;AAAA;AAAA;AAAA,kBAzCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA3BJ;AAAA,oBAtGJ,eAgNE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,8BACE,QAAC,MAAD;AACE,QAAA,OAAO,EAAEjH,YAAY,CAACgF,mBAAD,CADvB;AAEE,QAAA,SAAS,EAAE1F,OAFb;AAGE,QAAA,KAAK,EAAE;AACL1B,UAAAA,eAAe,EAAE,SADZ;AAELC,UAAAA,KAAK,EAAE,SAFF;AAGLqJ,UAAAA,UAAU,EAAE;AAHP,SAHT;AAQE,QAAA,QAAQ,EAAEtI,SAAS,CAACkC,MAAV,GAAmB,CAR/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAaE,QAAC,MAAD;AACE,QAAA,OAAO,EAAC,QADV;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,OAAO,EAAE,MAAM;AACb/B,UAAAA,aAAa,CAAC,CAAD,CAAb;AACA0B,UAAAA,aAAa,CAACK,MAAd,GAAuB,CAAvB;AACAL,UAAAA,aAAa,CAACyE,MAAd,CAAqB,CAArB,EAAwBzE,aAAa,CAACK,MAAtC;;AACA,cAAIJ,QAAQ,CAACyE,OAAb,EAAsB;AACpBzE,YAAAA,QAAQ,CAACyE,OAAT,CAAiBC,KAAjB,GAAyB,EAAzB;AACD;;AACDvG,UAAAA,YAAY,CAAC,EAAD,CAAZ;AACAI,UAAAA,uBAAuB,CAAC,EAAD,CAAvB;AACAE,UAAAA,yBAAyB,CAAC,EAAD,CAAzB;AACAc,UAAAA,KAAK,CACH,EADG,EAEH;AACE2E,YAAAA,SAAS,EAAE,KADb;AAEEC,YAAAA,UAAU,EAAE,KAFd;AAGEC,YAAAA,UAAU,EAAE;AAHd,WAFG,CAAL;AAQD,SArBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YAhNF;AAAA,kBADF;AA0PD,CAncD;;GAAMxG,Q;UACSjC,W,EAU0BA,W,EAGvBY,U,EAOZlB,O,EAISE,O,EASTD,W;;;KAlCAsC,Q;AAqcN,qBAAetB,SAAS,CAACsB,QAAD,CAAxB","sourcesContent":["import React, { useMemo, useState, useEffect, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Button,\r\n  Select,\r\n  Alert,\r\n  AlertIcon,\r\n  AlertTitle,\r\n  AlertDescription,\r\n  Box,\r\n} from '@chakra-ui/react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { useIntl } from 'react-intl';\r\nimport { Stepper, Step } from 'react-form-stepper';\r\nimport XLSX from 'xlsx';\r\nimport { useSelector } from 'react-redux';\r\nimport toast from 'react-hot-toast';\r\nimport isEqual from 'lodash/isEqual';\r\nimport messages from './messages';\r\nimport { publicAxios as axios } from '../../axios';\r\nimport _ from 'lodash';\r\nimport { sheetValidation } from './helper';\r\nimport Layout from '../../containers/Layout';\r\nimport '../../utils/theme/bulkContainer.css';\r\nimport { api, requiredFields } from './constants';\r\nimport withToast from '../../HOCs/withToast';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst baseStyle = {\r\n  flex: 1,\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  padding: '20px',\r\n  borderWidth: 2,\r\n  borderRadius: 2,\r\n  borderColor: '#eeeeee',\r\n  borderStyle: 'dashed',\r\n  backgroundColor: '#fafafa',\r\n  color: '#bdbdbd',\r\n  outline: 'none',\r\n  transition: 'border .24s ease-in-out',\r\n  cursor: 'pointer',\r\n  height: 250,\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n};\r\n\r\nconst activeStyle = {\r\n  borderColor: '#2196f3',\r\n};\r\n\r\nconst acceptStyle = {\r\n  borderColor: '#00e676',\r\n};\r\n\r\nconst rejectStyle = {\r\n  borderColor: '#ff1744',\r\n};\r\n\r\nconst PartBulk = ({ notification }) => {\r\n  const auth = useSelector((state) => state.auth);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [sheetData, setSheetData] = useState([]);\r\n  const [activeStep, setActiveStep] = useState(1);\r\n  const [mappedSheetDataValid, setMappedSheetDataValid] = useState([]);\r\n  const [mappedSheetDataInvalid, setMappedSheetDataInvalid] = useState([]);\r\n  const [globalMissingFields, setGlobalMissingFields] = useState([]);\r\n  const [loading, setLoading] = useState(false)\r\n  const [actualPartOnboardingHeaders, setActualPartOnboardingHeaders] =\r\n    useState([]);\r\n  const acceptedPartsOnboardingHeaders = useSelector(\r\n    (state) => state.app.acceptedPartsOnboardingHeaders,\r\n  );\r\n  const history = useHistory();\r\n\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    handleSubmit,\r\n    reset,\r\n  } = useForm({\r\n    mode: 'onSubmit',\r\n  });\r\n\r\n  const intl = useIntl();\r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive,\r\n    isDragAccept,\r\n    isDragReject,\r\n    acceptedFiles,\r\n    inputRef,\r\n  } = useDropzone({\r\n    accept:\r\n      'text/csv,application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n    maxFiles: 1,\r\n    noKeyboard: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (acceptedFiles.length > 0) {\r\n      setLoading(true);\r\n      const reader = new FileReader();\r\n      reader.onload = (evt) => {\r\n        const bstr = evt.target.result;\r\n        const wb = XLSX.read(bstr, { type: 'binary' });\r\n        const wsname = wb.SheetNames[0];\r\n        const ws = wb.Sheets[wsname];\r\n        const jsonData = XLSX.utils.sheet_to_json(ws, { defval: '' });\r\n        if (!jsonData.length) {\r\n          setErrorMessage('Either sheets is empty or the sheet is corrupted.');\r\n        } else {\r\n          setErrorMessage('');\r\n          setActualPartOnboardingHeaders(Object.keys(jsonData[0]));\r\n          setSheetData(jsonData);\r\n        }\r\n\r\n        setLoading(false);\r\n      };\r\n      reader.readAsBinaryString(acceptedFiles[0]);\r\n    }\r\n  }, [acceptedFiles]);\r\n\r\n  useEffect(() => {\r\n    if (errorMessage) {\r\n      toast(errorMessage);\r\n    }\r\n  }, [errorMessage]);\r\n\r\n  const style = useMemo(\r\n    () => ({\r\n      ...baseStyle,\r\n      ...(isDragActive ? activeStyle : {}),\r\n      ...(isDragAccept ? acceptStyle : {}),\r\n      ...(isDragReject ? rejectStyle : {}),\r\n    }),\r\n    [isDragActive, isDragReject, isDragAccept],\r\n  );\r\n  const callback = async (data) => {\r\n    setLoading(true)\r\n    if (activeStep < 3) setActiveStep(activeStep + 1);\r\n    if (activeStep === 2) {\r\n      try {\r\n        const {inValidData, validData} = await sheetValidation(\r\n          sheetData,\r\n          data,\r\n          acceptedPartsOnboardingHeaders,\r\n        );\r\n\r\n\r\n        setMappedSheetDataValid(validData.map(val => val.data));\r\n\r\n        if (inValidData.length > 0) {\r\n          setMappedSheetDataInvalid(inValidData.map(val => val.data));\r\n          let otherError = [];\r\n          let singleField = [];\r\n      \r\n          inValidData.map(val =>  val.missingFields.other).forEach(data => {\r\n            otherError = [...new Set([...otherError, ...data])]\r\n          })\r\n\r\n          inValidData.map(val =>  val.missingFields.singleField).forEach(data => {\r\n            singleField = [...new Set([...singleField, ...data])]\r\n          })\r\n\r\n\r\n          if(singleField.length > 0){\r\n            notification({\r\n              status: 'error',\r\n              title: 'Invalid Fields',\r\n              description: `${singleField.join(',')} field${\r\n                singleField.length > 1 ? 's' : ''\r\n              } ${singleField.length > 1 ? 'are' : 'is'}  invalid`,\r\n            });\r\n          }\r\n\r\n          if(otherError.length > 0){\r\n            notification({\r\n              status: 'error',\r\n              title: 'Invalid Fields',\r\n              description: `${otherError.join(', ')}`,\r\n            });\r\n          }\r\n          \r\n        }\r\n      \r\n      } catch (error) {\r\n        toast(error.toString());\r\n      }\r\n    } else if (activeStep === 3) {\r\n     \r\n\r\n      const validLength = mappedSheetDataValid.length;\r\n      const totalLength = sheetData.length;\r\n\r\n      const ArrayOfKeysWithValue = mappedSheetDataValid.map((row) => {\r\n        const res = Object.keys(row).filter((i) => row[i] === '');\r\n        res.map((delKey) => delete row[delKey]);\r\n        return row;\r\n      });\r\n\r\n      try {\r\n        await axios.post(\r\n          api.ADD_PART_BULK,\r\n          {\r\n            parts: ArrayOfKeysWithValue,\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: auth.authToken,\r\n            },\r\n          },\r\n        );\r\n        toast(intl.formatMessage(messages.partsAddedSuccess));\r\n        setMappedSheetDataValid([]);\r\n        history.push('/parts');\r\n      } catch (err) {\r\n        if(err.response){\r\n          notification({status: 'error', title: 'Error Occurred', description: err.response?.data?.errorMsg ?? 'Please try again'})\r\n        }else {\r\n          toast(intl.formatMessage(messages.somethingWentWrong));\r\n        }\r\n        \r\n        setMappedSheetDataValid([]);\r\n      }\r\n      reset(\r\n        {},\r\n        {\r\n          keepDirty: false,\r\n          keepErrors: false,\r\n          keepValues: false,\r\n        },\r\n      );\r\n      toast(`Attempting to onboard ${validLength}/${totalLength} Branches.`);\r\n      onModalClose();\r\n    }\r\n    setLoading(false);\r\n  };\r\n  \r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const mapOnboardingFields = useCallback(callback, [\r\n    activeStep,\r\n    setActiveStep,\r\n    mappedSheetDataValid,\r\n    globalMissingFields\r\n  ]);\r\n\r\n  const onModalClose = useCallback((e) => {\r\n    setActiveStep(1);\r\n    acceptedFiles.length = 0;\r\n    acceptedFiles.splice(0, acceptedFiles.length);\r\n    if (inputRef.current) {\r\n      inputRef.current.value = '';\r\n    }\r\n    setSheetData([]);\r\n    setMappedSheetDataInvalid([]);\r\n    setMappedSheetDataValid([]);\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className='w-full mb-3'>\r\n        <Stepper\r\n          styleConfig={{\r\n            completedBgColor: '#008000',\r\n            activeBgColor: '#1e293b',\r\n          }}\r\n          activeStep={activeStep}\r\n        >\r\n          <Step label='File Upload' completed={acceptedFiles.length > 0} />\r\n          <Step label='Field Mappings' />\r\n          <Step label='Review' />\r\n        </Stepper>\r\n      </div>\r\n      {activeStep === 1 && (\r\n        <div className='w-full px-4 lg:w-full mb-3'>\r\n          <Box w='100%' mb='3'>\r\n            <Alert status='info'>\r\n              <AlertIcon />\r\n              <AlertDescription>\r\n                <label>Download a sample file from here </label>\r\n                <a\r\n                  style={{ fontWeight: 'bold' }}\r\n                  href={api.DOWNLOAD_SAMPLE}\r\n                  download='Part sample File'\r\n                >\r\n                  Download File\r\n                </a>\r\n              </AlertDescription>\r\n            </Alert>\r\n          </Box>\r\n          <label className='block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1'>\r\n            {intl.formatMessage(messages.partsDetailFile)}\r\n          </label>\r\n          <div\r\n            className='relative w-full dropZone-area'\r\n            {...getRootProps({ style, className: 'dropzone' })}\r\n          >\r\n            <input {...getInputProps()} />\r\n            {isDragActive && <p>{intl.formatMessage(messages.dropFileHere)}</p>}\r\n            {!acceptedFiles ||\r\n              (acceptedFiles.length === 0 && !isDragActive && (\r\n                <p>{intl.formatMessage(messages.dragAndDropMessage)}</p>\r\n              ))}\r\n            {acceptedFiles && acceptedFiles.length > 0 && !isDragActive && (\r\n              <>\r\n                <p>\r\n                  <i className='far fa-file fa-2x' />\r\n                </p>\r\n                <p>{acceptedFiles[0].path}</p>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {activeStep === 2 && (\r\n        <form onSubmit={handleSubmit(mapOnboardingFields)}>\r\n          <Box w='100%' mb='3'>\r\n            <Alert status='info'>\r\n              <AlertIcon />\r\n              <AlertDescription>\r\n                Please thoroughly check the fields and align the values before\r\n                moving to the next step.\r\n              </AlertDescription>\r\n            </Alert>\r\n          </Box>\r\n          <Box display='flex' justifyContent='space-between' flexWrap='wrap'>\r\n            {acceptedPartsOnboardingHeaders.map((header) => (\r\n              <Box key={header} width={{ base: '100%', lg: '48%' }} mt={6}>\r\n                <label className='block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1'>\r\n                  {header}\r\n                </label>\r\n                <Select\r\n                  {...register(`${header}`, {\r\n                    required: requiredFields.includes(header),\r\n                  })}\r\n                  defaultValue={\r\n                    actualPartOnboardingHeaders.find(\r\n                      (actualHeader) =>\r\n                        `${actualHeader}`\r\n                          .toLowerCase()\r\n                          .indexOf(`${header}`.toLowerCase()) !== -1 ||\r\n                        new RegExp(actualHeader, 'ig').test(header) || header.toLowerCase().startsWith(actualHeader.toLowerCase()),\r\n                    ) ?? 'No value'\r\n                  }\r\n                 placeholder='Select a value'\r\n                >\r\n                  {actualPartOnboardingHeaders.map((actualHeader) => (\r\n                    <option key={actualHeader}>{actualHeader}</option>\r\n                  ))}\r\n                </Select>\r\n                {errors && errors[header] && (\r\n                  <span className='text-youtube-regular text-sm'>{header}</span>\r\n                )}\r\n              </Box>\r\n            ))}\r\n          </Box>\r\n        </form>\r\n      )}\r\n\r\n      {activeStep === 3 && (\r\n        <>\r\n          <Box w='100%' p={4}>\r\n            <Alert status='info'>\r\n              <AlertIcon />\r\n              <AlertTitle mr={2}>Valid Rows</AlertTitle>\r\n              <AlertDescription>\r\n                There are total {mappedSheetDataValid.length}/{sheetData.length}{' '}\r\n                rows which are valid\r\n              </AlertDescription>\r\n              {/* <CloseButton position=\"absolute\" right=\"8px\" top=\"8px\" /> */}\r\n            </Alert>\r\n          </Box>\r\n\r\n          {mappedSheetDataInvalid.length > 0 && (\r\n            <Box w='100%' p={4}>\r\n              <Alert status='error'>\r\n                <AlertIcon />\r\n                <AlertTitle mr={2}>Invalid Rows</AlertTitle>\r\n                <AlertDescription>\r\n                  There are total {mappedSheetDataInvalid.length}/\r\n                  {sheetData.length} rows which are invalid\r\n                </AlertDescription>\r\n                {/* <CloseButton position=\"absolute\" right=\"8px\" top=\"8px\" /> */}\r\n              </Alert>\r\n            </Box>\r\n          )}\r\n          {mappedSheetDataInvalid.length > 0 && (\r\n            <Box w='100%' p={4} style={{ overflowX: 'auto' }}>\r\n              <table\r\n                variant='striped'\r\n                // style={{ backgroundColor: \"teal\" }}\r\n                size='lg'\r\n                className='table-auto border-collapse border border-green-800'\r\n              >\r\n                <thead style={{ backgroundColor: '#1e293b', color: '#ffffff' }}>\r\n                  {/* <tr>\r\n                      {acceptedPartsOnboardingHeaders.map((acceptedHeader, index) => (\r\n                        <th\r\n                          key={index}\r\n                          className=\"px-2 text-center\"\r\n                          style={{ width: '110px', minWidth: '110px' }}\r\n                        >\r\n                          {acceptedHeader}\r\n                        </th>\r\n                      ))}\r\n                    </tr> */}\r\n                  <tr>\r\n                    {Object.keys(mappedSheetDataInvalid[0]).map(\r\n                      (header, index) => {\r\n                        if (\r\n                          header === 'isInvalid' ||\r\n                          header === 'manufacturerId' ||\r\n                          header === 'categoryId'\r\n                        ) {\r\n                        } else {\r\n                          return (\r\n                            <th\r\n                              key={header}\r\n                              className='px-2 text-center'\r\n                              style={{ width: '150px', minWidth: '150px' }}\r\n                            >\r\n                              {header.toUpperCase()}\r\n                            </th>\r\n                          );\r\n                        }\r\n                      },\r\n                    )}\r\n                  </tr>\r\n                </thead>\r\n                <tbody style={{ overflow: 'auto' }}>\r\n                  {mappedSheetDataInvalid.map((row) => {\r\n                    return (\r\n                      <tr key={row.branchName + row.branchCode}>\r\n                        {Object.keys(row).map((header, index) => {\r\n                          if (\r\n                            header === 'isInvalid' ||\r\n                            header === 'gallery' ||\r\n                            header === 'manufacturerId' ||\r\n                            header === 'categoryId'\r\n                          ) {\r\n                          } else {\r\n                            return (\r\n                              <td\r\n                                key={header}\r\n                                className='px-2 text-center'\r\n                                style={{\r\n                                  width: '110px',\r\n                                  minWidth: '110px',\r\n                                  color:\r\n                                    row[header] === 'invalid' ? 'red' : 'black',\r\n                                }}\r\n                              >\r\n                                {row[header] || '....'}\r\n                              </td>\r\n                            );\r\n                          }\r\n                        })}\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </Box>\r\n          )}\r\n        </>\r\n      )}\r\n      <div className='bulkButtonsContainer'>\r\n        <Button\r\n          onClick={handleSubmit(mapOnboardingFields)}\r\n          isLoading={loading}\r\n          style={{\r\n            backgroundColor: '#1e293b',\r\n            color: '#ffffff',\r\n            marginLeft: '10px',\r\n          }}\r\n          disabled={sheetData.length < 1}\r\n        >\r\n          Next\r\n        </Button>\r\n        <Button\r\n          variant='clrBtn'\r\n          type='reset'\r\n          onClick={() => {\r\n            setActiveStep(1);\r\n            acceptedFiles.length = 0;\r\n            acceptedFiles.splice(0, acceptedFiles.length);\r\n            if (inputRef.current) {\r\n              inputRef.current.value = '';\r\n            }\r\n            setSheetData([]);\r\n            setMappedSheetDataValid([]);\r\n            setMappedSheetDataInvalid([]);\r\n            reset(\r\n              {},\r\n              {\r\n                keepDirty: false,\r\n                keepErrors: false,\r\n                keepValues: false,\r\n              },\r\n            );\r\n          }}\r\n        >\r\n          Clear\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withToast(PartBulk);\r\n"]},"metadata":{},"sourceType":"module"}