{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Work\\\\garaaz-distributor\\\\src\\\\components\\\\EmployeeList\\\\EditEmployee.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getBranches, getEmployee, getEmployees, setEmployeeList, updateEmployeeDetail } from './actions';\nimport { Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton, Button, FormControl, FormLabel, Select, useToast } from \"@chakra-ui/react\";\nimport { publicAxios as axios } from '../../axios';\nimport { isEmpty } from 'lodash';\nimport { useHistory } from 'react-router';\nimport { getEmployeeDesignations } from '../EmployeeList/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditEmployee = _ref => {\n  _s();\n\n  let {\n    isOpen,\n    onClose,\n    selectedEmployee,\n    fetchEmployees\n  } = _ref;\n  const dispatch = useDispatch();\n  const auth = useSelector(state => state.auth);\n  const [branches, setBranches] = useState([]);\n  const [updates, setUpdates] = useState({});\n  const [isLoading, setLoading] = useState(false);\n  const [designation, setDesignation] = useState([]);\n  const toast = useToast();\n\n  const editDetails = async () => {\n    setLoading(true);\n    await axios.patch(`/employees/${selectedEmployee._id}`, updates, {\n      headers: {\n        Authorization: auth.authToken\n      }\n    });\n    setLoading(false);\n    fetchEmployees();\n    onClose(); //hist.push('/employees')\n  };\n\n  const getBranchesData = async () => {\n    try {\n      const data = await getBranches(auth);\n      setBranches(data);\n    } catch (error) {\n      toast('Please try again later');\n    }\n  };\n\n  useEffect(() => {\n    getBranchesData();\n\n    (async () => {\n      const designations = await getEmployeeDesignations(auth);\n      setDesignation(Object.values(designations.data));\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onClose: onClose,\n    children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        children: \"Edit Employee Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          id: \"branchName\",\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Branch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"Select Branch\",\n            defaultValue: selectedEmployee.branchId,\n            onChange: data => {\n              setUpdates({ ...updates,\n                branchId: data.target.value\n              });\n            },\n            children: branches === null || branches === void 0 ? void 0 : branches.map(branch => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: branch._id,\n                children: [branch.branchName, \" - \", branch.branchCode]\n              }, branch._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 18\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          id: \"designation\",\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Designation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"Select Designation\",\n            defaultValue: selectedEmployee.designation,\n            onChange: data => {\n              setUpdates({ ...updates,\n                designation: data.target.value\n              });\n            },\n            children: designation.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n              children: item\n            }, item, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 9\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          isLoading: isLoading,\n          disabled: isEmpty(updates),\n          colorScheme: \"blue\",\n          mr: 3,\n          onClick: e => {\n            editDetails();\n          },\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"ghost\",\n          onClick: onClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 3\n  }, this);\n};\n\n_s(EditEmployee, \"bO8k5tcMUhihDKHhgDp5ZevwwU8=\", false, function () {\n  return [useDispatch, useSelector, useToast];\n});\n\n_c = EditEmployee;\nexport default EditEmployee;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditEmployee\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/components/EmployeeList/EditEmployee.js"],"names":["React","useEffect","useState","useDispatch","useSelector","getBranches","getEmployee","getEmployees","setEmployeeList","updateEmployeeDetail","Modal","ModalOverlay","ModalContent","ModalHeader","ModalFooter","ModalBody","ModalCloseButton","Button","FormControl","FormLabel","Select","useToast","publicAxios","axios","isEmpty","useHistory","getEmployeeDesignations","EditEmployee","isOpen","onClose","selectedEmployee","fetchEmployees","dispatch","auth","state","branches","setBranches","updates","setUpdates","isLoading","setLoading","designation","setDesignation","toast","editDetails","patch","_id","headers","Authorization","authToken","getBranchesData","data","error","designations","Object","values","branchId","target","value","map","branch","branchName","branchCode","item","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,YAAnC,EAAiDC,eAAjD,EAAkEC,oBAAlE,QAA8F,WAA9F;AACA,SACCC,KADD,EACQC,YADR,EACsBC,YADtB,EACoCC,WADpC,EACiDC,WADjD,EAC8DC,SAD9D,EACyEC,gBADzE,EAC2FC,MAD3F,EACmGC,WADnG,EACgHC,SADhH,EAC2HC,MAD3H,EACmIC,QADnI,QAEO,kBAFP;AAGA,SAASC,WAAW,IAAIC,KAAxB,QAAqC,aAArC;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,uBAAT,QAAwC,yBAAxC;;;AAEA,MAAMC,YAAY,GAAG,QAA2D;AAAA;;AAAA,MAA1D;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA,gBAAnB;AAAqCC,IAAAA;AAArC,GAA0D;AAC/E,QAAMC,QAAQ,GAAG7B,WAAW,EAA5B;AACA,QAAM8B,IAAI,GAAG7B,WAAW,CAAC8B,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;AACA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BlC,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACmC,OAAD,EAAUC,UAAV,IAAwBpC,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACqC,SAAD,EAAYC,UAAZ,IAA0BtC,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACuC,WAAD,EAAcC,cAAd,IAAgCxC,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAMyC,KAAK,GAAGtB,QAAQ,EAAtB;;AAEA,QAAMuB,WAAW,GAAG,YAAY;AAE/BJ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMjB,KAAK,CAACsB,KAAN,CAAa,cAAaf,gBAAgB,CAACgB,GAAI,EAA/C,EAAkDT,OAAlD,EAA2D;AAChEU,MAAAA,OAAO,EAAE;AACRC,QAAAA,aAAa,EAAEf,IAAI,CAACgB;AADZ;AADuD,KAA3D,CAAN;AAKAT,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAT,IAAAA,cAAc;AACdF,IAAAA,OAAO,GAVwB,CAY/B;AACA,GAbD;;AAcA,QAAMqB,eAAe,GAAG,YAAY;AACnC,QAAI;AACH,YAAMC,IAAI,GAAG,MAAM9C,WAAW,CAAC4B,IAAD,CAA9B;AACAG,MAAAA,WAAW,CAACe,IAAD,CAAX;AACA,KAHD,CAGE,OAAOC,KAAP,EAAc;AACfT,MAAAA,KAAK,CAAC,wBAAD,CAAL;AACA;AACD,GAPD;;AASA1C,EAAAA,SAAS,CAAC,MAAM;AACfiD,IAAAA,eAAe;;AACf,KAAC,YAAY;AACZ,YAAMG,YAAY,GAAG,MAAM3B,uBAAuB,CAACO,IAAD,CAAlD;AACAS,MAAAA,cAAc,CAACY,MAAM,CAACC,MAAP,CAAcF,YAAY,CAACF,IAA3B,CAAD,CAAd;AACE,KAHH;AAIA,GANQ,EAMN,EANM,CAAT;AAQA,sBACC,QAAC,KAAD;AAAO,IAAA,MAAM,EAAEvB,MAAf;AAAuB,IAAA,OAAO,EAAEC,OAAhC;AAAA,4BACC,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,YAAD;AAAA,8BACC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,cAFD,eAGC,QAAC,SAAD;AAAA,gCAEC,QAAC,WAAD;AAAa,UAAA,EAAE,EAAC,YAAhB;AAAA,kCACC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,eAEC,QAAC,MAAD;AAAQ,YAAA,WAAW,EAAC,eAApB;AAAoC,YAAA,YAAY,EAAEC,gBAAgB,CAAC0B,QAAnE;AAA6E,YAAA,QAAQ,EAAGL,IAAD,IAAU;AAChGb,cAAAA,UAAU,CAAC,EAAE,GAAGD,OAAL;AAAcmB,gBAAAA,QAAQ,EAAEL,IAAI,CAACM,MAAL,CAAYC;AAApC,eAAD,CAAV;AACA,aAFD;AAAA,sBAIEvB,QAJF,aAIEA,QAJF,uBAIEA,QAAQ,CAAEwB,GAAV,CAAeC,MAAD,IAAY;AACzB,kCAAQ;AAAyB,gBAAA,KAAK,EAAEA,MAAM,CAACd,GAAvC;AAAA,2BAA6Cc,MAAM,CAACC,UAApD,SAAmED,MAAM,CAACE,UAA1E;AAAA,iBAAaF,MAAM,CAACd,GAApB;AAAA;AAAA;AAAA;AAAA,sBAAR;AACA,aAFD;AAJF;AAAA;AAAA;AAAA;AAAA,kBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD,eAeC,QAAC,WAAD;AAAa,UAAA,EAAE,EAAC,aAAhB;AAA8B,UAAA,SAAS,EAAC,MAAxC;AAAA,kCACC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,eAEC,QAAC,MAAD;AAAQ,YAAA,WAAW,EAAC,oBAApB;AAAyC,YAAA,YAAY,EAAEhB,gBAAgB,CAACW,WAAxE;AAAqF,YAAA,QAAQ,EAAGU,IAAD,IAAU;AACxGb,cAAAA,UAAU,CAAC,EAAE,GAAGD,OAAL;AAAcI,gBAAAA,WAAW,EAAEU,IAAI,CAACM,MAAL,CAAYC;AAAvC,eAAD,CAAV;AACA,aAFD;AAAA,sBAGEjB,WAAW,CAACkB,GAAZ,CAAiBI,IAAD,iBAChB;AAAA,wBAAoBA;AAApB,eAAaA,IAAb;AAAA;AAAA;AAAA;AAAA,oBADA;AAHF;AAAA;AAAA;AAAA;AAAA,kBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfD;AAAA;AAAA;AAAA;AAAA;AAAA,cAHD,eA8BC,QAAC,WAAD;AAAA,gCACC,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAExB,SAAnB;AAA+B,UAAA,QAAQ,EAAEf,OAAO,CAACa,OAAD,CAAhD;AAA2D,UAAA,WAAW,EAAC,MAAvE;AAA8E,UAAA,EAAE,EAAE,CAAlF;AAAqF,UAAA,OAAO,EAAG2B,CAAD,IAAO;AACpGpB,YAAAA,WAAW;AACX,WAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAMC,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,OAAhB;AAAwB,UAAA,OAAO,EAAEf,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAND;AAAA;AAAA;AAAA;AAAA;AAAA,cA9BD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AA4CA,CApFD;;GAAMF,Y;UACYxB,W,EACJC,W,EAKCiB,Q;;;KAPTM,Y;AAqFN,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getBranches, getEmployee, getEmployees, setEmployeeList, updateEmployeeDetail } from './actions'\r\nimport {\r\n\tModal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton, Button, FormControl, FormLabel, Select, useToast,\r\n} from \"@chakra-ui/react\"\r\nimport { publicAxios as axios } from '../../axios'\r\nimport { isEmpty } from 'lodash'\r\nimport { useHistory } from 'react-router'\r\nimport { getEmployeeDesignations } from '../EmployeeList/actions';\r\n\r\nconst EditEmployee = ({ isOpen, onClose, selectedEmployee, fetchEmployees }) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst auth = useSelector(state => state.auth);\r\n\tconst [branches, setBranches] = useState([])\r\n\tconst [updates, setUpdates] = useState({})\r\n\tconst [isLoading, setLoading] = useState(false);\r\n\tconst [designation, setDesignation] = useState([]);\r\n\tconst toast = useToast();\r\n\r\n\tconst editDetails = async () => {\r\n\r\n\t\tsetLoading(true);\r\n\t\tawait axios.patch(`/employees/${selectedEmployee._id}`, updates, {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: auth.authToken,\r\n\t\t\t},\r\n\t\t})\r\n\t\tsetLoading(false);\r\n\t\tfetchEmployees();\r\n\t\tonClose()\r\n\r\n\t\t//hist.push('/employees')\r\n\t}\r\n\tconst getBranchesData = async () => {\r\n\t\ttry {\r\n\t\t\tconst data = await getBranches(auth)\r\n\t\t\tsetBranches(data)\r\n\t\t} catch (error) {\r\n\t\t\ttoast('Please try again later');\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetBranchesData();\r\n\t\t(async () => {\r\n\t\t\tconst designations = await getEmployeeDesignations(auth);\r\n\t\t\tsetDesignation(Object.values(designations.data));\r\n\t\t  })()\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<Modal isOpen={isOpen} onClose={onClose}>\r\n\t\t\t<ModalOverlay />\r\n\t\t\t<ModalContent>\r\n\t\t\t\t<ModalHeader>Edit Employee Details</ModalHeader>\r\n\t\t\t\t<ModalCloseButton />\r\n\t\t\t\t<ModalBody>\r\n\r\n\t\t\t\t\t<FormControl id=\"branchName\">\r\n\t\t\t\t\t\t<FormLabel>Branch</FormLabel>\r\n\t\t\t\t\t\t<Select placeholder=\"Select Branch\" defaultValue={selectedEmployee.branchId} onChange={(data) => {\r\n\t\t\t\t\t\t\tsetUpdates({ ...updates, branchId: data.target.value })\r\n\t\t\t\t\t\t}} >\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tbranches?.map((branch) => {\r\n\t\t\t\t\t\t\t\t\treturn (<option key={branch._id} value={branch._id}>{branch.branchName} - {branch.branchCode}</option>)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t</FormControl>\r\n\r\n\t\t\t\t\t<FormControl id=\"designation\" className=\"mt-4\">\r\n\t\t\t\t\t\t<FormLabel>Designation</FormLabel>\r\n\t\t\t\t\t\t<Select placeholder=\"Select Designation\" defaultValue={selectedEmployee.designation} onChange={(data) => {\r\n\t\t\t\t\t\t\tsetUpdates({ ...updates, designation: data.target.value })\r\n\t\t\t\t\t\t}} >\r\n\t\t\t\t\t\t\t{designation.map((item) => (\r\n\t\t\t\t\t\t\t\t<option key={item}>{item}</option>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t</FormControl>\r\n\r\n\t\t\t\t</ModalBody>\r\n\t\t\t\t<ModalFooter>\r\n\t\t\t\t\t<Button isLoading={isLoading}  disabled={isEmpty(updates)} colorScheme=\"blue\" mr={3} onClick={(e) => {\r\n\t\t\t\t\t\teditDetails()\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t\tSave\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button variant=\"ghost\" onClick={onClose}>Cancel</Button>\r\n\t\t\t\t</ModalFooter>\r\n\t\t\t</ModalContent>\r\n\t\t</Modal>\r\n\t)\r\n}\r\nexport default EditEmployee;"]},"metadata":{},"sourceType":"module"}