{"ast":null,"code":"\"use strict\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ReactImageMagnify = void 0;\n\nconst jsx_runtime_1 = require(\"react/jsx-runtime\");\n\nconst detect_it_1 = require(\"detect-it\");\n\nconst react_1 = require(\"react\");\n\nconst MagnifyContainerPortal_1 = require(\"./MagnifyContainerPortal\");\n\nconst negative_space_1 = require(\"./lens/negative-space\");\n\nconst positive_space_1 = require(\"./lens/positive-space\");\n\nconst DefaultHint_1 = require(\"./hint/DefaultHint\");\n\nconst lens_1 = require(\"./lib/lens\");\n\nconst dimensions_1 = require(\"./lib/dimensions\");\n\nconst CursorPosition_1 = require(\"./CursorPosition\");\n\nconst InPlaceMagnifyContainer_1 = require(\"./InPlaceMagnifyContainer\");\n\nconst styles_1 = require(\"./lib/styles\");\n\nconst utils_1 = require(\"./utils\");\n\nconst constants_1 = require(\"./constants\");\n\nconst ReactImageMagnify = props => {\n  var _a;\n\n  const {\n    activationInteractionHint,\n    activationInteractionMouse = constants_1.INTERACTIONS.hover,\n    activationInteractionTouch = constants_1.INTERACTIONS.press,\n    fadeDurationInMs = 300,\n    hintComponent: HintComponent = DefaultHint_1.DefaultHint,\n    hintProps,\n    isEnabled = true,\n    imageComponent: ImageComponent = 'img',\n    imageProps,\n    lensComponent: LensComponentProp,\n    lensProps,\n    magnifyContainerProps,\n    magnifiedImageComponent,\n    magnifiedImageProps,\n    portalProps: portalPropsProp,\n    shouldUsePositiveSpaceLens = false,\n    style\n  } = props,\n        rest = __rest(props, [\"activationInteractionHint\", \"activationInteractionMouse\", \"activationInteractionTouch\", \"fadeDurationInMs\", \"hintComponent\", \"hintProps\", \"isEnabled\", \"imageComponent\", \"imageProps\", \"lensComponent\", \"lensProps\", \"magnifyContainerProps\", \"magnifiedImageComponent\", \"magnifiedImageProps\", \"portalProps\", \"shouldUsePositiveSpaceLens\", \"style\"]);\n\n  const isZoomClickable = activationInteractionHint === constants_1.INTERACTIONS.click;\n\n  if (activationInteractionHint && activationInteractionMouse === constants_1.INTERACTIONS.click && ((_a = process === null || process === void 0 ? void 0 : process.env) === null || _a === void 0 ? void 0 : _a.NODE_ENV) !== 'production') {\n    // eslint-disable-next-line no-console\n    console.warn(`[ReactImageMagnify]\n        Warning! \"activationInteractionHint\" is set to ${activationInteractionHint} and \"activationInteractionMouse\" is set to ${constants_1.INTERACTIONS.click}.\n        These are incompatible options and may beahve unexpectedly.\n        `);\n  } ///\n  /// Hooks\n  ///\n\n\n  const imageRef = (0, react_1.useRef)(null);\n  const [smallImage, setSmallImage] = (0, react_1.useState)((0, utils_1.resolveSmallImage)(imageProps));\n  const [isMouseDetected, setIsMouseDetected] = (0, react_1.useState)(detect_it_1.primaryInput === constants_1.INPUT_TYPE.mouse);\n  const [isTouchDetected, setIsTouchDetected] = (0, react_1.useState)(detect_it_1.primaryInput === constants_1.INPUT_TYPE.touch);\n  const [imageLoaded, setImageLoaded] = (0, react_1.useState)(false);\n  const [lockedByHintInteraction, setLockedByHintInteraction] = (0, react_1.useState)(isZoomClickable); ///\n  /// Derived data from state\n  ///\n\n  const portalProps = Object.assign(Object.assign({}, portalPropsProp), {\n    placement: (portalPropsProp === null || portalPropsProp === void 0 ? void 0 : portalPropsProp.placement) || (isTouchDetected ? constants_1.MagnifiedImagePosition.OVER : constants_1.MagnifiedImagePosition.AUTO)\n  });\n  const isInPlaceMode = portalProps.placement === constants_1.MagnifiedImagePosition.OVER;\n  const shouldShowLens = !isInPlaceMode && !isTouchDetected; ///\n  /// Memos\n  ///\n\n  const resizeHandler = (0, react_1.useMemo)(() => () => (0, utils_1.setSmallImageDimensionState)(imageRef.current, setSmallImage, imageProps), []);\n  const computedEnlargedImageContainerDimensions = (0, react_1.useMemo)(() => {\n    var _a, _b;\n\n    return {\n      width: (0, dimensions_1.getEnlargedImageContainerDimension)((magnifyContainerProps === null || magnifyContainerProps === void 0 ? void 0 : magnifyContainerProps.width) || constants_1.DEFAULT_MAGNIFY_CONTAINER_WIDTH, ((_a = imageRef === null || imageRef === void 0 ? void 0 : imageRef.current) === null || _a === void 0 ? void 0 : _a.offsetWidth) || smallImage.width || constants_1.DEFAULT_MAGNIFY_CONTAINER_WIDTH, magnifyContainerProps === null || magnifyContainerProps === void 0 ? void 0 : magnifyContainerProps.scale, isInPlaceMode),\n      height: (0, dimensions_1.getEnlargedImageContainerDimension)((magnifyContainerProps === null || magnifyContainerProps === void 0 ? void 0 : magnifyContainerProps.height) || constants_1.DEFAULT_MAGNIFY_CONTAINER_HEIGHT, ((_b = imageRef === null || imageRef === void 0 ? void 0 : imageRef.current) === null || _b === void 0 ? void 0 : _b.offsetHeight) || smallImage.height || constants_1.DEFAULT_MAGNIFY_CONTAINER_HEIGHT, magnifyContainerProps === null || magnifyContainerProps === void 0 ? void 0 : magnifyContainerProps.scale, isInPlaceMode)\n    };\n  }, [magnifyContainerProps, smallImage, isInPlaceMode]);\n  const cursorOffset = (0, react_1.useMemo)(() => (0, lens_1.getLensCursorOffset)((0, utils_1.imageToStrictDimensions)(smallImage, imageRef), magnifiedImageProps, computedEnlargedImageContainerDimensions), [computedEnlargedImageContainerDimensions, magnifiedImageProps, smallImage]); ///\n  /// Effects\n  ///\n\n  (0, react_1.useEffect)(() => {\n    setSmallImage((0, utils_1.resolveSmallImage)(imageProps));\n  }, [imageProps]);\n  (0, react_1.useEffect)(() => {\n    setLockedByHintInteraction(activationInteractionHint === constants_1.INTERACTIONS.click);\n  }, [activationInteractionHint]);\n  (0, react_1.useEffect)(() => {\n    if (!(0, utils_1.isFluid)(imageProps)) {\n      (0, utils_1.setSmallImageDimensionState)(imageRef.current, setSmallImage, imageProps);\n      window.addEventListener('resize', resizeHandler);\n    } else {\n      window.removeEventListener('resize', resizeHandler);\n    }\n\n    return () => window.removeEventListener('resize', resizeHandler); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [imageProps, imageRef]); ///\n  /// Handlers\n  ///\n\n  const generateHintStyle = hintPropsStyle => {\n    const hintStyle = Object.assign({}, hintPropsStyle); // Check and set via if-statements to prevent accidentally overriding existing\n    // styles or styles that are set later\n\n    if (lockedByHintInteraction) {\n      hintStyle.cursor = 'pointer';\n    }\n\n    return hintStyle;\n  };\n\n  const handleDetectedEnvironmentChanged = detectedInputType => {\n    setIsMouseDetected(detectedInputType.isMouseDetected);\n    setIsTouchDetected(detectedInputType.isTouchDetected);\n  };\n\n  const handleHintClick = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    setLockedByHintInteraction(false);\n  };\n\n  const handleHintTouchEnd = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    setLockedByHintInteraction(false);\n  };\n\n  const handleOutsideClick = () => {\n    if (isZoomClickable) {\n      setLockedByHintInteraction(true);\n    }\n  };\n\n  const MemodImageComponent = (0, react_1.useMemo)(() => (0, jsx_runtime_1.jsx)(ImageComponent, Object.assign({}, imageProps, {\n    alt: smallImage.alt,\n    style: (0, styles_1.getSmallImageStyle)(smallImage, imageProps.style),\n    ref: imageRef,\n    onLoad: e => {\n      if (smallImage.onLoad) {\n        smallImage.onLoad(e);\n      }\n\n      if (!(0, utils_1.isFluid)(imageProps)) {\n        (0, utils_1.setSmallImageDimensionState)(imageRef.current, setSmallImage, imageProps);\n      }\n\n      setImageLoaded(true);\n    }\n  }), void 0), [ImageComponent, imageProps, smallImage]);\n  const HintComponentOrNull = activationInteractionHint === constants_1.INTERACTIONS.click || activationInteractionHint === constants_1.INTERACTIONS.hover ? (0, jsx_runtime_1.jsx)(HintComponent, Object.assign({}, hintProps, {\n    hintTextMouse: (hintProps === null || hintProps === void 0 ? void 0 : hintProps.hintTextMouse) || `${(0, utils_1.capitalize)(activationInteractionHint)} to Zoom`,\n    hintTextTouch: (hintProps === null || hintProps === void 0 ? void 0 : hintProps.hintTextTouch) || 'Long-Touch to Zoom',\n    isMouseDetected: isMouseDetected,\n    isTouchDetected: isTouchDetected,\n    style: generateHintStyle(hintProps === null || hintProps === void 0 ? void 0 : hintProps.style),\n    onClick: lockedByHintInteraction ? handleHintClick : undefined,\n    onTouchEnd: lockedByHintInteraction ? handleHintTouchEnd : undefined\n  }), void 0) : null;\n  const LensComponent = LensComponentProp || shouldUsePositiveSpaceLens ? positive_space_1.PositiveSpaceLens : negative_space_1.NegativeSpaceLens;\n  return (0, jsx_runtime_1.jsx)(CursorPosition_1.CursorPosition, Object.assign({\n    shouldStopTouchMovePropagation: true,\n    activationInteractionMouse: activationInteractionMouse,\n    activationInteractionTouch: activationInteractionTouch,\n    isEnabled: isEnabled,\n    style: (0, styles_1.getContainerStyle)(smallImage, style, lockedByHintInteraction),\n    onDetectedEnvironmentChanged: handleDetectedEnvironmentChanged,\n    onOutsideClick: handleOutsideClick\n  }, rest, {\n    children: _ref => {\n      let {\n        position,\n        isActive,\n        isPositionOutside\n      } = _ref;\n      return (0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, {\n        children: [MemodImageComponent, imageLoaded && (0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, {\n          children: [HintComponentOrNull, shouldShowLens && !lockedByHintInteraction && (0, jsx_runtime_1.jsx)(LensComponent, Object.assign({\n            cursorOffset: cursorOffset,\n            fadeDurationInMs: fadeDurationInMs,\n            isActive: isActive,\n            isPositionOutside: isPositionOutside,\n            position: position\n          }, lensProps, {\n            ref: imageRef\n          }), void 0), isInPlaceMode && !lockedByHintInteraction && (0, jsx_runtime_1.jsx)(InPlaceMagnifyContainer_1.InPlaceMagnifyContainer, Object.assign({\n            containerDimensions: computedEnlargedImageContainerDimensions,\n            cursorOffset: cursorOffset,\n            fadeDurationInMs: fadeDurationInMs,\n            isActive: isActive,\n            isPositionOutside: isPositionOutside,\n            imageComponent: magnifiedImageComponent,\n            imageProps: magnifiedImageProps,\n            position: position,\n            sourceImageDimensions: (0, utils_1.imageToStrictDimensions)(smallImage, imageRef)\n          }, magnifyContainerProps), void 0), !isInPlaceMode && !lockedByHintInteraction && (0, jsx_runtime_1.jsx)(MagnifyContainerPortal_1.MagnifyContainerPortal, Object.assign({\n            containerDimensions: computedEnlargedImageContainerDimensions,\n            cursorOffset: cursorOffset,\n            fadeDurationInMs: fadeDurationInMs,\n            isActive: isActive,\n            isPositionOutside: isPositionOutside,\n            imageComponent: magnifiedImageComponent,\n            imageProps: magnifiedImageProps,\n            portalProps: portalProps,\n            position: position,\n            sourceImageDimensions: (0, utils_1.imageToStrictDimensions)(smallImage, imageRef)\n          }, magnifyContainerProps, {\n            ref: imageRef\n          }), void 0)]\n        }, void 0)]\n      }, void 0);\n    }\n  }), void 0);\n};\n\nexports.ReactImageMagnify = ReactImageMagnify;","map":{"version":3,"sources":["../../src/ReactImageMagnify.tsx"],"names":[],"mappings":"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","sourcesContent":["import { primaryInput } from 'detect-it';\nimport {\n    CSSProperties,\n    MouseEvent,\n    SyntheticEvent,\n    TouchEvent,\n    useEffect,\n    useMemo,\n    useRef,\n    useState,\n} from 'react';\n\nimport { MagnifyContainerPortal } from 'src/MagnifyContainerPortal';\nimport { NegativeSpaceLens } from 'src/lens/negative-space';\nimport { PositiveSpaceLens } from 'src/lens/positive-space';\nimport { DefaultHint } from 'src/hint/DefaultHint';\nimport { getLensCursorOffset } from 'src/lib/lens';\nimport { getEnlargedImageContainerDimension } from 'src/lib/dimensions';\nimport { CursorPosition } from 'src/CursorPosition';\nimport { InPlaceMagnifyContainer } from 'src/InPlaceMagnifyContainer';\nimport {\n    getContainerStyle,\n    getSmallImageStyle,\n} from 'src/lib/styles';\nimport {\n    capitalize, imageToStrictDimensions, isFluid, resolveSmallImage, setSmallImageDimensionState,\n} from 'src/utils';\nimport {\n    INPUT_TYPE,\n    INTERACTIONS,\n    DEFAULT_MAGNIFY_CONTAINER_HEIGHT,\n    DEFAULT_MAGNIFY_CONTAINER_WIDTH,\n    MagnifiedImagePosition,\n} from 'src/constants';\nimport type {\n    ImageProps,\n    DetectedInputType,\n    ReactImageMagnifyProps,\n    ContainerDimensions,\n} from 'src/types';\n\nexport const ReactImageMagnify = (props: ReactImageMagnifyProps): JSX.Element => {\n    const {\n        activationInteractionHint,\n        activationInteractionMouse = INTERACTIONS.hover,\n        activationInteractionTouch = INTERACTIONS.press,\n        fadeDurationInMs = 300,\n        hintComponent: HintComponent = DefaultHint,\n        hintProps,\n        isEnabled = true,\n        imageComponent: ImageComponent = 'img',\n        imageProps,\n        lensComponent: LensComponentProp,\n        lensProps,\n        magnifyContainerProps,\n        magnifiedImageComponent,\n        magnifiedImageProps,\n        portalProps: portalPropsProp,\n        shouldUsePositiveSpaceLens = false,\n        style,\n        ...rest\n    } = props;\n    const isZoomClickable = activationInteractionHint === INTERACTIONS.click;\n\n    if (\n        activationInteractionHint\n        && activationInteractionMouse === INTERACTIONS.click\n        && process?.env?.NODE_ENV !== 'production'\n    ) {\n        // eslint-disable-next-line no-console\n        console.warn(`[ReactImageMagnify]\n        Warning! \"activationInteractionHint\" is set to ${activationInteractionHint} and \"activationInteractionMouse\" is set to ${INTERACTIONS.click}.\n        These are incompatible options and may beahve unexpectedly.\n        `);\n    }\n\n    ///\n    /// Hooks\n    ///\n\n    const imageRef = useRef<HTMLImageElement>(null);\n    const [smallImage, setSmallImage] = useState<ImageProps>(resolveSmallImage(imageProps));\n    const [isMouseDetected, setIsMouseDetected] = useState(primaryInput === INPUT_TYPE.mouse);\n    const [isTouchDetected, setIsTouchDetected] = useState(primaryInput === INPUT_TYPE.touch);\n    const [imageLoaded, setImageLoaded] = useState(false);\n    const [lockedByHintInteraction, setLockedByHintInteraction] = useState(isZoomClickable);\n\n    ///\n    /// Derived data from state\n    ///\n\n    const portalProps = {\n        ...portalPropsProp,\n        placement: portalPropsProp?.placement || (isTouchDetected\n            ? MagnifiedImagePosition.OVER\n            : MagnifiedImagePosition.AUTO),\n    };\n    const isInPlaceMode = portalProps.placement === MagnifiedImagePosition.OVER;\n    const shouldShowLens = !isInPlaceMode && !isTouchDetected;\n\n    ///\n    /// Memos\n    ///\n\n    const resizeHandler = useMemo(() => (): void => setSmallImageDimensionState(\n        imageRef.current,\n        setSmallImage,\n        imageProps,\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    ), []);\n\n    const computedEnlargedImageContainerDimensions = useMemo(() => ({\n        width: getEnlargedImageContainerDimension(\n            magnifyContainerProps?.width || DEFAULT_MAGNIFY_CONTAINER_WIDTH,\n            imageRef?.current?.offsetWidth || smallImage.width || DEFAULT_MAGNIFY_CONTAINER_WIDTH,\n            magnifyContainerProps?.scale,\n            isInPlaceMode,\n        ),\n        height: getEnlargedImageContainerDimension(\n            magnifyContainerProps?.height || DEFAULT_MAGNIFY_CONTAINER_HEIGHT,\n            imageRef?.current?.offsetHeight || smallImage.height || DEFAULT_MAGNIFY_CONTAINER_HEIGHT,\n            magnifyContainerProps?.scale,\n            isInPlaceMode,\n        ),\n    } as ContainerDimensions), [magnifyContainerProps, smallImage, isInPlaceMode]);\n\n    const cursorOffset = useMemo(() => getLensCursorOffset(\n        imageToStrictDimensions(smallImage, imageRef),\n        magnifiedImageProps,\n        computedEnlargedImageContainerDimensions,\n    ), [computedEnlargedImageContainerDimensions, magnifiedImageProps, smallImage]);\n\n    ///\n    /// Effects\n    ///\n\n    useEffect(() => {\n        setSmallImage(resolveSmallImage(imageProps));\n    }, [imageProps]);\n\n    useEffect(() => {\n        setLockedByHintInteraction(activationInteractionHint === INTERACTIONS.click);\n    }, [activationInteractionHint]);\n\n    useEffect(() => {\n        if (!isFluid(imageProps)) {\n            setSmallImageDimensionState(imageRef.current, setSmallImage, imageProps);\n\n            window.addEventListener('resize', resizeHandler);\n        } else {\n            window.removeEventListener('resize', resizeHandler);\n        }\n\n        return (): void => window.removeEventListener('resize', resizeHandler);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [imageProps, imageRef]);\n\n    ///\n    /// Handlers\n    ///\n\n    const generateHintStyle = (hintPropsStyle: CSSProperties | undefined): CSSProperties => {\n        const hintStyle = { ...hintPropsStyle };\n\n        // Check and set via if-statements to prevent accidentally overriding existing\n        // styles or styles that are set later\n        if (lockedByHintInteraction) {\n            hintStyle.cursor = 'pointer';\n        }\n\n        return hintStyle;\n    };\n\n    const handleDetectedEnvironmentChanged = (detectedInputType: DetectedInputType): void => {\n        setIsMouseDetected(detectedInputType.isMouseDetected);\n        setIsTouchDetected(detectedInputType.isTouchDetected);\n    };\n\n    const handleHintClick = (e: MouseEvent<unknown>): void => {\n        e.preventDefault();\n        e.stopPropagation();\n        setLockedByHintInteraction(false);\n    };\n\n    const handleHintTouchEnd = (e: TouchEvent<unknown>): void => {\n        e.preventDefault();\n        e.stopPropagation();\n        setLockedByHintInteraction(false);\n    };\n\n    const handleOutsideClick = (): void => {\n        if (isZoomClickable) {\n            setLockedByHintInteraction(true);\n        }\n    };\n\n    const MemodImageComponent = useMemo(() => (\n        <ImageComponent\n            {...imageProps}\n            alt={smallImage.alt}\n            style={getSmallImageStyle(smallImage, imageProps.style)}\n            ref={imageRef}\n            onLoad={(e: SyntheticEvent<HTMLImageElement, Event>): void => {\n                if (smallImage.onLoad) {\n                    smallImage.onLoad(e);\n                }\n\n                if (!isFluid(imageProps)) {\n                    setSmallImageDimensionState(imageRef.current, setSmallImage, imageProps);\n                }\n\n                setImageLoaded(true);\n            }}\n        />\n    ), [ImageComponent, imageProps, smallImage]);\n\n    const HintComponentOrNull = (\n        activationInteractionHint === INTERACTIONS.click\n        || activationInteractionHint === INTERACTIONS.hover\n    ) ? (\n        <HintComponent\n            {...hintProps}\n            hintTextMouse={hintProps?.hintTextMouse || `${capitalize(activationInteractionHint)} to Zoom`}\n            hintTextTouch={hintProps?.hintTextTouch || 'Long-Touch to Zoom'}\n            isMouseDetected={isMouseDetected}\n            isTouchDetected={isTouchDetected}\n            style={generateHintStyle(hintProps?.style)}\n            onClick={lockedByHintInteraction ? handleHintClick : undefined}\n            onTouchEnd={lockedByHintInteraction ? handleHintTouchEnd : undefined}\n        />\n        ) : null;\n\n    const LensComponent = LensComponentProp || shouldUsePositiveSpaceLens ? PositiveSpaceLens : NegativeSpaceLens;\n\n    return (\n        <CursorPosition\n            shouldStopTouchMovePropagation\n            activationInteractionMouse={activationInteractionMouse}\n            activationInteractionTouch={activationInteractionTouch}\n            isEnabled={isEnabled}\n            style={getContainerStyle(smallImage, style, lockedByHintInteraction)}\n            onDetectedEnvironmentChanged={handleDetectedEnvironmentChanged}\n            onOutsideClick={handleOutsideClick}\n            {...rest}\n        >\n            {({ position, isActive, isPositionOutside }): JSX.Element => (\n                <>\n                    {MemodImageComponent}\n                    {imageLoaded && (\n                        <>\n                            {HintComponentOrNull}\n                            {shouldShowLens && !lockedByHintInteraction && (\n                                <LensComponent\n                                    cursorOffset={cursorOffset}\n                                    fadeDurationInMs={fadeDurationInMs}\n                                    isActive={isActive}\n                                    isPositionOutside={isPositionOutside}\n                                    position={position}\n                                    {...lensProps}\n                                    ref={imageRef}\n                                />\n                            )}\n                            {isInPlaceMode && !lockedByHintInteraction && (\n                                <InPlaceMagnifyContainer\n                                    containerDimensions={computedEnlargedImageContainerDimensions}\n                                    cursorOffset={cursorOffset}\n                                    fadeDurationInMs={fadeDurationInMs}\n                                    isActive={isActive}\n                                    isPositionOutside={isPositionOutside}\n                                    imageComponent={magnifiedImageComponent}\n                                    imageProps={magnifiedImageProps}\n                                    position={position}\n                                    sourceImageDimensions={imageToStrictDimensions(smallImage, imageRef)}\n                                    {...magnifyContainerProps}\n                                />\n                            )}\n                            {!isInPlaceMode && !lockedByHintInteraction && (\n                                <MagnifyContainerPortal\n                                    containerDimensions={computedEnlargedImageContainerDimensions}\n                                    cursorOffset={cursorOffset}\n                                    fadeDurationInMs={fadeDurationInMs}\n                                    isActive={isActive}\n                                    isPositionOutside={isPositionOutside}\n                                    imageComponent={magnifiedImageComponent}\n                                    imageProps={magnifiedImageProps}\n                                    portalProps={portalProps}\n                                    position={position}\n                                    sourceImageDimensions={imageToStrictDimensions(smallImage, imageRef)}\n                                    {...magnifyContainerProps}\n                                    ref={imageRef}\n                                />\n                            )}\n                        </>\n                    )}\n                </>\n            )}\n        </CursorPosition>\n    );\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}