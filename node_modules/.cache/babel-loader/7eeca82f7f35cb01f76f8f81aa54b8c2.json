{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Work\\\\garaaz-distributor\\\\src\\\\components\\\\PackDetailsForm\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { useIntl } from 'react-intl';\nimport toast from 'react-hot-toast';\nimport { useSelector } from 'react-redux';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\nimport messages from './messages';\nimport FormactionButtons from '../../utils/FormactionButtons';\nimport CustomInput from '../../utils/Input';\nimport CustomSelect from '../../utils/Select';\nimport { Input } from '@chakra-ui/input';\nimport { Sale_status, Status, Origin } from './constants';\nimport { isUndefined } from 'lodash';\nimport { getPart, addPart, patchPart } from '../../containers/PartAddition/action';\nimport { useHistory } from 'react-router';\nimport { Box } from '@chakra-ui/react';\nimport InputScaffold from '../../utils/InputScaffold';\nimport { Select as SearchSelect } from 'chakra-react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst originObj = [{\n  value: 'OEM',\n  label: 'OEM'\n}, {\n  value: 'OES',\n  label: 'OES'\n}, {\n  value: 'AFTERMARKET',\n  label: 'Aftermarket'\n}];\nconst salesStatusObj = [{\n  value: 'AVAILABLE',\n  label: 'Available'\n}, {\n  value: 'OUT_OF_STOCK',\n  label: 'Out of stock'\n}, {\n  value: 'DISCONTINUED',\n  label: 'Discontinued'\n}, {\n  value: 'NOT_AVAILABLE',\n  label: 'Not Available'\n}, {\n  value: 'OTHER',\n  label: 'Other'\n}];\nconst statusObj = [{\n  value: 'DRAFT',\n  label: 'Draft'\n}, {\n  value: 'PUBLISHED',\n  label: 'Published'\n}];\n\nconst PackDetailsForm = _ref => {\n  _s();\n\n  let {\n    setCurrentPart,\n    currentPart,\n    setActiveStep,\n    isEdit\n  } = _ref;\n  const [origin, setOrigin] = useState({});\n  const [saleStatus, setSaleStatus] = useState({});\n  const [status, setStatus] = useState({});\n  const intl = useIntl();\n  const auth = useSelector(state => state.auth);\n  const history = useHistory();\n  const {\n    register,\n    formState: {\n      errors,\n      isSubmitted\n    },\n    handleSubmit,\n    reset,\n    setValue\n  } = useForm({\n    mode: 'onSubmit'\n  });\n  useEffect(() => {\n    if (!isEmpty(currentPart)) {\n      setValue('packQuantity', get(currentPart, 'packQuantity', isEdit ? currentPart === null || currentPart === void 0 ? void 0 : currentPart.partmaster.partQuantity : currentPart === null || currentPart === void 0 ? void 0 : currentPart.partQuantity));\n      setValue('packSize', get(currentPart, 'packSize', isEdit ? currentPart === null || currentPart === void 0 ? void 0 : currentPart.partmaster.packSize : currentPart === null || currentPart === void 0 ? void 0 : currentPart.packSize));\n      setValue('origin', get(currentPart, 'origin', isEdit ? currentPart === null || currentPart === void 0 ? void 0 : currentPart.partmaster.origin : currentPart === null || currentPart === void 0 ? void 0 : currentPart.origin));\n      setValue('notes', get(currentPart, 'notes', currentPart === null || currentPart === void 0 ? void 0 : currentPart.notes));\n      setValue('saleStatus', get(currentPart, 'saleStatus', currentPart === null || currentPart === void 0 ? void 0 : currentPart.saleStatus));\n      setValue('status', get(currentPart, 'status', currentPart === null || currentPart === void 0 ? void 0 : currentPart.status));\n      setStatus(statusObj.find(itm => itm.value === (currentPart === null || currentPart === void 0 ? void 0 : currentPart.status)));\n      setSaleStatus(salesStatusObj.find(itm => itm.value === (currentPart === null || currentPart === void 0 ? void 0 : currentPart.saleStatus)));\n\n      if (isEdit) {\n        setOrigin(originObj.find(itm => itm.value === (currentPart === null || currentPart === void 0 ? void 0 : currentPart.partmaster.origin)));\n      } else {\n        setOrigin(originObj.find(itm => itm.value === (currentPart === null || currentPart === void 0 ? void 0 : currentPart.origin)));\n      }\n    }\n  }, [currentPart]);\n\n  const handleFormSubmit = async data => {\n    var _saleStatus$value, _status$value;\n\n    data = { //...currentPart,\n      ...data,\n      origin: origin.value,\n      saleStatus: (_saleStatus$value = saleStatus === null || saleStatus === void 0 ? void 0 : saleStatus.value) !== null && _saleStatus$value !== void 0 ? _saleStatus$value : '',\n      status: (_status$value = status === null || status === void 0 ? void 0 : status.value) !== null && _status$value !== void 0 ? _status$value : ''\n    };\n\n    try {\n      if (isUndefined(currentPart === null || currentPart === void 0 ? void 0 : currentPart.partmaster)) {\n        setCurrentPart({ ...currentPart,\n          ...data\n        });\n        setActiveStep(4);\n      } else {\n        delete data.origin;\n        delete data.packQuantity;\n        delete data.packSize;\n        data._id = currentPart._id;\n        await patchPart(auth, data);\n        setCurrentPart(await getPart(auth, currentPart._id));\n        toast(intl.formatMessage(messages.partUpdatedSuccess));\n        history.push('/parts');\n      }\n    } catch (error) {\n      console.log(error);\n      toast(intl.formatMessage(messages.somethingWentWrong));\n    }\n  };\n\n  const onReset = () => {\n    reset({}, {\n      keepDirty: false,\n      keepErrors: false,\n      keepValues: false\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(handleFormSubmit),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"mt-6 mb-2 font-bold\",\n        children: intl.formatMessage(messages.packDetails)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"mb-6 border-b-1 border-blueGray-200\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        flexWrap: \"wrap\",\n        children: [/*#__PURE__*/_jsxDEV(InputScaffold, {\n          isReadOnly: isEdit,\n          width: \"32%\",\n          label: messages.packQuantity,\n          inputName: \"packQuantity\",\n          inputType: \"number\",\n          isRequired: false,\n          errors: errors,\n          requiredLabel: messages.packQuantityRequired,\n          register: register\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputScaffold, {\n          isReadOnly: isEdit,\n          width: \"32%\",\n          label: messages.packSize,\n          inputName: \"packSize\",\n          inputType: \"number\",\n          isRequired: false,\n          errors: errors,\n          requiredLabel: messages.packSizeRequired,\n          register: register\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          width: {\n            base: '100%',\n            lg: '32%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1\",\n            children: intl.formatMessage(messages.selectOrigin)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SearchSelect, {\n            isDisabled: isEdit,\n            style: {\n              width: 320\n            },\n            ...register('origin', {\n              required: true\n            }),\n            value: origin,\n            onChange: e => {\n              setOrigin(e);\n              setValue('origin', e.value); //setValue('originSelect', e);\n            },\n            options: originObj,\n            placeholder: intl.formatMessage(messages.selectOrigin),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), errors && errors.origin && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-youtube-regular text-sm\",\n            children: intl.formatMessage(messages.originRequired)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        mt: {\n          base: 0,\n          lg: 6\n        },\n        mb: 6,\n        flexWrap: \"wrap\",\n        children: [/*#__PURE__*/_jsxDEV(InputScaffold, {\n          width: \"32%\",\n          label: messages.notes,\n          inputName: \"notes\",\n          inputType: \"text\",\n          isRequired: false,\n          errors: errors,\n          requiredLabel: messages.notesRequired,\n          register: register\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          width: {\n            base: '100%',\n            lg: '32%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1\",\n            children: intl.formatMessage(messages.saleStatus)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SearchSelect, {\n            style: {\n              width: 320\n            },\n            ...register('saleStatus', {\n              required: false\n            }),\n            value: saleStatus,\n            onChange: e => {\n              setSaleStatus(e);\n              setValue('saleStatus', e.value); //setValue('saleStatusSelect', e);\n            },\n            options: salesStatusObj,\n            placeholder: intl.formatMessage(messages.SelectSaleStatus),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this), errors && errors.saleStatus && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-youtube-regular text-sm\",\n            children: intl.formatMessage(messages.saleStatusRequired)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          width: {\n            base: '100%',\n            lg: '32%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1\",\n            children: intl.formatMessage(messages.status)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SearchSelect, {\n            style: {\n              width: 320\n            },\n            value: status,\n            ...register('status', {\n              required: false\n            }),\n            onChange: e => {\n              setStatus(e);\n              setValue('status', e.value); //setValue('statusSelect', e);\n            },\n            options: statusObj,\n            placeholder: intl.formatMessage(messages.SelectStatus),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this), errors && errors.status && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-youtube-regular text-sm\",\n            children: intl.formatMessage(messages.saleStatusRequired)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormactionButtons, {\n        saveLabel: messages.saveButtonLabel,\n        onReset: onReset,\n        cancleLabel: messages.cancelButtonLabe\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PackDetailsForm, \"FJiboDeGX0wYJOUO2KXEXU926v0=\", false, function () {\n  return [useIntl, useSelector, useHistory, useForm];\n});\n\n_c = PackDetailsForm;\nPackDetailsForm.propTypes = {\n  packDetails: PropTypes.object\n};\nexport default PackDetailsForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PackDetailsForm\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/components/PackDetailsForm/index.js"],"names":["React","useEffect","useState","PropTypes","useForm","useIntl","toast","useSelector","get","isEmpty","messages","FormactionButtons","CustomInput","CustomSelect","Input","Sale_status","Status","Origin","isUndefined","getPart","addPart","patchPart","useHistory","Box","InputScaffold","Select","SearchSelect","originObj","value","label","salesStatusObj","statusObj","PackDetailsForm","setCurrentPart","currentPart","setActiveStep","isEdit","origin","setOrigin","saleStatus","setSaleStatus","status","setStatus","intl","auth","state","history","register","formState","errors","isSubmitted","handleSubmit","reset","setValue","mode","partmaster","partQuantity","packSize","notes","find","itm","handleFormSubmit","data","packQuantity","_id","formatMessage","partUpdatedSuccess","push","error","console","log","somethingWentWrong","onReset","keepDirty","keepErrors","keepValues","packDetails","packQuantityRequired","packSizeRequired","base","lg","selectOrigin","width","required","e","originRequired","notesRequired","SelectSaleStatus","saleStatusRequired","SelectStatus","saveButtonLabel","cancelButtonLabe","propTypes","object"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useIntl } from 'react-intl';\r\nimport toast from 'react-hot-toast';\r\nimport { useSelector } from 'react-redux';\r\nimport get from 'lodash/get';\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport messages from './messages';\r\nimport FormactionButtons from '../../utils/FormactionButtons';\r\nimport CustomInput from '../../utils/Input';\r\nimport CustomSelect from '../../utils/Select';\r\nimport { Input } from '@chakra-ui/input';\r\nimport { Sale_status, Status, Origin } from './constants';\r\nimport { isUndefined } from 'lodash';\r\nimport {\r\n  getPart,\r\n  addPart,\r\n  patchPart,\r\n} from '../../containers/PartAddition/action';\r\nimport { useHistory } from 'react-router';\r\nimport { Box } from '@chakra-ui/react';\r\nimport InputScaffold from '../../utils/InputScaffold';\r\nimport { Select as SearchSelect } from 'chakra-react-select';\r\n\r\nconst originObj = [\r\n  { value: 'OEM', label: 'OEM' },\r\n  { value: 'OES', label: 'OES' },\r\n  { value: 'AFTERMARKET', label: 'Aftermarket' },\r\n];\r\n\r\nconst salesStatusObj = [\r\n  { value: 'AVAILABLE', label: 'Available' },\r\n  { value: 'OUT_OF_STOCK', label: 'Out of stock' },\r\n  { value: 'DISCONTINUED', label: 'Discontinued' },\r\n  { value: 'NOT_AVAILABLE', label: 'Not Available' },\r\n  { value: 'OTHER', label: 'Other' },\r\n];\r\n\r\nconst statusObj = [\r\n  { value: 'DRAFT', label: 'Draft' },\r\n  { value: 'PUBLISHED', label: 'Published' },\r\n];\r\n\r\nconst PackDetailsForm = ({\r\n  setCurrentPart,\r\n  currentPart,\r\n  setActiveStep,\r\n  isEdit,\r\n}) => {\r\n  const [origin, setOrigin] = useState({});\r\n  const [saleStatus, setSaleStatus] = useState({});\r\n  const [status, setStatus] = useState({});\r\n  const intl = useIntl();\r\n  const auth = useSelector((state) => state.auth);\r\n  const history = useHistory();\r\n  const {\r\n    register,\r\n    formState: { errors, isSubmitted },\r\n    handleSubmit,\r\n    reset,\r\n    setValue,\r\n  } = useForm({\r\n    mode: 'onSubmit',\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!isEmpty(currentPart)) {\r\n      setValue(\r\n        'packQuantity',\r\n        get(\r\n          currentPart,\r\n          'packQuantity',\r\n          isEdit\r\n            ? currentPart?.partmaster.partQuantity\r\n            : currentPart?.partQuantity,\r\n        ),\r\n      );\r\n      setValue(\r\n        'packSize',\r\n        get(\r\n          currentPart,\r\n          'packSize',\r\n          isEdit ? currentPart?.partmaster.packSize : currentPart?.packSize,\r\n        ),\r\n      );\r\n      setValue(\r\n        'origin',\r\n        get(\r\n          currentPart,\r\n          'origin',\r\n          isEdit ? currentPart?.partmaster.origin : currentPart?.origin,\r\n        ),\r\n      );\r\n      setValue('notes', get(currentPart, 'notes', currentPart?.notes));\r\n      setValue(\r\n        'saleStatus',\r\n        get(currentPart, 'saleStatus', currentPart?.saleStatus),\r\n      );\r\n      setValue('status', get(currentPart, 'status', currentPart?.status));\r\n\r\n      setStatus(statusObj.find((itm) => itm.value === currentPart?.status));\r\n      setSaleStatus(\r\n        salesStatusObj.find((itm) => itm.value === currentPart?.saleStatus),\r\n      );\r\n      if(isEdit){\r\n        setOrigin(\r\n          originObj.find((itm) => itm.value === currentPart?.partmaster.origin),\r\n        );\r\n      }else{\r\n        setOrigin(\r\n          originObj.find((itm) => itm.value === currentPart?.origin),\r\n        );\r\n      }\r\n     \r\n    }\r\n  }, [currentPart]);\r\n\r\n  const handleFormSubmit = async (data) => {\r\n    data = {\r\n      //...currentPart,\r\n      ...data,\r\n      origin: origin.value,\r\n      saleStatus: saleStatus?.value ?? '',\r\n      status: status?.value ?? '',\r\n    };\r\n\r\n    try {\r\n      if (isUndefined(currentPart?.partmaster)) {\r\n        setCurrentPart({ ...currentPart, ...data });\r\n\r\n        setActiveStep(4);\r\n      } else {\r\n        delete data.origin;\r\n        delete data.packQuantity;\r\n        delete data.packSize;\r\n\r\n        data._id = currentPart._id;\r\n\r\n        await patchPart(auth, data);\r\n        setCurrentPart(await getPart(auth, currentPart._id));\r\n        toast(intl.formatMessage(messages.partUpdatedSuccess));\r\n\r\n        history.push('/parts');\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast(intl.formatMessage(messages.somethingWentWrong));\r\n    }\r\n  };\r\n  const onReset = () => {\r\n    reset(\r\n      {},\r\n      {\r\n        keepDirty: false,\r\n        keepErrors: false,\r\n        keepValues: false,\r\n      },\r\n    );\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(handleFormSubmit)}>\r\n      <div>\r\n        <h6 className='mt-6 mb-2 font-bold'>\r\n          {intl.formatMessage(messages.packDetails)}\r\n        </h6>\r\n        <hr className='mb-6 border-b-1 border-blueGray-200' />\r\n        <Box display='flex' justifyContent='space-between' flexWrap='wrap'>\r\n          <InputScaffold\r\n            isReadOnly={isEdit}\r\n            width='32%'\r\n            label={messages.packQuantity}\r\n            inputName='packQuantity'\r\n            inputType='number'\r\n            isRequired={false}\r\n            errors={errors}\r\n            requiredLabel={messages.packQuantityRequired}\r\n            register={register}\r\n          />\r\n          <InputScaffold\r\n            isReadOnly={isEdit}\r\n            width='32%'\r\n            label={messages.packSize}\r\n            inputName='packSize'\r\n            inputType='number'\r\n            isRequired={false}\r\n            errors={errors}\r\n            requiredLabel={messages.packSizeRequired}\r\n            register={register}\r\n          />\r\n          {/*  <InputScaffold\r\n            width='32%'\r\n            register={register}\r\n            errors={errors}\r\n            inputName='origin'\r\n            label={messages.origin}\r\n            placeHolder={messages.selectOrigin}\r\n            options={Origin}\r\n            boxSize='4/12'\r\n            required={false}\r\n            requiredLabel={messages.originRequired}\r\n            valueField='value'\r\n            labelField='name'\r\n          /> */}\r\n\r\n          <Box width={{ base: '100%', lg: '32%' }}>\r\n            <label className='block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1'>\r\n              {intl.formatMessage(messages.selectOrigin)}\r\n            </label>\r\n            <SearchSelect\r\n              isDisabled={isEdit}\r\n              style={{\r\n                width: 320,\r\n              }}\r\n              {...register('origin', { required: true })}\r\n              value={origin}\r\n              onChange={(e) => {\r\n                setOrigin(e);\r\n                setValue('origin', e.value);\r\n                //setValue('originSelect', e);\r\n              }}\r\n              options={originObj}\r\n              placeholder={intl.formatMessage(messages.selectOrigin)}\r\n              required\r\n            ></SearchSelect>\r\n            {errors && errors.origin && (\r\n              <span className='text-youtube-regular text-sm'>\r\n                {intl.formatMessage(messages.originRequired)}\r\n              </span>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n        <Box\r\n          display='flex'\r\n          justifyContent='space-between'\r\n          mt={{ base: 0, lg: 6 }}\r\n          mb={6}\r\n          flexWrap='wrap'\r\n        >\r\n          <InputScaffold\r\n            width='32%'\r\n            label={messages.notes}\r\n            inputName='notes'\r\n            inputType='text'\r\n            isRequired={false}\r\n            errors={errors}\r\n            requiredLabel={messages.notesRequired}\r\n            register={register}\r\n          />\r\n          {/* <InputScaffold\r\n            width='32%'\r\n            register={register}\r\n            errors={errors}\r\n            inputName='saleStatus'\r\n            label={messages.saleStatus}\r\n            placeHolder={messages.SelectSaleStatus}\r\n            options={Sale_status}\r\n            boxSize='4/12'\r\n            required={false}\r\n            requiredLabel={messages.saleStatusRequired}\r\n            valueField='value'\r\n            labelField='name'\r\n          /> */}\r\n\r\n          <Box width={{ base: '100%', lg: '32%' }}>\r\n            <label className='block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1'>\r\n              {intl.formatMessage(messages.saleStatus)}\r\n            </label>\r\n            <SearchSelect\r\n              style={{\r\n                width: 320,\r\n              }}\r\n              {...register('saleStatus', { required: false })}\r\n              value={saleStatus}\r\n              onChange={(e) => {\r\n                setSaleStatus(e);\r\n                setValue('saleStatus', e.value);\r\n                //setValue('saleStatusSelect', e);\r\n              }}\r\n              options={salesStatusObj}\r\n              placeholder={intl.formatMessage(messages.SelectSaleStatus)}\r\n              required\r\n            ></SearchSelect>\r\n            {errors && errors.saleStatus && (\r\n              <span className='text-youtube-regular text-sm'>\r\n                {intl.formatMessage(messages.saleStatusRequired)}\r\n              </span>\r\n            )}\r\n          </Box>\r\n\r\n          {/*  <InputScaffold\r\n            width='32%'\r\n            register={register}\r\n            errors={errors}\r\n            inputName='status'\r\n            label={messages.status}\r\n            placeHolder={messages.SelectStatus}\r\n            options={Status}\r\n            boxSize='4/12'\r\n            required={false}\r\n            requiredLabel={messages.saleStatusRequired}\r\n            valueField='value'\r\n            labelField='name'\r\n          /> */}\r\n\r\n          <Box width={{ base: '100%', lg: '32%' }}>\r\n            <label className='block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1'>\r\n              {intl.formatMessage(messages.status)}\r\n            </label>\r\n            <SearchSelect\r\n              style={{\r\n                width: 320,\r\n              }}\r\n              value={status}\r\n              {...register('status', { required: false })}\r\n              onChange={(e) => {\r\n                setStatus(e);\r\n                setValue('status', e.value);\r\n                //setValue('statusSelect', e);\r\n              }}\r\n              options={statusObj}\r\n              placeholder={intl.formatMessage(messages.SelectStatus)}\r\n              required\r\n            ></SearchSelect>\r\n            {errors && errors.status && (\r\n              <span className='text-youtube-regular text-sm'>\r\n                {intl.formatMessage(messages.saleStatusRequired)}\r\n              </span>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n        <FormactionButtons\r\n          saveLabel={messages.saveButtonLabel}\r\n          onReset={onReset}\r\n          cancleLabel={messages.cancelButtonLabe}\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nPackDetailsForm.propTypes = {\r\n  packDetails: PropTypes.object,\r\n};\r\n\r\nexport default PackDetailsForm;\r\n"]},"metadata":{},"sourceType":"module"}