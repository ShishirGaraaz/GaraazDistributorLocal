{"ast":null,"code":"import { publicAxios as axios } from '../../axios';\nimport { GET_ORDER_DETAILS, SET_ORDER_DETAILS } from './constants';\nimport routes from '../../routes';\nimport getURLParams from '../../utils/getURLParams';\nexport const getOrderDetails = async (auth, orderId) => {\n  var _response$data;\n\n  const response = await axios({\n    method: 'GET',\n    url: `${GET_ORDER_DETAILS}/${orderId}`,\n    headers: {\n      Authorization: auth.authToken\n    }\n  });\n  return (_response$data = response.data) !== null && _response$data !== void 0 ? _response$data : {};\n};\nexport const updateOrders = async payload => {\n  var _response$data2;\n\n  const response = await axios({\n    method: 'PATCH',\n    url: `${routes.orderRoute}/${payload.orderId}`,\n    headers: {\n      Authorization: payload.auth.authToken\n    },\n    data: payload.data\n  });\n  return (_response$data2 = response.data) !== null && _response$data2 !== void 0 ? _response$data2 : {};\n};\nexport const setOrderDetails = payload => ({\n  type: SET_ORDER_DETAILS,\n  payload\n});\nexport const completeOrder = async payload => {\n  return await axios({\n    method: 'PATCH',\n    url: `${routes.orderRoute}/${payload.orderId}/complete`,\n    headers: {\n      Authorization: payload.auth.authToken\n    }\n  });\n};\nexport const getQuantityAvailable = async payload => {\n  const params = getURLParams(payload.params);\n  return axios({\n    method: 'GET',\n    url: `${routes.stockAvailabilityRoute}${params}`,\n    headers: {\n      Authorization: payload.auth.authToken\n    }\n  });\n};\nexport const createUnavailableOrder = async payload => {\n  return axios({\n    method: 'POST',\n    url: `${routes.orderRoute}/${payload.orderId}/unavailable-items`,\n    headers: {\n      Authorization: payload.auth.authToken\n    },\n    data: payload.data\n  });\n};\nexport const getSinglePart = async payload => {\n  const params = getURLParams(payload.params);\n  return axios({\n    method: 'GET',\n\n    /* url: `${routes.partRoute}${params}`, */\n    url: `/part/get-product-by-code/${payload.params.partNumber}`,\n    headers: {\n      Authorization: payload.auth.authToken\n    }\n  });\n};\nexport const getInvoiceData = async payload => {\n  return axios({\n    method: 'GET',\n    url: `${routes.orderRoute}/${payload.orderId}/export?option=json`,\n    headers: {\n      Authorization: payload.auth.authToken\n    }\n  });\n};","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/containers/OrderDetails/actions.js"],"names":["publicAxios","axios","GET_ORDER_DETAILS","SET_ORDER_DETAILS","routes","getURLParams","getOrderDetails","auth","orderId","response","method","url","headers","Authorization","authToken","data","updateOrders","payload","orderRoute","setOrderDetails","type","completeOrder","getQuantityAvailable","params","stockAvailabilityRoute","createUnavailableOrder","getSinglePart","partNumber","getInvoiceData"],"mappings":"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","sourcesContent":["import { publicAxios as axios } from '../../axios';\r\nimport { GET_ORDER_DETAILS, SET_ORDER_DETAILS } from './constants';\r\nimport routes from '../../routes';\r\nimport getURLParams from '../../utils/getURLParams';\r\n\r\nexport const getOrderDetails = async (auth, orderId) => {\r\n    const response = await axios({\r\n        method: 'GET',\r\n        url: `${GET_ORDER_DETAILS}/${orderId}`,\r\n        headers: {\r\n            Authorization: auth.authToken\r\n        }\r\n    });\r\n\r\n   return response.data ?? {};\r\n}\r\n\r\nexport const updateOrders = async (payload) => {\r\n    const response = await axios({\r\n        method: 'PATCH',\r\n        url: `${routes.orderRoute}/${payload.orderId}`,\r\n        headers: {\r\n            Authorization: payload.auth.authToken\r\n        },\r\n        data: payload.data\r\n    });\r\n\r\n   return response.data ?? {};\r\n}\r\n\r\n\r\nexport const setOrderDetails = (payload) => ({\r\n    type: SET_ORDER_DETAILS,\r\n    payload\r\n})\r\n\r\n\r\nexport const completeOrder = async (payload) => {\r\n    return await axios({\r\n        method: 'PATCH',\r\n        url: `${routes.orderRoute}/${payload.orderId}/complete`,\r\n        headers: {\r\n            Authorization: payload.auth.authToken\r\n        }\r\n    })\r\n}\r\n\r\nexport const getQuantityAvailable = async (payload) => {\r\n    const params = getURLParams(payload.params);\r\n\r\n    return axios({\r\n        method: 'GET',\r\n        url: `${routes.stockAvailabilityRoute}${params}`,\r\n        headers: {\r\n            Authorization: payload.auth.authToken\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const createUnavailableOrder = async (payload) => {\r\n    return axios({\r\n        method: 'POST',\r\n        url: `${routes.orderRoute}/${payload.orderId}/unavailable-items`,\r\n        headers: {\r\n            Authorization: payload.auth.authToken\r\n        },\r\n        data: payload.data\r\n    })\r\n}\r\n\r\nexport const getSinglePart = async (payload) => {\r\n    const params = getURLParams(payload.params);\r\n\r\n    return axios({\r\n        method: 'GET',\r\n        /* url: `${routes.partRoute}${params}`, */\r\n        url: `/part/get-product-by-code/${payload.params.partNumber}`,\r\n        headers: {\r\n            Authorization: payload.auth.authToken\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const getInvoiceData = async (payload) => {\r\n    return axios({\r\n        method: 'GET',\r\n        url: `${routes.orderRoute}/${payload.orderId}/export?option=json`,\r\n        headers: {\r\n            Authorization: payload.auth.authToken\r\n        }\r\n    })\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}