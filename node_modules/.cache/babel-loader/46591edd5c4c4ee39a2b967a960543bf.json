{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getEnlargedImageContainerDimension = exports.convertPercentageToDecimal = exports.isPercentageFormat = void 0;\n\nfunction isPercentageFormat(val) {\n  return typeof val === 'string' && /^\\d+%$/.test(val);\n}\n\nexports.isPercentageFormat = isPercentageFormat;\n\nfunction convertPercentageToDecimal(percentage) {\n  let denominator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n  const denom = typeof denominator === 'string' ? parseInt(denominator, 10) : denominator;\n  return (typeof percentage === 'string' ? parseInt(percentage, 10) : percentage) / denom;\n}\n\nexports.convertPercentageToDecimal = convertPercentageToDecimal;\n\nfunction getEnlargedImageContainerDimension(containerDimension, smallImageDimension, scale, isInPlaceMode) {\n  var _a;\n\n  if (isInPlaceMode) {\n    return smallImageDimension;\n  }\n\n  if (scale) {\n    if (scale <= 0 && ((_a = process === null || process === void 0 ? void 0 : process.env) === null || _a === void 0 ? void 0 : _a.NODE_ENV) !== 'production') {\n      // eslint-disable-next-line no-console\n      console.warn(`[ReactImageMagnify]\n                Warning! \"scale\" cannot be 0 or less (found ${scale}). Defaulting to 0.5.\n            `); // eslint-disable-next-line no-param-reassign\n\n      scale = 0.5;\n    }\n\n    return (isPercentageFormat(smallImageDimension) ? convertPercentageToDecimal(smallImageDimension) : smallImageDimension) * scale;\n  }\n\n  if (isPercentageFormat(containerDimension)) {\n    return isPercentageFormat(smallImageDimension) ? convertPercentageToDecimal(smallImageDimension, containerDimension) : smallImageDimension * convertPercentageToDecimal(containerDimension);\n  }\n\n  return containerDimension;\n}\n\nexports.getEnlargedImageContainerDimension = getEnlargedImageContainerDimension;","map":{"version":3,"sources":["../../../src/lib/dimensions.ts"],"names":[],"mappings":";;;;;;;AAAA,SAAgB,kBAAhB,CAAmC,GAAnC,EAAuD;AACnD,SACI,OAAO,GAAP,KAAe,QAAf,IACG,SAAS,IAAT,CAAc,GAAd,CAFP;AAIH;;AALD,OAAA,CAAA,kBAAA,GAAA,kBAAA;;AAOA,SAAgB,0BAAhB,CAA2C,UAA3C,EAA0G;AAAA,MAAlC,WAAkC,uEAAH,GAAG;AACtG,QAAM,KAAK,GAAG,OAAO,WAAP,KAAuB,QAAvB,GAAkC,QAAQ,CAAC,WAAD,EAAc,EAAd,CAA1C,GAA8D,WAA5E;AAEA,SAAO,CAAC,OAAO,UAAP,KAAsB,QAAtB,GAAiC,QAAQ,CAAC,UAAD,EAAa,EAAb,CAAzC,GAA4D,UAA7D,IAA2E,KAAlF;AACH;;AAJD,OAAA,CAAA,0BAAA,GAAA,0BAAA;;AAMA,SAAgB,kCAAhB,CACI,kBADJ,EAEI,mBAFJ,EAGI,KAHJ,EAII,aAJJ,EAIsC;;;AAElC,MAAI,aAAJ,EAAmB;AACf,WAAO,mBAAP;AACH;;AAED,MAAI,KAAJ,EAAW;AACP,QAAI,KAAK,IAAI,CAAT,IAAc,CAAA,CAAA,EAAA,GAAA,OAAO,KAAA,IAAP,IAAA,OAAO,KAAA,KAAA,CAAP,GAAO,KAAA,CAAP,GAAA,OAAO,CAAE,GAAT,MAAY,IAAZ,IAAY,EAAA,KAAA,KAAA,CAAZ,GAAY,KAAA,CAAZ,GAAY,EAAA,CAAE,QAAd,MAA2B,YAA7C,EAA2D;AACvD;AACA,MAAA,OAAO,CAAC,IAAR,CAAa;8DACqC,KAAK;AACtD,aAFD,EAFuD,CAMvD;;AACA,MAAA,KAAK,GAAG,GAAR;AACH;;AAED,WAAO,CAAC,kBAAkB,CAAC,mBAAD,CAAlB,GACF,0BAA0B,CAAC,mBAAD,CADxB,GAEF,mBAFC,IAGD,KAHN;AAIH;;AAED,MAAI,kBAAkB,CAAC,kBAAD,CAAtB,EAA4C;AACxC,WAAO,kBAAkB,CAAC,mBAAD,CAAlB,GACD,0BAA0B,CAAC,mBAAD,EAAsB,kBAAtB,CADzB,GAED,mBAA6B,GAAG,0BAA0B,CAAC,kBAAD,CAFhE;AAGH;;AAED,SAAO,kBAAP;AACH;;AAlCD,OAAA,CAAA,kCAAA,GAAA,kCAAA","sourcesContent":["export function isPercentageFormat(val: string | number): boolean {\n    return (\n        typeof val === 'string'\n        && /^\\d+%$/.test(val)\n    );\n}\n\nexport function convertPercentageToDecimal(percentage: string | number, denominator: string | number = 100): number {\n    const denom = typeof denominator === 'string' ? parseInt(denominator, 10) : denominator;\n\n    return (typeof percentage === 'string' ? parseInt(percentage, 10) : percentage) / denom;\n}\n\nexport function getEnlargedImageContainerDimension(\n    containerDimension: string | number,\n    smallImageDimension: string | number,\n    scale: number | undefined,\n    isInPlaceMode: boolean | undefined,\n): string | number {\n    if (isInPlaceMode) {\n        return smallImageDimension;\n    }\n\n    if (scale) {\n        if (scale <= 0 && process?.env?.NODE_ENV !== 'production') {\n            // eslint-disable-next-line no-console\n            console.warn(`[ReactImageMagnify]\n                Warning! \"scale\" cannot be 0 or less (found ${scale}). Defaulting to 0.5.\n            `);\n\n            // eslint-disable-next-line no-param-reassign\n            scale = 0.5;\n        }\n\n        return (isPercentageFormat(smallImageDimension)\n            ? convertPercentageToDecimal(smallImageDimension)\n            : smallImageDimension as number)\n            * scale;\n    }\n\n    if (isPercentageFormat(containerDimension)) {\n        return isPercentageFormat(smallImageDimension)\n            ? convertPercentageToDecimal(smallImageDimension, containerDimension)\n            : smallImageDimension as number * convertPercentageToDecimal(containerDimension);\n    }\n\n    return containerDimension as number;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}