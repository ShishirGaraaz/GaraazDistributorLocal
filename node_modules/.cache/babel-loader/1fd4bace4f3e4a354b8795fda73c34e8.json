{"ast":null,"code":"import { Factory } from '../Factory.js';\nimport { Node } from '../Node.js';\nimport { Util } from '../Util.js';\nimport { getNumberValidator } from '../Validators.js';\nexport const Emboss = function (imageData) {\n  var strength = this.embossStrength() * 10,\n      greyLevel = this.embossWhiteLevel() * 255,\n      direction = this.embossDirection(),\n      blend = this.embossBlend(),\n      dirY = 0,\n      dirX = 0,\n      data = imageData.data,\n      w = imageData.width,\n      h = imageData.height,\n      w4 = w * 4,\n      y = h;\n\n  switch (direction) {\n    case 'top-left':\n      dirY = -1;\n      dirX = -1;\n      break;\n\n    case 'top':\n      dirY = -1;\n      dirX = 0;\n      break;\n\n    case 'top-right':\n      dirY = -1;\n      dirX = 1;\n      break;\n\n    case 'right':\n      dirY = 0;\n      dirX = 1;\n      break;\n\n    case 'bottom-right':\n      dirY = 1;\n      dirX = 1;\n      break;\n\n    case 'bottom':\n      dirY = 1;\n      dirX = 0;\n      break;\n\n    case 'bottom-left':\n      dirY = 1;\n      dirX = -1;\n      break;\n\n    case 'left':\n      dirY = 0;\n      dirX = -1;\n      break;\n\n    default:\n      Util.error('Unknown emboss direction: ' + direction);\n  }\n\n  do {\n    var offsetY = (y - 1) * w4;\n    var otherY = dirY;\n\n    if (y + otherY < 1) {\n      otherY = 0;\n    }\n\n    if (y + otherY > h) {\n      otherY = 0;\n    }\n\n    var offsetYOther = (y - 1 + otherY) * w * 4;\n    var x = w;\n\n    do {\n      var offset = offsetY + (x - 1) * 4;\n      var otherX = dirX;\n\n      if (x + otherX < 1) {\n        otherX = 0;\n      }\n\n      if (x + otherX > w) {\n        otherX = 0;\n      }\n\n      var offsetOther = offsetYOther + (x - 1 + otherX) * 4;\n      var dR = data[offset] - data[offsetOther];\n      var dG = data[offset + 1] - data[offsetOther + 1];\n      var dB = data[offset + 2] - data[offsetOther + 2];\n      var dif = dR;\n      var absDif = dif > 0 ? dif : -dif;\n      var absG = dG > 0 ? dG : -dG;\n      var absB = dB > 0 ? dB : -dB;\n\n      if (absG > absDif) {\n        dif = dG;\n      }\n\n      if (absB > absDif) {\n        dif = dB;\n      }\n\n      dif *= strength;\n\n      if (blend) {\n        var r = data[offset] + dif;\n        var g = data[offset + 1] + dif;\n        var b = data[offset + 2] + dif;\n        data[offset] = r > 255 ? 255 : r < 0 ? 0 : r;\n        data[offset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n        data[offset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n      } else {\n        var grey = greyLevel - dif;\n\n        if (grey < 0) {\n          grey = 0;\n        } else if (grey > 255) {\n          grey = 255;\n        }\n\n        data[offset] = data[offset + 1] = data[offset + 2] = grey;\n      }\n    } while (--x);\n  } while (--y);\n};\nFactory.addGetterSetter(Node, 'embossStrength', 0.5, getNumberValidator(), Factory.afterSetFilter);\nFactory.addGetterSetter(Node, 'embossWhiteLevel', 0.5, getNumberValidator(), Factory.afterSetFilter);\nFactory.addGetterSetter(Node, 'embossDirection', 'top-left', null, Factory.afterSetFilter);\nFactory.addGetterSetter(Node, 'embossBlend', false, null, Factory.afterSetFilter);","map":{"version":3,"sources":["../../src/filters/Emboss.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { Factory } from '../Factory.js';\nimport { Node } from '../Node.js';\nimport { Util } from '../Util.js';\nimport { getNumberValidator } from '../Validators.js';\nexport const Emboss = function (imageData) {\n    var strength = this.embossStrength() * 10, greyLevel = this.embossWhiteLevel() * 255, direction = this.embossDirection(), blend = this.embossBlend(), dirY = 0, dirX = 0, data = imageData.data, w = imageData.width, h = imageData.height, w4 = w * 4, y = h;\n    switch (direction) {\n        case 'top-left':\n            dirY = -1;\n            dirX = -1;\n            break;\n        case 'top':\n            dirY = -1;\n            dirX = 0;\n            break;\n        case 'top-right':\n            dirY = -1;\n            dirX = 1;\n            break;\n        case 'right':\n            dirY = 0;\n            dirX = 1;\n            break;\n        case 'bottom-right':\n            dirY = 1;\n            dirX = 1;\n            break;\n        case 'bottom':\n            dirY = 1;\n            dirX = 0;\n            break;\n        case 'bottom-left':\n            dirY = 1;\n            dirX = -1;\n            break;\n        case 'left':\n            dirY = 0;\n            dirX = -1;\n            break;\n        default:\n            Util.error('Unknown emboss direction: ' + direction);\n    }\n    do {\n        var offsetY = (y - 1) * w4;\n        var otherY = dirY;\n        if (y + otherY < 1) {\n            otherY = 0;\n        }\n        if (y + otherY > h) {\n            otherY = 0;\n        }\n        var offsetYOther = (y - 1 + otherY) * w * 4;\n        var x = w;\n        do {\n            var offset = offsetY + (x - 1) * 4;\n            var otherX = dirX;\n            if (x + otherX < 1) {\n                otherX = 0;\n            }\n            if (x + otherX > w) {\n                otherX = 0;\n            }\n            var offsetOther = offsetYOther + (x - 1 + otherX) * 4;\n            var dR = data[offset] - data[offsetOther];\n            var dG = data[offset + 1] - data[offsetOther + 1];\n            var dB = data[offset + 2] - data[offsetOther + 2];\n            var dif = dR;\n            var absDif = dif > 0 ? dif : -dif;\n            var absG = dG > 0 ? dG : -dG;\n            var absB = dB > 0 ? dB : -dB;\n            if (absG > absDif) {\n                dif = dG;\n            }\n            if (absB > absDif) {\n                dif = dB;\n            }\n            dif *= strength;\n            if (blend) {\n                var r = data[offset] + dif;\n                var g = data[offset + 1] + dif;\n                var b = data[offset + 2] + dif;\n                data[offset] = r > 255 ? 255 : r < 0 ? 0 : r;\n                data[offset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n                data[offset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n            }\n            else {\n                var grey = greyLevel - dif;\n                if (grey < 0) {\n                    grey = 0;\n                }\n                else if (grey > 255) {\n                    grey = 255;\n                }\n                data[offset] = data[offset + 1] = data[offset + 2] = grey;\n            }\n        } while (--x);\n    } while (--y);\n};\nFactory.addGetterSetter(Node, 'embossStrength', 0.5, getNumberValidator(), Factory.afterSetFilter);\nFactory.addGetterSetter(Node, 'embossWhiteLevel', 0.5, getNumberValidator(), Factory.afterSetFilter);\nFactory.addGetterSetter(Node, 'embossDirection', 'top-left', null, Factory.afterSetFilter);\nFactory.addGetterSetter(Node, 'embossBlend', false, null, Factory.afterSetFilter);\n//# sourceMappingURL=Emboss.js.map"]},"metadata":{},"sourceType":"module"}