{"ast":null,"code":"import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { Group } from '../Group.js';\nimport { getNumberOrArrayOfNumbersValidator, getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nvar ATTR_CHANGE_LIST = ['fontFamily', 'fontSize', 'fontStyle', 'padding', 'lineHeight', 'text', 'width', 'height'],\n    CHANGE_KONVA = 'Change.konva',\n    NONE = 'none',\n    UP = 'up',\n    RIGHT = 'right',\n    DOWN = 'down',\n    LEFT = 'left',\n    attrChangeListLen = ATTR_CHANGE_LIST.length;\nexport class Label extends Group {\n  constructor(config) {\n    super(config);\n    this.on('add.konva', function (evt) {\n      this._addListeners(evt.child);\n\n      this._sync();\n    });\n  }\n\n  getText() {\n    return this.find('Text')[0];\n  }\n\n  getTag() {\n    return this.find('Tag')[0];\n  }\n\n  _addListeners(text) {\n    var that = this,\n        n;\n\n    var func = function () {\n      that._sync();\n    };\n\n    for (n = 0; n < attrChangeListLen; n++) {\n      text.on(ATTR_CHANGE_LIST[n] + CHANGE_KONVA, func);\n    }\n  }\n\n  getWidth() {\n    return this.getText().width();\n  }\n\n  getHeight() {\n    return this.getText().height();\n  }\n\n  _sync() {\n    var text = this.getText(),\n        tag = this.getTag(),\n        width,\n        height,\n        pointerDirection,\n        pointerWidth,\n        x,\n        y,\n        pointerHeight;\n\n    if (text && tag) {\n      width = text.width();\n      height = text.height();\n      pointerDirection = tag.pointerDirection();\n      pointerWidth = tag.pointerWidth();\n      pointerHeight = tag.pointerHeight();\n      x = 0;\n      y = 0;\n\n      switch (pointerDirection) {\n        case UP:\n          x = width / 2;\n          y = -1 * pointerHeight;\n          break;\n\n        case RIGHT:\n          x = width + pointerWidth;\n          y = height / 2;\n          break;\n\n        case DOWN:\n          x = width / 2;\n          y = height + pointerHeight;\n          break;\n\n        case LEFT:\n          x = -1 * pointerWidth;\n          y = height / 2;\n          break;\n      }\n\n      tag.setAttrs({\n        x: -1 * x,\n        y: -1 * y,\n        width: width,\n        height: height\n      });\n      text.setAttrs({\n        x: -1 * x,\n        y: -1 * y\n      });\n    }\n  }\n\n}\nLabel.prototype.className = 'Label';\n\n_registerNode(Label);\n\nexport class Tag extends Shape {\n  _sceneFunc(context) {\n    var width = this.width(),\n        height = this.height(),\n        pointerDirection = this.pointerDirection(),\n        pointerWidth = this.pointerWidth(),\n        pointerHeight = this.pointerHeight(),\n        cornerRadius = this.cornerRadius();\n    let topLeft = 0;\n    let topRight = 0;\n    let bottomLeft = 0;\n    let bottomRight = 0;\n\n    if (typeof cornerRadius === 'number') {\n      topLeft = topRight = bottomLeft = bottomRight = Math.min(cornerRadius, width / 2, height / 2);\n    } else {\n      topLeft = Math.min(cornerRadius[0] || 0, width / 2, height / 2);\n      topRight = Math.min(cornerRadius[1] || 0, width / 2, height / 2);\n      bottomRight = Math.min(cornerRadius[2] || 0, width / 2, height / 2);\n      bottomLeft = Math.min(cornerRadius[3] || 0, width / 2, height / 2);\n    }\n\n    context.beginPath();\n    context.moveTo(topLeft, 0);\n\n    if (pointerDirection === UP) {\n      context.lineTo((width - pointerWidth) / 2, 0);\n      context.lineTo(width / 2, -1 * pointerHeight);\n      context.lineTo((width + pointerWidth) / 2, 0);\n    }\n\n    context.lineTo(width - topRight, 0);\n    context.arc(width - topRight, topRight, topRight, Math.PI * 3 / 2, 0, false);\n\n    if (pointerDirection === RIGHT) {\n      context.lineTo(width, (height - pointerHeight) / 2);\n      context.lineTo(width + pointerWidth, height / 2);\n      context.lineTo(width, (height + pointerHeight) / 2);\n    }\n\n    context.lineTo(width, height - bottomRight);\n    context.arc(width - bottomRight, height - bottomRight, bottomRight, 0, Math.PI / 2, false);\n\n    if (pointerDirection === DOWN) {\n      context.lineTo((width + pointerWidth) / 2, height);\n      context.lineTo(width / 2, height + pointerHeight);\n      context.lineTo((width - pointerWidth) / 2, height);\n    }\n\n    context.lineTo(bottomLeft, height);\n    context.arc(bottomLeft, height - bottomLeft, bottomLeft, Math.PI / 2, Math.PI, false);\n\n    if (pointerDirection === LEFT) {\n      context.lineTo(0, (height + pointerHeight) / 2);\n      context.lineTo(-1 * pointerWidth, height / 2);\n      context.lineTo(0, (height - pointerHeight) / 2);\n    }\n\n    context.lineTo(0, topLeft);\n    context.arc(topLeft, topLeft, topLeft, Math.PI, Math.PI * 3 / 2, false);\n    context.closePath();\n    context.fillStrokeShape(this);\n  }\n\n  getSelfRect() {\n    var x = 0,\n        y = 0,\n        pointerWidth = this.pointerWidth(),\n        pointerHeight = this.pointerHeight(),\n        direction = this.pointerDirection(),\n        width = this.width(),\n        height = this.height();\n\n    if (direction === UP) {\n      y -= pointerHeight;\n      height += pointerHeight;\n    } else if (direction === DOWN) {\n      height += pointerHeight;\n    } else if (direction === LEFT) {\n      x -= pointerWidth * 1.5;\n      width += pointerWidth;\n    } else if (direction === RIGHT) {\n      width += pointerWidth * 1.5;\n    }\n\n    return {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    };\n  }\n\n}\nTag.prototype.className = 'Tag';\n\n_registerNode(Tag);\n\nFactory.addGetterSetter(Tag, 'pointerDirection', NONE);\nFactory.addGetterSetter(Tag, 'pointerWidth', 0, getNumberValidator());\nFactory.addGetterSetter(Tag, 'pointerHeight', 0, getNumberValidator());\nFactory.addGetterSetter(Tag, 'cornerRadius', 0, getNumberOrArrayOfNumbersValidator(4));","map":{"version":3,"sources":["../../src/shapes/Label.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { Group } from '../Group.js';\nimport { getNumberOrArrayOfNumbersValidator, getNumberValidator, } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nvar ATTR_CHANGE_LIST = [\n    'fontFamily',\n    'fontSize',\n    'fontStyle',\n    'padding',\n    'lineHeight',\n    'text',\n    'width',\n    'height',\n], CHANGE_KONVA = 'Change.konva', NONE = 'none', UP = 'up', RIGHT = 'right', DOWN = 'down', LEFT = 'left', attrChangeListLen = ATTR_CHANGE_LIST.length;\nexport class Label extends Group {\n    constructor(config) {\n        super(config);\n        this.on('add.konva', function (evt) {\n            this._addListeners(evt.child);\n            this._sync();\n        });\n    }\n    getText() {\n        return this.find('Text')[0];\n    }\n    getTag() {\n        return this.find('Tag')[0];\n    }\n    _addListeners(text) {\n        var that = this, n;\n        var func = function () {\n            that._sync();\n        };\n        for (n = 0; n < attrChangeListLen; n++) {\n            text.on(ATTR_CHANGE_LIST[n] + CHANGE_KONVA, func);\n        }\n    }\n    getWidth() {\n        return this.getText().width();\n    }\n    getHeight() {\n        return this.getText().height();\n    }\n    _sync() {\n        var text = this.getText(), tag = this.getTag(), width, height, pointerDirection, pointerWidth, x, y, pointerHeight;\n        if (text && tag) {\n            width = text.width();\n            height = text.height();\n            pointerDirection = tag.pointerDirection();\n            pointerWidth = tag.pointerWidth();\n            pointerHeight = tag.pointerHeight();\n            x = 0;\n            y = 0;\n            switch (pointerDirection) {\n                case UP:\n                    x = width / 2;\n                    y = -1 * pointerHeight;\n                    break;\n                case RIGHT:\n                    x = width + pointerWidth;\n                    y = height / 2;\n                    break;\n                case DOWN:\n                    x = width / 2;\n                    y = height + pointerHeight;\n                    break;\n                case LEFT:\n                    x = -1 * pointerWidth;\n                    y = height / 2;\n                    break;\n            }\n            tag.setAttrs({\n                x: -1 * x,\n                y: -1 * y,\n                width: width,\n                height: height,\n            });\n            text.setAttrs({\n                x: -1 * x,\n                y: -1 * y,\n            });\n        }\n    }\n}\nLabel.prototype.className = 'Label';\n_registerNode(Label);\nexport class Tag extends Shape {\n    _sceneFunc(context) {\n        var width = this.width(), height = this.height(), pointerDirection = this.pointerDirection(), pointerWidth = this.pointerWidth(), pointerHeight = this.pointerHeight(), cornerRadius = this.cornerRadius();\n        let topLeft = 0;\n        let topRight = 0;\n        let bottomLeft = 0;\n        let bottomRight = 0;\n        if (typeof cornerRadius === 'number') {\n            topLeft = topRight = bottomLeft = bottomRight = Math.min(cornerRadius, width / 2, height / 2);\n        }\n        else {\n            topLeft = Math.min(cornerRadius[0] || 0, width / 2, height / 2);\n            topRight = Math.min(cornerRadius[1] || 0, width / 2, height / 2);\n            bottomRight = Math.min(cornerRadius[2] || 0, width / 2, height / 2);\n            bottomLeft = Math.min(cornerRadius[3] || 0, width / 2, height / 2);\n        }\n        context.beginPath();\n        context.moveTo(topLeft, 0);\n        if (pointerDirection === UP) {\n            context.lineTo((width - pointerWidth) / 2, 0);\n            context.lineTo(width / 2, -1 * pointerHeight);\n            context.lineTo((width + pointerWidth) / 2, 0);\n        }\n        context.lineTo(width - topRight, 0);\n        context.arc(width - topRight, topRight, topRight, (Math.PI * 3) / 2, 0, false);\n        if (pointerDirection === RIGHT) {\n            context.lineTo(width, (height - pointerHeight) / 2);\n            context.lineTo(width + pointerWidth, height / 2);\n            context.lineTo(width, (height + pointerHeight) / 2);\n        }\n        context.lineTo(width, height - bottomRight);\n        context.arc(width - bottomRight, height - bottomRight, bottomRight, 0, Math.PI / 2, false);\n        if (pointerDirection === DOWN) {\n            context.lineTo((width + pointerWidth) / 2, height);\n            context.lineTo(width / 2, height + pointerHeight);\n            context.lineTo((width - pointerWidth) / 2, height);\n        }\n        context.lineTo(bottomLeft, height);\n        context.arc(bottomLeft, height - bottomLeft, bottomLeft, Math.PI / 2, Math.PI, false);\n        if (pointerDirection === LEFT) {\n            context.lineTo(0, (height + pointerHeight) / 2);\n            context.lineTo(-1 * pointerWidth, height / 2);\n            context.lineTo(0, (height - pointerHeight) / 2);\n        }\n        context.lineTo(0, topLeft);\n        context.arc(topLeft, topLeft, topLeft, Math.PI, (Math.PI * 3) / 2, false);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getSelfRect() {\n        var x = 0, y = 0, pointerWidth = this.pointerWidth(), pointerHeight = this.pointerHeight(), direction = this.pointerDirection(), width = this.width(), height = this.height();\n        if (direction === UP) {\n            y -= pointerHeight;\n            height += pointerHeight;\n        }\n        else if (direction === DOWN) {\n            height += pointerHeight;\n        }\n        else if (direction === LEFT) {\n            x -= pointerWidth * 1.5;\n            width += pointerWidth;\n        }\n        else if (direction === RIGHT) {\n            width += pointerWidth * 1.5;\n        }\n        return {\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n        };\n    }\n}\nTag.prototype.className = 'Tag';\n_registerNode(Tag);\nFactory.addGetterSetter(Tag, 'pointerDirection', NONE);\nFactory.addGetterSetter(Tag, 'pointerWidth', 0, getNumberValidator());\nFactory.addGetterSetter(Tag, 'pointerHeight', 0, getNumberValidator());\nFactory.addGetterSetter(Tag, 'cornerRadius', 0, getNumberOrArrayOfNumbersValidator(4));\n//# sourceMappingURL=Label.js.map"]},"metadata":{},"sourceType":"module"}