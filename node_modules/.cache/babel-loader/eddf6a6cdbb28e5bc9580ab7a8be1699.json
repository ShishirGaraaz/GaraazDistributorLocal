{"ast":null,"code":"\"use strict\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CursorPosition = void 0;\n\nconst jsx_runtime_1 = require(\"react/jsx-runtime\");\n\nconst react_1 = require(\"react\");\n\nconst resize_observer_1 = __importDefault(require(\"@react-hook/resize-observer\"));\n\nconst constants_1 = require(\"./constants\");\n\nconst utils_1 = require(\"./utils\");\n\nconst TouchActivation_1 = require(\"./lib/TouchActivation\");\n\nconst HoverActivation_1 = require(\"./lib/HoverActivation\");\n\nconst ClickActivation_1 = require(\"./lib/ClickActivation\");\n\nconst TapActivation_1 = require(\"./lib/TapActivation\");\n\nconst PressActivation_1 = require(\"./lib/PressActivation\");\n\nconst RelativeCursorPositionObserver_1 = require(\"./lib/RelativeCursorPositionObserver\"); // TODO move to utils\n\n\nconst getTouchActivationStrategy = (interaction, onIsActiveChanged, pressDurationInMs, pressMoveThreshold, tapDurationInMs, tapMoveThreshold) => {\n  const {\n    touch,\n    tap,\n    press\n  } = constants_1.INTERACTIONS;\n\n  switch (interaction) {\n    case press:\n      return new PressActivation_1.PressActivation({\n        onIsActiveChanged,\n        pressDurationInMs,\n        pressMoveThreshold\n      });\n\n    case tap:\n      return new TapActivation_1.TapActivation({\n        onIsActiveChanged,\n        tapDurationInMs,\n        tapMoveThreshold\n      });\n\n    case touch:\n      return new TouchActivation_1.TouchActivation({\n        onIsActiveChanged\n      });\n\n    default:\n      throw new Error('Must implement a touch activation strategy');\n  }\n};\n\nconst getMouseActivationStrategy = (interaction, onIsActiveChanged, hoverDelayInMs, hoverOffDelayInMs) => {\n  const {\n    hover,\n    click\n  } = constants_1.INTERACTIONS;\n\n  switch (interaction) {\n    case hover:\n      return new HoverActivation_1.HoverActivation({\n        onIsActiveChanged,\n        hoverDelayInMs,\n        hoverOffDelayInMs\n      });\n\n    case click:\n      return new ClickActivation_1.ClickActivation({\n        onIsActiveChanged\n      });\n\n    default:\n      throw new Error('Must implement a mouse activation strategy');\n  }\n};\n\nconst getElementDimensions = rect => {\n  const {\n    width,\n    height\n  } = rect;\n  return {\n    width,\n    height\n  };\n};\n\nconst getIsPositionOutside = (pos, elementDimensions) => {\n  const {\n    x,\n    y\n  } = pos;\n  const {\n    width,\n    height\n  } = elementDimensions;\n  return x < 0 || y < 0 || x > width || y > height;\n};\n\nconst getTouchEvent = e => e.touches[0];\n\nconst CursorPosition = props => {\n  const {\n    activationInteractionMouse,\n    activationInteractionTouch,\n    children,\n    hoverDelayInMs = 250,\n    hoverOffDelayInMs = 150,\n    isEnabled = true,\n    onActivationChanged = utils_1.noop,\n    onDetectedEnvironmentChanged = utils_1.noop,\n    onOutsideClick,\n    onPositionChanged: onPositionChangedProp = utils_1.noop,\n    pressDurationInMs = 500,\n    pressMoveThreshold = 5,\n    shouldStopTouchMovePropagation = false,\n    style,\n    tabIndex = -1,\n    tapDurationInMs = 180,\n    tapMoveThreshold = 5,\n    useCapture\n  } = props,\n        rest = __rest(props, [\"activationInteractionMouse\", \"activationInteractionTouch\", \"children\", \"hoverDelayInMs\", \"hoverOffDelayInMs\", \"isEnabled\", \"onActivationChanged\", \"onDetectedEnvironmentChanged\", \"onOutsideClick\", \"onPositionChanged\", \"pressDurationInMs\", \"pressMoveThreshold\", \"shouldStopTouchMovePropagation\", \"style\", \"tabIndex\", \"tapDurationInMs\", \"tapMoveThreshold\", \"useCapture\"]); ///\n  /// Refs\n  ///\n\n\n  const observer = (0, react_1.useRef)(new RelativeCursorPositionObserver_1.RelativeCursorPositionObserver());\n  const divRef = (0, react_1.useRef)(null);\n  const timersRef = (0, react_1.useRef)([]); ///\n  /// State\n  ///\n\n  const [elementDimensions, setElementDimensions] = (0, react_1.useState)({\n    width: 0,\n    height: 0\n  });\n  const [shouldGuardAgainstMouseEmulationByDevices, setShouldGuardAgainstMouseEmulationByDevices] = (0, react_1.useState)(false);\n  const [isActive, setIsActive] = (0, react_1.useState)(false);\n  const [isPositionOutside, setIsPositionOutside] = (0, react_1.useState)(true);\n  const [position, setPosition] = (0, react_1.useState)({\n    x: 0,\n    y: 0\n  }); ///\n  /// Hooks\n  ///\n\n  (0, resize_observer_1.default)(divRef, entry => setElementDimensions(getElementDimensions(entry.contentRect))); // TODO remove / replace\n\n  const handleIsActiveChanged = event => {\n    setIsActive(event.isActive);\n  };\n\n  const [touchActivation, setTouchActivation] = (0, react_1.useState)(getTouchActivationStrategy(activationInteractionTouch, handleIsActiveChanged, pressDurationInMs, pressMoveThreshold, tapDurationInMs, tapMoveThreshold));\n  const [mouseActivation, setMouseActivation] = (0, react_1.useState)(getMouseActivationStrategy(activationInteractionMouse, handleIsActiveChanged, hoverDelayInMs, hoverOffDelayInMs)); ///\n  /// Functions\n  ///\n\n  const unsetShouldGuardAgainstMouseEmulationByDevices = () => {\n    timersRef.current.push({\n      name: constants_1.MOUSE_EMULATION_GUARD_TIMER_NAME,\n      id: setTimeout(() => {\n        setShouldGuardAgainstMouseEmulationByDevices(false);\n      }, 0)\n    });\n  };\n\n  const setPositionState = newPosition => {\n    setIsPositionOutside(getIsPositionOutside(newPosition, elementDimensions));\n    setPosition(newPosition);\n  };\n\n  const onMouseDetected = () => {\n    onDetectedEnvironmentChanged({\n      isTouchDetected: false,\n      isMouseDetected: true\n    });\n  };\n\n  const handleTouchStart = e => {\n    onDetectedEnvironmentChanged({\n      isTouchDetected: true,\n      isMouseDetected: false\n    });\n    setShouldGuardAgainstMouseEmulationByDevices(true);\n    const newPosition = observer.current.getCursorPosition(getTouchEvent(e));\n    setPositionState(newPosition);\n    touchActivation.touchStarted({\n      e,\n      position: newPosition\n    });\n  };\n\n  const handleMouseEnter = e => {\n    if (shouldGuardAgainstMouseEmulationByDevices) {\n      return;\n    }\n\n    onMouseDetected();\n    setPositionState(observer.current.getCursorPosition(e));\n    mouseActivation.mouseEntered();\n  };\n\n  const handleTouchEnd = () => {\n    touchActivation.touchEnded();\n    unsetShouldGuardAgainstMouseEmulationByDevices(); // TODO destroy?\n  };\n\n  const handleTouchCancel = () => {\n    touchActivation.touchCanceled();\n    unsetShouldGuardAgainstMouseEmulationByDevices(); // TODO destroy?\n  };\n\n  const handleMouseLeave = () => {\n    mouseActivation.mouseLeft();\n    setIsPositionOutside(true); // TODO destroy?\n  };\n\n  const handleTouchMove = e => {\n    const newPosition = observer.current.getCursorPosition(getTouchEvent(e));\n    touchActivation.touchMoved({\n      e,\n      position: newPosition\n    });\n\n    if (isActive) {\n      setPositionState(newPosition);\n      e.preventDefault();\n\n      if (shouldStopTouchMovePropagation) {\n        e.stopPropagation();\n      }\n    }\n  };\n\n  const handleMouseMove = e => {\n    const newPosition = observer.current.getCursorPosition(e);\n    setPositionState(newPosition);\n  };\n\n  const handleClick = e => {\n    setPositionState(observer.current.getCursorPosition(e));\n    mouseActivation.mouseClicked();\n    onMouseDetected();\n  };\n\n  const handleKeyDown = e => {\n    e.preventDefault();\n    setIsActive(true);\n  };\n\n  const handleKeyUp = e => {\n    e.preventDefault();\n    setIsActive(false);\n  };\n\n  const onDocumentMouseClick = e => {\n    const el = e.target;\n    const isDescendantOfRoot = divRef.current && el instanceof Node && divRef.current.contains(el);\n\n    if (!isDescendantOfRoot) {\n      onOutsideClick(e);\n    }\n  };\n\n  const removeEventListeners = () => {\n    document.removeEventListener('click', onDocumentMouseClick);\n  }; ///\n  /// Effects\n  ///\n\n\n  (0, react_1.useEffect)(() => {\n    removeEventListeners();\n\n    if (isEnabled) {\n      document.addEventListener('click', onDocumentMouseClick, {\n        capture: useCapture\n      });\n    }\n\n    return () => removeEventListeners(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isEnabled]);\n  (0, react_1.useEffect)(() => {\n    if (divRef.current) {\n      observer.current.subject = divRef.current; // setElementDimensions(getElementDimensions(divRef.current));\n    }\n  }, [divRef]);\n  (0, react_1.useEffect)(() => {\n    onPositionChangedProp({\n      isPositionOutside,\n      position\n    });\n    onActivationChanged({\n      isActive\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isActive]);\n  (0, react_1.useEffect)(() => {\n    onPositionChangedProp({\n      isPositionOutside,\n      position\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isPositionOutside, position]);\n  (0, react_1.useEffect)(() => {\n    setTouchActivation(getTouchActivationStrategy(activationInteractionTouch, handleIsActiveChanged, pressDurationInMs, pressMoveThreshold, tapDurationInMs, tapMoveThreshold));\n    setMouseActivation(getMouseActivationStrategy(activationInteractionMouse, handleIsActiveChanged, hoverDelayInMs, hoverOffDelayInMs)); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activationInteractionMouse, activationInteractionTouch]);\n  return (0, jsx_runtime_1.jsx)(\"div\", Object.assign({\n    ref: divRef,\n    role: \"button\",\n    style: Object.assign(Object.assign({}, style), {\n      WebkitUserSelect: 'none'\n    }),\n    tabIndex: tabIndex,\n    onTouchStart: isEnabled ? handleTouchStart : undefined,\n    onTouchMove: isEnabled ? handleTouchMove : undefined,\n    onTouchEnd: isEnabled ? handleTouchEnd : undefined,\n    onTouchCancel: isEnabled ? handleTouchCancel : undefined,\n    onMouseEnter: isEnabled ? handleMouseEnter : undefined,\n    onMouseMove: isEnabled ? handleMouseMove : undefined,\n    onMouseLeave: isEnabled ? handleMouseLeave : undefined,\n    onClick: isEnabled ? handleClick : undefined,\n    onKeyDown: isEnabled ? handleKeyDown : undefined,\n    onKeyUp: isEnabled ? handleKeyUp : undefined\n  }, rest, {\n    children: children({\n      isActive,\n      isPositionOutside,\n      elementDimensions,\n      position\n    })\n  }), void 0);\n};\n\nexports.CursorPosition = CursorPosition;","map":{"version":3,"sources":["../../src/CursorPosition.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n    HTMLProps,\n    KeyboardEvent,\n    MouseEvent as ReactMouseEvent,\n    TouchEvent,\n    useEffect,\n    useRef,\n    useState,\n} from 'react';\nimport useResizeObserver from '@react-hook/resize-observer';\n\nimport {\n    INTERACTIONS,\n    MOUSE_EMULATION_GUARD_TIMER_NAME,\n} from 'src/constants';\nimport { noop } from 'src/utils';\nimport { TouchActivation } from 'src/lib/TouchActivation';\nimport { HoverActivation } from 'src/lib/HoverActivation';\nimport { ClickActivation } from 'src/lib/ClickActivation';\nimport { TapActivation } from 'src/lib/TapActivation';\nimport { PressActivation } from 'src/lib/PressActivation';\nimport { RelativeCursorPositionObserver } from 'src/lib/RelativeCursorPositionObserver';\nimport { TouchEnvironmentActivation } from 'src/lib/TouchEnvironmentActivation';\nimport { MouseEnvironmentActivation } from 'src/lib/MouseEnvironmentActivation';\nimport type {\n    ActivationChangeEvent,\n    ContainerDimensions,\n    DetectedInputType,\n    Interactions,\n    OnIsActiveChangedHandler,\n    Point,\n    PositionChangeEvent,\n    TimerHandle,\n} from 'src/types';\n\nexport type ChildProps = {\n    isActive: boolean;\n    isPositionOutside: boolean;\n    elementDimensions: ContainerDimensions;\n    position: Point;\n};\n\n// TODO remove RelativeCursorPositionObserver - it's not useful and just makes the package larger\nexport interface PropTypes extends HTMLProps<HTMLDivElement> {\n    activationInteractionMouse: Interactions['click'] | Interactions['hover'];\n    activationInteractionTouch: Interactions['press'] | Interactions['tap'] | Interactions['touch'];\n    children: (props: ChildProps) => JSX.Element;\n    hoverDelayInMs?: number;\n    hoverOffDelayInMs?: number;\n    isEnabled?: boolean;\n    onActivationChanged?: (event: ActivationChangeEvent) => void;\n    onDetectedEnvironmentChanged?: (detectedInputType: DetectedInputType) => void;\n    onOutsideClick: (e: MouseEvent) => void;\n    onPositionChanged?: (event: PositionChangeEvent) => void;\n    pressDurationInMs?: number;\n    pressMoveThreshold?: number;\n    shouldStopTouchMovePropagation?: boolean;\n    tabIndex?: number;\n    tapDurationInMs?: number;\n    tapMoveThreshold?: number;\n    useCapture?: boolean;\n}\n\n// TODO move to utils\nconst getTouchActivationStrategy = (\n    interaction: string,\n    onIsActiveChanged: OnIsActiveChangedHandler,\n    pressDurationInMs: number,\n    pressMoveThreshold: number,\n    tapDurationInMs: number,\n    tapMoveThreshold: number,\n): TouchEnvironmentActivation => {\n    const {\n        touch,\n        tap,\n        press,\n    } = INTERACTIONS;\n\n    switch (interaction) {\n        case press:\n            return new PressActivation({\n                onIsActiveChanged,\n                pressDurationInMs,\n                pressMoveThreshold,\n            });\n        case tap:\n            return new TapActivation({\n                onIsActiveChanged,\n                tapDurationInMs,\n                tapMoveThreshold,\n            });\n        case touch:\n            return new TouchActivation({\n                onIsActiveChanged,\n            });\n        default:\n            throw new Error('Must implement a touch activation strategy');\n    }\n};\n\nconst getMouseActivationStrategy = (\n    interaction: string,\n    onIsActiveChanged: OnIsActiveChangedHandler,\n    hoverDelayInMs: number,\n    hoverOffDelayInMs: number,\n): MouseEnvironmentActivation => {\n    const {\n        hover,\n        click,\n    } = INTERACTIONS;\n\n    switch (interaction) {\n        case hover:\n            return new HoverActivation({\n                onIsActiveChanged,\n                hoverDelayInMs,\n                hoverOffDelayInMs,\n            });\n        case click:\n            return new ClickActivation({\n                onIsActiveChanged,\n            });\n        default:\n            throw new Error('Must implement a mouse activation strategy');\n    }\n};\n\nconst getElementDimensions = (rect: DOMRectReadOnly): ContainerDimensions => {\n    const {\n        width,\n        height,\n    } = rect;\n\n    return {\n        width,\n        height,\n    };\n};\n\nconst getIsPositionOutside = (pos: Point, elementDimensions: ContainerDimensions): boolean => {\n    const { x, y } = pos;\n    const {\n        width,\n        height,\n    } = elementDimensions;\n\n    return (\n        x < 0\n        || y < 0\n        || x > width\n        || y > height\n    );\n};\n\nconst getTouchEvent = (e: TouchEvent): Touch => e.touches[0] as Touch;\n\nexport const CursorPosition = (props: PropTypes): JSX.Element => {\n    const {\n        activationInteractionMouse,\n        activationInteractionTouch,\n        children,\n        hoverDelayInMs = 250,\n        hoverOffDelayInMs = 150,\n        isEnabled = true,\n        onActivationChanged = noop,\n        onDetectedEnvironmentChanged = noop,\n        onOutsideClick,\n        onPositionChanged: onPositionChangedProp = noop,\n        pressDurationInMs = 500,\n        pressMoveThreshold = 5,\n        shouldStopTouchMovePropagation = false,\n        style,\n        tabIndex = -1,\n        tapDurationInMs = 180,\n        tapMoveThreshold = 5,\n        useCapture,\n        ...rest\n    } = props;\n\n    ///\n    /// Refs\n    ///\n\n    const observer = useRef(new RelativeCursorPositionObserver());\n    const divRef = useRef<HTMLDivElement>(null);\n    const timersRef = useRef<TimerHandle[]>([]);\n\n    ///\n    /// State\n    ///\n\n    const [elementDimensions, setElementDimensions] = useState<ContainerDimensions>({\n        width: 0,\n        height: 0,\n    });\n    const [\n        shouldGuardAgainstMouseEmulationByDevices,\n        setShouldGuardAgainstMouseEmulationByDevices,\n    ] = useState<boolean>(false);\n    const [isActive, setIsActive] = useState<boolean>(false);\n    const [isPositionOutside, setIsPositionOutside] = useState<boolean>(true);\n    const [position, setPosition] = useState<Point>({\n        x: 0,\n        y: 0,\n    });\n\n    ///\n    /// Hooks\n    ///\n    useResizeObserver(divRef, (entry) => setElementDimensions(getElementDimensions(entry.contentRect)));\n\n    // TODO remove / replace\n    const handleIsActiveChanged = (event: ActivationChangeEvent): void => {\n        setIsActive(event.isActive);\n    };\n\n    const [touchActivation, setTouchActivation] = useState<TouchEnvironmentActivation>(\n        getTouchActivationStrategy(\n            activationInteractionTouch,\n            handleIsActiveChanged,\n            pressDurationInMs,\n            pressMoveThreshold,\n            tapDurationInMs,\n            tapMoveThreshold,\n        ),\n    );\n    const [mouseActivation, setMouseActivation] = useState<MouseEnvironmentActivation>(\n        getMouseActivationStrategy(\n            activationInteractionMouse,\n            handleIsActiveChanged,\n            hoverDelayInMs,\n            hoverOffDelayInMs,\n        ),\n    );\n\n    ///\n    /// Functions\n    ///\n\n    const unsetShouldGuardAgainstMouseEmulationByDevices = (): void => {\n        timersRef.current.push({\n            name: MOUSE_EMULATION_GUARD_TIMER_NAME,\n            id: setTimeout(() => {\n                setShouldGuardAgainstMouseEmulationByDevices(false);\n            }, 0),\n        });\n    };\n\n    const setPositionState = (newPosition: Point): void => {\n        setIsPositionOutside(getIsPositionOutside(newPosition, elementDimensions));\n        setPosition(newPosition);\n    };\n\n    const onMouseDetected = (): void => {\n        onDetectedEnvironmentChanged({\n            isTouchDetected: false,\n            isMouseDetected: true,\n        });\n    };\n\n    const handleTouchStart = (e: TouchEvent): void => {\n        onDetectedEnvironmentChanged({\n            isTouchDetected: true,\n            isMouseDetected: false,\n        });\n        setShouldGuardAgainstMouseEmulationByDevices(true);\n\n        const newPosition = observer.current.getCursorPosition(getTouchEvent(e));\n\n        setPositionState(newPosition);\n\n        touchActivation.touchStarted({ e, position: newPosition });\n    };\n\n    const handleMouseEnter = (e: ReactMouseEvent): void => {\n        if (shouldGuardAgainstMouseEmulationByDevices) {\n            return;\n        }\n\n        onMouseDetected();\n        setPositionState(observer.current.getCursorPosition(e));\n        mouseActivation.mouseEntered();\n    };\n\n    const handleTouchEnd = (): void => {\n        touchActivation.touchEnded();\n        unsetShouldGuardAgainstMouseEmulationByDevices();\n        // TODO destroy?\n    };\n\n    const handleTouchCancel = (): void => {\n        touchActivation.touchCanceled();\n        unsetShouldGuardAgainstMouseEmulationByDevices();\n        // TODO destroy?\n    };\n\n    const handleMouseLeave = (): void => {\n        mouseActivation.mouseLeft();\n        setIsPositionOutside(true);\n        // TODO destroy?\n    };\n\n    const handleTouchMove = (e: TouchEvent): void => {\n        const newPosition = observer.current.getCursorPosition(getTouchEvent(e));\n\n        touchActivation.touchMoved({ e, position: newPosition });\n\n        if (isActive) {\n            setPositionState(newPosition);\n            e.preventDefault();\n\n            if (shouldStopTouchMovePropagation) {\n                e.stopPropagation();\n            }\n        }\n    };\n\n    const handleMouseMove = (e: ReactMouseEvent): void => {\n        const newPosition = observer.current.getCursorPosition(e);\n\n        setPositionState(newPosition);\n    };\n\n    const handleClick = (e: ReactMouseEvent): void => {\n        setPositionState(observer.current.getCursorPosition(e));\n        mouseActivation.mouseClicked();\n        onMouseDetected();\n    };\n\n    const handleKeyDown = (e: KeyboardEvent<HTMLDivElement>): void => {\n        e.preventDefault();\n        setIsActive(true);\n    };\n\n    const handleKeyUp = (e: KeyboardEvent<HTMLDivElement>): void => {\n        e.preventDefault();\n        setIsActive(false);\n    };\n\n    const onDocumentMouseClick = (e: MouseEvent): void => {\n        const el = e.target;\n        const isDescendantOfRoot = divRef.current && el instanceof Node && divRef.current.contains(el);\n\n        if (!isDescendantOfRoot) {\n            onOutsideClick(e);\n        }\n    };\n\n    const removeEventListeners = (): void => {\n        document.removeEventListener('click', onDocumentMouseClick);\n    };\n\n    ///\n    /// Effects\n    ///\n\n    useEffect(() => {\n        removeEventListeners();\n\n        if (isEnabled) {\n            document.addEventListener('click', onDocumentMouseClick, { capture: useCapture });\n        }\n\n        return (): void => removeEventListeners();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isEnabled]);\n\n    useEffect(() => {\n        if (divRef.current) {\n            observer.current.subject = divRef.current;\n\n            // setElementDimensions(getElementDimensions(divRef.current));\n        }\n    }, [divRef]);\n\n    useEffect(() => {\n        onPositionChangedProp({\n            isPositionOutside,\n            position,\n        });\n\n        onActivationChanged({ isActive });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isActive]);\n\n    useEffect(() => {\n        onPositionChangedProp({\n            isPositionOutside,\n            position,\n        });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isPositionOutside, position]);\n\n    useEffect(() => {\n        setTouchActivation(getTouchActivationStrategy(\n            activationInteractionTouch,\n            handleIsActiveChanged,\n            pressDurationInMs,\n            pressMoveThreshold,\n            tapDurationInMs,\n            tapMoveThreshold,\n        ));\n        setMouseActivation(getMouseActivationStrategy(\n            activationInteractionMouse,\n            handleIsActiveChanged,\n            hoverDelayInMs,\n            hoverOffDelayInMs,\n        ));\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        activationInteractionMouse,\n        activationInteractionTouch,\n    ]);\n\n    return (\n        <div\n            ref={divRef}\n            role=\"button\"\n            style={{\n                ...style,\n                WebkitUserSelect: 'none',\n            }}\n            tabIndex={tabIndex}\n            onTouchStart={isEnabled ? handleTouchStart : undefined}\n            onTouchMove={isEnabled ? handleTouchMove : undefined}\n            onTouchEnd={isEnabled ? handleTouchEnd : undefined}\n            onTouchCancel={isEnabled ? handleTouchCancel : undefined}\n            onMouseEnter={isEnabled ? handleMouseEnter : undefined}\n            onMouseMove={isEnabled ? handleMouseMove : undefined}\n            onMouseLeave={isEnabled ? handleMouseLeave : undefined}\n            onClick={isEnabled ? handleClick : undefined}\n            onKeyDown={isEnabled ? handleKeyDown : undefined}\n            onKeyUp={isEnabled ? handleKeyUp : undefined}\n            {...rest}\n        >\n            {children({\n                isActive,\n                isPositionOutside,\n                elementDimensions,\n                position,\n            })}\n        </div>\n    );\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}