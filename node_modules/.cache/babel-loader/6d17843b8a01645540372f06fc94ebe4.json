{"ast":null,"code":"import { defineMessages } from 'react-intl';\nexport const scope = 'app.components.LocationDetails';\nexport default defineMessages({\n  locationDetails: {\n    id: `${scope}.locationDetails`,\n    defaultMessage: 'Location Details'\n  },\n  addressLine1: {\n    id: `${scope}.addressLine1`,\n    defaultMessage: 'Address Line 1'\n  },\n  addressLine1Required: {\n    id: `${scope}.addressLine1Required`,\n    defaultMessage: 'Address Line 1 field is required.'\n  },\n  addressLine2: {\n    id: `${scope}.addressLine2`,\n    defaultMessage: 'Address Line 2'\n  },\n  addressLine2Required: {\n    id: `${scope}.addressLine2Required`,\n    defaultMessage: 'Address Line 2 field is required.'\n  },\n  legalEntityName: {\n    id: `${scope}.legalEntityName`,\n    defaultMessage: 'Legal Entity Name'\n  },\n  legalEntityNameRequired: {\n    id: `${scope}.legalEntityNameRequired`,\n    defaultMessage: 'Legal Entity Name field is required.'\n  },\n  city: {\n    id: `${scope}.city`,\n    defaultMessage: 'City'\n  },\n  cityRequired: {\n    id: `${scope}.cityRequired`,\n    defaultMessage: 'City field is required.'\n  },\n  state: {\n    id: `${scope}.state`,\n    defaultMessage: 'State'\n  },\n  stateRequired: {\n    id: `${scope}.stateRequired`,\n    defaultMessage: 'State field is required.'\n  },\n  country: {\n    id: `${scope}.country`,\n    defaultMessage: 'Country'\n  },\n  countryRequired: {\n    id: `${scope}.countryRequired`,\n    defaultMessage: 'Country field is required.'\n  },\n  pinCode: {\n    id: `${scope}.pinCode`,\n    defaultMessage: 'Pin Code'\n  },\n  pinCodeRequired: {\n    id: `${scope}.pinCodeRequired`,\n    defaultMessage: 'Pin Code field is required.'\n  },\n  invalidPinCode: {\n    id: `${scope}.invalidPinCode`,\n    defaultMessage: 'Enter valid pin code'\n  },\n  latitude: {\n    id: `${scope}.latitude`,\n    defaultMessage: 'Latitude'\n  },\n  latitudeRequired: {\n    id: `${scope}.latitudeRequired`,\n    defaultMessage: 'Latitude field is required.'\n  },\n  longitude: {\n    id: `${scope}.longitude`,\n    defaultMessage: 'Longitude'\n  },\n  longitudeRequired: {\n    id: `${scope}.longitudeRequired`,\n    defaultMessage: 'Longitude field is required.'\n  },\n  saveButtonLabel: {\n    id: `${scope}.saveButtonLabel`,\n    defaultMessage: 'Save & Next'\n  },\n  saveButtonText: {\n    id: `${scope}.saveButtonText`,\n    defaultMessage: 'Save & Next'\n  },\n  cancelButtonLabe: {\n    id: `${scope}.cancelButtonLabe`,\n    defaultMessage: 'Clear'\n  },\n  locationDetailsSaveSuccess: {\n    id: `${scope}.locationDetailsSaveSuccess`,\n    defaultMessage: 'Location details saved successfully'\n  },\n  somethingWentWrong: {\n    id: `${scope}.somethingWentWrong`,\n    defaultMessage: 'Something went wrong, while saving the details'\n  },\n  cityError: {\n    id: `${scope}.cityError`,\n    defaultMessage: 'Something went wrong, while getting cities'\n  },\n  stateError: {\n    id: `${scope}.stateError`,\n    defaultMessage: 'Something went wrong, while getting states'\n  }\n});","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/components/LocationDetailsForm/messages.js"],"names":["defineMessages","scope","locationDetails","id","defaultMessage","addressLine1","addressLine1Required","addressLine2","addressLine2Required","legalEntityName","legalEntityNameRequired","city","cityRequired","state","stateRequired","country","countryRequired","pinCode","pinCodeRequired","invalidPinCode","latitude","latitudeRequired","longitude","longitudeRequired","saveButtonLabel","saveButtonText","cancelButtonLabe","locationDetailsSaveSuccess","somethingWentWrong","cityError","stateError"],"mappings":"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","sourcesContent":["import { defineMessages } from 'react-intl';\r\n\r\nexport const scope = 'app.components.LocationDetails';\r\n\r\nexport default defineMessages({\r\n  locationDetails: {\r\n    id: `${scope}.locationDetails`,\r\n    defaultMessage: 'Location Details',\r\n  },\r\n  addressLine1: {\r\n    id: `${scope}.addressLine1`,\r\n    defaultMessage: 'Address Line 1',\r\n  },\r\n  addressLine1Required: {\r\n    id: `${scope}.addressLine1Required`,\r\n    defaultMessage: 'Address Line 1 field is required.',\r\n  },\r\n  addressLine2: {\r\n    id: `${scope}.addressLine2`,\r\n    defaultMessage: 'Address Line 2',\r\n  },\r\n  addressLine2Required: {\r\n    id: `${scope}.addressLine2Required`,\r\n    defaultMessage: 'Address Line 2 field is required.',\r\n  },\r\n  legalEntityName: {\r\n    id: `${scope}.legalEntityName`,\r\n    defaultMessage: 'Legal Entity Name',\r\n  },\r\n  legalEntityNameRequired: {\r\n    id: `${scope}.legalEntityNameRequired`,\r\n    defaultMessage: 'Legal Entity Name field is required.',\r\n  },\r\n  city: {\r\n    id: `${scope}.city`,\r\n    defaultMessage: 'City',\r\n  },\r\n  cityRequired: {\r\n    id: `${scope}.cityRequired`,\r\n    defaultMessage: 'City field is required.',\r\n  },\r\n  state: {\r\n    id: `${scope}.state`,\r\n    defaultMessage: 'State',\r\n  },\r\n  stateRequired: {\r\n    id: `${scope}.stateRequired`,\r\n    defaultMessage: 'State field is required.',\r\n  },\r\n  country: {\r\n    id: `${scope}.country`,\r\n    defaultMessage: 'Country',\r\n  },\r\n  countryRequired: {\r\n    id: `${scope}.countryRequired`,\r\n    defaultMessage: 'Country field is required.',\r\n  },\r\n  pinCode: {\r\n    id: `${scope}.pinCode`,\r\n    defaultMessage: 'Pin Code',\r\n  },\r\n  pinCodeRequired: {\r\n    id: `${scope}.pinCodeRequired`,\r\n    defaultMessage: 'Pin Code field is required.',\r\n  },\r\n  invalidPinCode: {\r\n    id: `${scope}.invalidPinCode`,\r\n    defaultMessage: 'Enter valid pin code',\r\n  },\r\n  latitude: {\r\n    id: `${scope}.latitude`,\r\n    defaultMessage: 'Latitude',\r\n  },\r\n  latitudeRequired: {\r\n    id: `${scope}.latitudeRequired`,\r\n    defaultMessage: 'Latitude field is required.',\r\n  },\r\n  longitude: {\r\n    id: `${scope}.longitude`,\r\n    defaultMessage: 'Longitude',\r\n  },\r\n  longitudeRequired: {\r\n    id: `${scope}.longitudeRequired`,\r\n    defaultMessage: 'Longitude field is required.',\r\n  },\r\n  saveButtonLabel: {\r\n    id: `${scope}.saveButtonLabel`,\r\n    defaultMessage: 'Save & Next',\r\n  },\r\n  saveButtonText: {\r\n    id: `${scope}.saveButtonText`,\r\n    defaultMessage: 'Save & Next',\r\n  },\r\n  cancelButtonLabe: {\r\n    id: `${scope}.cancelButtonLabe`,\r\n    defaultMessage: 'Clear',\r\n  },\r\n  locationDetailsSaveSuccess: {\r\n    id: `${scope}.locationDetailsSaveSuccess`,\r\n    defaultMessage: 'Location details saved successfully',\r\n  },\r\n  somethingWentWrong: {\r\n    id: `${scope}.somethingWentWrong`,\r\n    defaultMessage: 'Something went wrong, while saving the details',\r\n  },\r\n  cityError: {\r\n    id: `${scope}.cityError`,\r\n    defaultMessage: 'Something went wrong, while getting cities',\r\n  },\r\n  stateError: {\r\n    id: `${scope}.stateError`,\r\n    defaultMessage: 'Something went wrong, while getting states',\r\n  },\r\n\r\n});\r\n"]},"metadata":{},"sourceType":"module"}