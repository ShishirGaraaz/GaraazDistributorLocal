{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Work\\\\garaaz-distributor\\\\src\\\\components\\\\WorkShopBulk\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState, useEffect, useCallback } from 'react';\nimport { Button, Select, Alert, AlertIcon, AlertTitle, AlertDescription, Box } from '@chakra-ui/react';\nimport { useForm } from 'react-hook-form';\nimport { useDropzone } from 'react-dropzone';\nimport { useIntl } from 'react-intl';\nimport { Stepper, Step } from 'react-form-stepper';\nimport XLSX from 'xlsx';\nimport { useDispatch, useSelector } from 'react-redux';\nimport toast from 'react-hot-toast';\nimport messages from './messages';\nimport _ from 'lodash';\nimport { sheetValidation } from './helper';\nimport '../../utils/theme/bulkContainer.css';\nimport { api } from './constants';\nimport { getDistributorInfo } from '../../containers/DistributerInfo/actions';\nimport { addBulkWorkshop } from './action';\nimport { selectGlobalState, getWorkshops } from '../../globalSlice';\nimport { requiredFields } from './constants';\nimport withToast from '../../HOCs/withToast';\nimport { UseOnboardContext } from '../../App';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst baseStyle = {\n  flex: 1,\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  padding: '20px',\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: '#eeeeee',\n  borderStyle: 'dashed',\n  backgroundColor: '#fafafa',\n  color: '#bdbdbd',\n  outline: 'none',\n  transition: 'border .24s ease-in-out',\n  cursor: 'pointer',\n  height: 250,\n  justifyContent: 'center'\n};\nconst activeStyle = {\n  borderColor: '#2196f3'\n};\nconst acceptStyle = {\n  borderColor: '#00e676'\n};\nconst rejectStyle = {\n  borderColor: '#ff1744'\n};\n\nconst WorkShopBulk = _ref => {\n  _s();\n\n  let {\n    notification\n  } = _ref;\n  const {\n    updateOnboard\n  } = UseOnboardContext();\n  const auth = useSelector(state => state.auth);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [sheetData, setSheetData] = useState([]);\n  const [activeStep, setActiveStep] = useState(1);\n  const [mappedSheetDataValid, setMappedSheetDataValid] = useState([]);\n  const [mappedSheetDataInvalid, setMappedSheetDataInvalid] = useState([]);\n  const [disableNext, setDisableNext] = useState(false);\n  const {\n    branches,\n    distributor\n  } = useSelector(selectGlobalState);\n  const [actualPartOnboardingHeaders, setActualPartOnboardingHeaders] = useState([]);\n  const acceptedWorkshopsOnboardingHeaders = useSelector(state => state.app.acceptedWorkshopsOnboardingHeaders);\n  const history = useHistory();\n  const dispatcher = useDispatch();\n  const {\n    register,\n    formState: {\n      errors\n    },\n    handleSubmit,\n    reset\n  } = useForm({\n    mode: 'onSubmit'\n  });\n  const intl = useIntl();\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject,\n    acceptedFiles,\n    inputRef\n  } = useDropzone({\n    accept: 'text/csv,application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n    maxFiles: 1,\n    noKeyboard: true\n  });\n  useEffect(() => {\n    if (acceptedFiles.length > 0) {\n      const reader = new FileReader();\n\n      reader.onload = evt => {\n        const bstr = evt.target.result;\n        const wb = XLSX.read(bstr, {\n          type: 'binary'\n        });\n        const wsname = wb.SheetNames[0];\n        const ws = wb.Sheets[wsname];\n        const jsonData = XLSX.utils.sheet_to_json(ws, {\n          defval: ''\n        });\n\n        if (!jsonData.length) {\n          setErrorMessage('Either sheets is empty or the sheet is corrupted.');\n        } else {\n          setErrorMessage('');\n          setActualPartOnboardingHeaders(Object.keys(jsonData[0]));\n          setSheetData(jsonData);\n        }\n      };\n\n      reader.readAsBinaryString(acceptedFiles[0]);\n    }\n  }, [acceptedFiles]);\n  useEffect(() => {\n    if (errorMessage) {\n      toast(errorMessage);\n    }\n  }, [errorMessage]);\n  const style = useMemo(() => ({ ...baseStyle,\n    ...(isDragActive ? activeStyle : {}),\n    ...(isDragAccept ? acceptStyle : {}),\n    ...(isDragReject ? rejectStyle : {})\n  }), [isDragActive, isDragReject, isDragAccept]);\n\n  const callback = async data => {\n    if (activeStep < 3) setActiveStep(activeStep + 1);\n\n    if (activeStep === 2) {\n      try {\n        setDisableNext(true);\n        const validatedData = await sheetValidation(sheetData, data, acceptedWorkshopsOnboardingHeaders);\n        const totalRows = validatedData.length;\n        await validatedData.forEach((re, index) => {\n          re.then(res => {\n            if (res.data.isInvalid) {\n              setMappedSheetDataInvalid(prev => [...prev, res.data]);\n              notification({\n                status: 'error',\n                title: 'Invalid Fields',\n                description: `${res.missingFields.join(',')} field${res.missingFields.length > 1 ? 's' : ''} ${res.missingFields.length > 1 ? 'are' : 'is'}  invalid`\n              });\n            } else {\n              setMappedSheetDataValid(prev => [...prev, res.data]);\n            }\n\n            if (totalRows === index + 1) setDisableNext(false);\n          });\n        });\n      } catch (error) {\n        toast(error);\n      }\n    } else if (activeStep === 3) {\n      const validLength = mappedSheetDataValid.length;\n      const totalLength = sheetData.length;\n      toast(`Attempting to onboard ${validLength}/${totalLength} Workshop.`);\n      const ArrayOfKeysWithValue = mappedSheetDataValid.map(row => {\n        var _branches$find;\n\n        const res = Object.keys(row).filter(i => row[i] === '');\n        res.forEach(delKey => delete row[delKey]);\n        row.branchId = (_branches$find = branches.find(branch => (branch === null || branch === void 0 ? void 0 : branch.branchCode) === (row === null || row === void 0 ? void 0 : row.branchCode))) === null || _branches$find === void 0 ? void 0 : _branches$find._id;\n        row === null || row === void 0 ? true : delete row.branchCode;\n        return row;\n      });\n\n      if (ArrayOfKeysWithValue.some(row => !row.branchId)) {\n        notification({\n          status: 'error',\n          title: 'Invalid Branch Codes',\n          description: 'Branch Codes must be valid'\n        });\n        return;\n      }\n\n      try {\n        await addBulkWorkshop(auth, distributor._id, ArrayOfKeysWithValue);\n        toast(intl.formatMessage(messages.workshopsAddedSuccess));\n        setMappedSheetDataValid([]);\n        onModalClose();\n        dispatcher(getWorkshops({\n          auth,\n          distributorId: distributor._id\n        }));\n        history.push('/workshops');\n\n        if (localStorage.onboard) {\n          localStorage.removeItem('onboard');\n          updateOnboard('');\n        }\n      } catch (err) {\n        const resMsg = err.response.data.errorMsg;\n        setDisableNext(true);\n        toast(resMsg);\n        let workshopsInvalid = resMsg.replaceAll(',', ' ').split(' ');\n        let index = workshopsInvalid.indexOf('These' || 'these');\n        workshopsInvalid = workshopsInvalid.splice(0, index);\n        setMappedSheetDataInvalid(mappedSheetDataValid.filter(row => {\n          if (workshopsInvalid.includes(`${row.mobileNumber}`)) {\n            row.mobileNumber = 'already exist';\n            return row;\n          } else return row;\n        }));\n        setMappedSheetDataValid(mappedSheetDataValid.filter(row => {\n          if (workshopsInvalid.includes(`${row.mobileNumber}`)) {\n            return row;\n          }\n        }));\n      }\n\n      reset({}, {\n        keepDirty: false,\n        keepErrors: false,\n        keepValues: false\n      });\n    }\n  };\n\n  const mapOnboardingFields = useCallback(callback, [activeStep, setActiveStep, mappedSheetDataValid]);\n  const onModalClose = useCallback(e => {\n    setActiveStep(1);\n    acceptedFiles.length = 0;\n    acceptedFiles.splice(0, acceptedFiles.length);\n\n    if (inputRef.current) {\n      inputRef.current.value = '';\n    }\n\n    setSheetData([]);\n    setMappedSheetDataInvalid([]);\n    setMappedSheetDataValid([]);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full mb-3\",\n      children: /*#__PURE__*/_jsxDEV(Stepper, {\n        styleConfig: {\n          completedBgColor: '#008000',\n          activeBgColor: '#1e293b'\n        },\n        activeStep: activeStep,\n        children: [/*#__PURE__*/_jsxDEV(Step, {\n          label: \"File Upload\",\n          completed: acceptedFiles.length > 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Step, {\n          label: \"Field Mappings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Step, {\n          label: \"Review\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), activeStep === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full px-4 lg:w-full mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        w: \"100%\",\n        mb: \"3\",\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          status: \"info\",\n          children: [/*#__PURE__*/_jsxDEV(AlertIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(AlertDescription, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Download a sample file from here \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              style: {\n                fontWeight: 'bold'\n              },\n              href: api.DOWNLOAD_SAMPLE,\n              download: \"Part sample File\",\n              children: \"Download File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1\",\n        children: intl.formatMessage(messages.workshopsDetailFile)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative w-full dropZone-area\",\n        ...getRootProps({\n          style,\n          className: 'dropzone'\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this), isDragActive && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: intl.formatMessage(messages.dropFileHere)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 30\n        }, this), !acceptedFiles || acceptedFiles.length === 0 && !isDragActive && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: intl.formatMessage(messages.dragAndDropMessage)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 17\n        }, this), acceptedFiles && acceptedFiles.length > 0 && !isDragActive && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"far fa-file fa-2x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: acceptedFiles[0].path\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 9\n    }, this), activeStep === 2 && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(mapOnboardingFields),\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        w: \"100%\",\n        mb: \"3\",\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          status: \"info\",\n          children: [/*#__PURE__*/_jsxDEV(AlertIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(AlertDescription, {\n            children: \"Please thoroughly check the fields and align the values before moving to the next step.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        flexWrap: \"wrap\",\n        children: acceptedWorkshopsOnboardingHeaders.map(header => {\n          var _actualPartOnboarding;\n\n          return /*#__PURE__*/_jsxDEV(Box, {\n            width: {\n              base: '100%',\n              lg: '48%'\n            },\n            mt: 6,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1\",\n              children: header\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, { ...register(`${header}`, {\n                required: requiredFields.includes(header)\n              }),\n              defaultValue: (_actualPartOnboarding = actualPartOnboardingHeaders.find(actualHeader => `${actualHeader}`.toLowerCase().indexOf(`${header}`.toLowerCase()) !== -1 || new RegExp(actualHeader, 'ig').test(header))) !== null && _actualPartOnboarding !== void 0 ? _actualPartOnboarding : 'No value',\n              placeholder: \"Select a value\",\n              children: actualPartOnboardingHeaders.map(actualHeader => /*#__PURE__*/_jsxDEV(\"option\", {\n                children: actualHeader\n              }, actualHeader, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 15\n            }, this), errors && errors[header] && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-youtube-regular text-sm\",\n              children: header\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 17\n            }, this)]\n          }, header, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 9\n    }, this), activeStep === 3 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        w: \"100%\",\n        p: 4,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          status: \"info\",\n          children: [/*#__PURE__*/_jsxDEV(AlertIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(AlertTitle, {\n            mr: 2,\n            children: \"Valid Rows\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(AlertDescription, {\n            children: [\"There are total \", mappedSheetDataValid.length, \"/\", sheetData.length, ' ', \"rows which are valid\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 11\n      }, this), mappedSheetDataInvalid.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n        w: \"100%\",\n        p: 4,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          status: \"error\",\n          children: [/*#__PURE__*/_jsxDEV(AlertIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(AlertTitle, {\n            mr: 2,\n            children: \"Invalid Rows\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(AlertDescription, {\n            children: [\"There are total \", mappedSheetDataInvalid.length, \"/\", sheetData.length, \" rows which are invalid\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 13\n      }, this), mappedSheetDataInvalid.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n        w: \"100%\",\n        p: 4,\n        style: {\n          overflowX: 'auto'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          variant: \"striped\" // style={{ backgroundColor: \"teal\" }}\n          ,\n          size: \"lg\",\n          className: \"table-auto border-collapse border border-green-800\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            style: {\n              backgroundColor: '#1e293b',\n              color: '#ffffff'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: acceptedWorkshopsOnboardingHeaders.map(header => {\n                if (header === 'isInvalid' || header === 'gallery' || header === 'locationId' || header === 'contactId' || header === 'location' || header === 'contact') {} else return /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"px-2 text-center\",\n                  style: {\n                    width: '110px',\n                    minWidth: '110px'\n                  },\n                  children: header\n                }, header, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 27\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            style: {\n              overflow: 'auto'\n            },\n            children: mappedSheetDataInvalid.map(row => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: Object.keys(row).map((header, index) => {\n                  if (header === 'isInvalid') {} else return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-2 text-center\",\n                    style: {\n                      width: '110px',\n                      minWidth: '110px',\n                      color: row[header] === 'invalid' || row[header] === 'Mandatory*' || row[header] === 'already exist' ? 'red' : 'black'\n                    },\n                    children: row[header]\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 423,\n                    columnNumber: 31\n                  }, this);\n                })\n              }, row.branchName + row.branchCode, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bulkButtonsContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmit(mapOnboardingFields),\n        style: {\n          backgroundColor: '#1e293b',\n          color: '#ffffff',\n          marginLeft: '10px'\n        },\n        disabled: sheetData.length < 1 || disableNext,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"clrBtn\",\n        type: \"reset\",\n        onClick: () => {\n          setActiveStep(1);\n          acceptedFiles.length = 0;\n          acceptedFiles.splice(0, acceptedFiles.length);\n\n          if (inputRef.current) {\n            inputRef.current.value = '';\n          }\n\n          setSheetData([]);\n          setMappedSheetDataValid([]);\n          setMappedSheetDataInvalid([]);\n          setDisableNext(false);\n          reset({}, {\n            keepDirty: false,\n            keepErrors: false,\n            keepValues: false\n          });\n        },\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(WorkShopBulk, \"jixSxt4aMAaf0KcZkAlWijtw1sU=\", false, function () {\n  return [useSelector, useSelector, useSelector, useHistory, useDispatch, useForm, useIntl, useDropzone];\n});\n\n_c = WorkShopBulk;\nexport default _c2 = withToast(WorkShopBulk);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"WorkShopBulk\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/components/WorkShopBulk/index.js"],"names":["React","useMemo","useState","useEffect","useCallback","Button","Select","Alert","AlertIcon","AlertTitle","AlertDescription","Box","useForm","useDropzone","useIntl","Stepper","Step","XLSX","useDispatch","useSelector","toast","messages","_","sheetValidation","api","getDistributorInfo","addBulkWorkshop","selectGlobalState","getWorkshops","requiredFields","withToast","UseOnboardContext","useHistory","baseStyle","flex","display","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","color","outline","transition","cursor","height","justifyContent","activeStyle","acceptStyle","rejectStyle","WorkShopBulk","notification","updateOnboard","auth","state","errorMessage","setErrorMessage","sheetData","setSheetData","activeStep","setActiveStep","mappedSheetDataValid","setMappedSheetDataValid","mappedSheetDataInvalid","setMappedSheetDataInvalid","disableNext","setDisableNext","branches","distributor","actualPartOnboardingHeaders","setActualPartOnboardingHeaders","acceptedWorkshopsOnboardingHeaders","app","history","dispatcher","register","formState","errors","handleSubmit","reset","mode","intl","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","acceptedFiles","inputRef","accept","maxFiles","noKeyboard","length","reader","FileReader","onload","evt","bstr","target","result","wb","read","type","wsname","SheetNames","ws","Sheets","jsonData","utils","sheet_to_json","defval","Object","keys","readAsBinaryString","style","callback","data","validatedData","totalRows","forEach","re","index","then","res","isInvalid","prev","status","title","description","missingFields","join","error","validLength","totalLength","ArrayOfKeysWithValue","map","row","filter","i","delKey","branchId","find","branch","branchCode","_id","some","formatMessage","workshopsAddedSuccess","onModalClose","distributorId","push","localStorage","onboard","removeItem","err","resMsg","response","errorMsg","workshopsInvalid","replaceAll","split","indexOf","splice","includes","mobileNumber","keepDirty","keepErrors","keepValues","mapOnboardingFields","e","current","value","completedBgColor","activeBgColor","fontWeight","DOWNLOAD_SAMPLE","workshopsDetailFile","className","dropFileHere","dragAndDropMessage","path","header","base","lg","required","actualHeader","toLowerCase","RegExp","test","overflowX","width","minWidth","overflow","branchName","marginLeft"],"mappings":"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","sourcesContent":["import React, { useMemo, useState, useEffect, useCallback } from 'react';\r\nimport {\r\n  Button,\r\n  Select,\r\n  Alert,\r\n  AlertIcon,\r\n  AlertTitle,\r\n  AlertDescription,\r\n  Box,\r\n} from '@chakra-ui/react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { useIntl } from 'react-intl';\r\nimport { Stepper, Step } from 'react-form-stepper';\r\nimport XLSX from 'xlsx';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport toast from 'react-hot-toast';\r\nimport messages from './messages';\r\nimport _ from 'lodash';\r\nimport { sheetValidation } from './helper';\r\nimport '../../utils/theme/bulkContainer.css';\r\nimport { api } from './constants';\r\nimport { getDistributorInfo } from '../../containers/DistributerInfo/actions';\r\nimport { addBulkWorkshop } from './action';\r\nimport {selectGlobalState, getWorkshops} from '../../globalSlice'; \r\nimport { requiredFields } from './constants';\r\nimport withToast from '../../HOCs/withToast';\r\nimport { UseOnboardContext } from '../../App';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst baseStyle = {\r\n  flex: 1,\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  padding: '20px',\r\n  borderWidth: 2,\r\n  borderRadius: 2,\r\n  borderColor: '#eeeeee',\r\n  borderStyle: 'dashed',\r\n  backgroundColor: '#fafafa',\r\n  color: '#bdbdbd',\r\n  outline: 'none',\r\n  transition: 'border .24s ease-in-out',\r\n  cursor: 'pointer',\r\n  height: 250,\r\n  justifyContent: 'center',\r\n};\r\n\r\nconst activeStyle = {\r\n  borderColor: '#2196f3',\r\n};\r\n\r\nconst acceptStyle = {\r\n  borderColor: '#00e676',\r\n};\r\n\r\nconst rejectStyle = {\r\n  borderColor: '#ff1744',\r\n};\r\n\r\n\r\n\r\nconst WorkShopBulk = ({notification}) => {\r\n  const { updateOnboard } = UseOnboardContext();\r\n  const auth = useSelector((state) => state.auth);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [sheetData, setSheetData] = useState([]);\r\n  const [activeStep, setActiveStep] = useState(1);\r\n  const [mappedSheetDataValid, setMappedSheetDataValid] = useState([]);\r\n  const [mappedSheetDataInvalid, setMappedSheetDataInvalid] = useState([]);\r\n  const [disableNext, setDisableNext] = useState(false);\r\n  const { branches, distributor } = useSelector(selectGlobalState);\r\n  const [actualPartOnboardingHeaders, setActualPartOnboardingHeaders] =\r\n    useState([]);\r\n  const acceptedWorkshopsOnboardingHeaders = useSelector(\r\n    (state) => state.app.acceptedWorkshopsOnboardingHeaders,\r\n  );\r\n\r\n  const history = useHistory();\r\n  const dispatcher = useDispatch();\r\n\r\n\r\n\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    handleSubmit,\r\n    reset,\r\n  } = useForm({\r\n    mode: 'onSubmit',\r\n  });\r\n\r\n  const intl = useIntl();\r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive,\r\n    isDragAccept,\r\n    isDragReject,\r\n    acceptedFiles,\r\n    inputRef,\r\n  } = useDropzone({\r\n    accept:\r\n      'text/csv,application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n    maxFiles: 1,\r\n    noKeyboard: true,\r\n  });\r\n\r\n\r\n  useEffect(() => {\r\n    if (acceptedFiles.length > 0) {\r\n      const reader = new FileReader();\r\n      reader.onload = (evt) => {\r\n        const bstr = evt.target.result;\r\n        const wb = XLSX.read(bstr, { type: 'binary' });\r\n        const wsname = wb.SheetNames[0];\r\n        const ws = wb.Sheets[wsname];\r\n        const jsonData = XLSX.utils.sheet_to_json(ws, { defval: '' });\r\n        if (!jsonData.length) {\r\n          setErrorMessage('Either sheets is empty or the sheet is corrupted.');\r\n        } else {\r\n          setErrorMessage('');\r\n          setActualPartOnboardingHeaders(Object.keys(jsonData[0]));\r\n          setSheetData(jsonData);\r\n        }\r\n      };\r\n      reader.readAsBinaryString(acceptedFiles[0]);\r\n    }\r\n  }, [acceptedFiles]);\r\n\r\n  useEffect(() => {\r\n    if (errorMessage) {\r\n      toast(errorMessage);\r\n    }\r\n  }, [errorMessage]);\r\n\r\n  const style = useMemo(\r\n    () => ({\r\n      ...baseStyle,\r\n      ...(isDragActive ? activeStyle : {}),\r\n      ...(isDragAccept ? acceptStyle : {}),\r\n      ...(isDragReject ? rejectStyle : {}),\r\n    }),\r\n    [isDragActive, isDragReject, isDragAccept],\r\n  );\r\n  const callback = async (data) => {\r\n    if (activeStep < 3) setActiveStep(activeStep + 1);\r\n    if (activeStep === 2) {\r\n      try {\r\n        setDisableNext(true);\r\n        const validatedData = await sheetValidation(\r\n          sheetData,\r\n          data,\r\n          acceptedWorkshopsOnboardingHeaders,\r\n        );\r\n        const totalRows = validatedData.length;\r\n        await validatedData.forEach((re, index) => {\r\n          re.then((res) => {\r\n            if (res.data.isInvalid) {\r\n              setMappedSheetDataInvalid((prev) => [...prev, res.data]);\r\n              notification({\r\n                status: 'error',\r\n                title: 'Invalid Fields',\r\n                description:\r\n                  `${res.missingFields.join(',')} field${res.missingFields.length > 1? 's' : ''} ${res.missingFields.length > 1? 'are' : 'is'}  invalid`\r\n              });\r\n            } else {\r\n              setMappedSheetDataValid((prev) => [...prev, res.data]);\r\n            }\r\n            if (totalRows === index + 1) setDisableNext(false);\r\n          });\r\n        });\r\n      } catch (error) {\r\n        toast(error);\r\n      }\r\n    } else if (activeStep === 3) {\r\n      const validLength = mappedSheetDataValid.length;\r\n      const totalLength = sheetData.length;\r\n      toast(`Attempting to onboard ${validLength}/${totalLength} Workshop.`);\r\n      const ArrayOfKeysWithValue = mappedSheetDataValid.map((row) => {\r\n        const res = Object.keys(row).filter((i) => row[i] === '');\r\n        res.forEach((delKey) => delete row[delKey]);\r\n        row.branchId = branches.find(branch => branch?.branchCode === row?.branchCode)?._id;\r\n        delete row?.branchCode;\r\n        return row;\r\n      });\r\n\r\n      if(ArrayOfKeysWithValue.some(row => !row.branchId)){\r\n        notification({\r\n          status: 'error',\r\n          title: 'Invalid Branch Codes',\r\n          description: 'Branch Codes must be valid'\r\n        });\r\n\r\n        return;\r\n      }\r\n      try {\r\n        await addBulkWorkshop(auth, distributor._id, ArrayOfKeysWithValue);\r\n        toast(intl.formatMessage(messages.workshopsAddedSuccess));\r\n        setMappedSheetDataValid([]);\r\n        onModalClose();\r\n        dispatcher(getWorkshops({auth, distributorId: distributor._id}))\r\n        history.push('/workshops')\r\n        if(localStorage.onboard){\r\n          localStorage.removeItem('onboard');\r\n          updateOnboard('')\r\n        }\r\n      } catch (err) {\r\n        const resMsg = err.response.data.errorMsg;\r\n        setDisableNext(true);\r\n        toast(resMsg);\r\n        let workshopsInvalid = resMsg.replaceAll(',', ' ').split(' ');\r\n        let index = workshopsInvalid.indexOf('These' || 'these');\r\n        workshopsInvalid = workshopsInvalid.splice(0, index);\r\n        setMappedSheetDataInvalid(\r\n          mappedSheetDataValid.filter((row) => {\r\n            if (workshopsInvalid.includes(`${row.mobileNumber}`)) {\r\n              row.mobileNumber = 'already exist';\r\n              return row;\r\n            } else return row;\r\n          }),\r\n        );\r\n        setMappedSheetDataValid(\r\n          mappedSheetDataValid.filter((row) => {\r\n            if (workshopsInvalid.includes(`${row.mobileNumber}`)) {\r\n      \r\n              return row;\r\n            }\r\n          }),\r\n        );\r\n      }\r\n      reset(\r\n        {},\r\n        {\r\n          keepDirty: false,\r\n          keepErrors: false,\r\n          keepValues: false,\r\n        },\r\n      );\r\n    }\r\n  };\r\n  const mapOnboardingFields = useCallback(callback, [\r\n    activeStep,\r\n    setActiveStep,\r\n    mappedSheetDataValid,\r\n  ]);\r\n  const onModalClose = useCallback((e) => {\r\n    setActiveStep(1);\r\n    acceptedFiles.length = 0;\r\n    acceptedFiles.splice(0, acceptedFiles.length);\r\n    if (inputRef.current) {\r\n      inputRef.current.value = '';\r\n    }\r\n    setSheetData([]);\r\n    setMappedSheetDataInvalid([]);\r\n    setMappedSheetDataValid([]);\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className='w-full mb-3'>\r\n        <Stepper\r\n          styleConfig={{\r\n            completedBgColor: '#008000',\r\n            activeBgColor: '#1e293b',\r\n          }}\r\n          activeStep={activeStep}\r\n        >\r\n          <Step label='File Upload' completed={acceptedFiles.length > 0} />\r\n          <Step label='Field Mappings' />\r\n          <Step label='Review' />\r\n        </Stepper>\r\n      </div>\r\n      {activeStep === 1 && (\r\n        <div className='w-full px-4 lg:w-full mb-3'>\r\n          <Box w='100%' mb='3'>\r\n            <Alert status='info'>\r\n              <AlertIcon />\r\n              <AlertDescription>\r\n                <label>Download a sample file from here </label>\r\n                <a\r\n                  style={{ fontWeight: 'bold' }}\r\n                  href={api.DOWNLOAD_SAMPLE}\r\n                  download='Part sample File'\r\n                >\r\n                  Download File\r\n                </a>\r\n              </AlertDescription>\r\n            </Alert>\r\n          </Box>\r\n          <label className='block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1'>\r\n            {intl.formatMessage(messages.workshopsDetailFile)}\r\n          </label>\r\n          <div\r\n            className='relative w-full dropZone-area'\r\n            {...getRootProps({ style, className: 'dropzone' })}\r\n          >\r\n            <input {...getInputProps()} />\r\n            {isDragActive && <p>{intl.formatMessage(messages.dropFileHere)}</p>}\r\n            {!acceptedFiles ||\r\n              (acceptedFiles.length === 0 && !isDragActive && (\r\n                <p>{intl.formatMessage(messages.dragAndDropMessage)}</p>\r\n              ))}\r\n            {acceptedFiles && acceptedFiles.length > 0 && !isDragActive && (\r\n              <>\r\n                <p>\r\n                  <i className='far fa-file fa-2x' />\r\n                </p>\r\n                <p>{acceptedFiles[0].path}</p>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {activeStep === 2 && (\r\n        <form onSubmit={handleSubmit(mapOnboardingFields)}>\r\n          <Box w='100%' mb='3'>\r\n            <Alert status='info'>\r\n              <AlertIcon />\r\n              <AlertDescription>\r\n                Please thoroughly check the fields and align the values before moving to the next step.\r\n              </AlertDescription>\r\n            </Alert>\r\n          </Box>\r\n\r\n          <Box display='flex' justifyContent='space-between' flexWrap='wrap'>\r\n          {acceptedWorkshopsOnboardingHeaders.map((header) => { \r\n            return (\r\n            <Box key={header} width={{ base: '100%', lg: '48%' }} mt={6}>\r\n              <label className='block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1'>\r\n                {header}\r\n              </label>\r\n              <Select\r\n                {...register(`${header}`, {\r\n                  required: requiredFields.includes(header),\r\n                })}\r\n                defaultValue={actualPartOnboardingHeaders.find(actualHeader => `${actualHeader}`.toLowerCase().indexOf(`${header}`.toLowerCase()) !== -1 || new RegExp(actualHeader, 'ig').test(header)) ?? 'No value'}\r\n                placeholder='Select a value'\r\n              >\r\n                {actualPartOnboardingHeaders.map((actualHeader) => (\r\n                  <option key={actualHeader}>{actualHeader}</option>\r\n                ))}\r\n              </Select>\r\n              {errors && errors[header] && (\r\n                <span className='text-youtube-regular text-sm'>{header}</span>\r\n              )}\r\n            </Box>\r\n          )})}\r\n          </Box>\r\n        </form>\r\n      )}\r\n\r\n      {activeStep === 3 && (\r\n        <>\r\n          <Box w='100%' p={4}>\r\n            <Alert status='info'>\r\n              <AlertIcon />\r\n              <AlertTitle mr={2}>Valid Rows</AlertTitle>\r\n              <AlertDescription>\r\n                There are total {mappedSheetDataValid.length}/{sheetData.length}{' '}\r\n                rows which are valid\r\n              </AlertDescription>\r\n              {/* <CloseButton position=\"absolute\" right=\"8px\" top=\"8px\" /> */}\r\n            </Alert>\r\n          </Box>\r\n\r\n          {mappedSheetDataInvalid.length > 0 && (\r\n            <Box w='100%' p={4}>\r\n              <Alert status='error'>\r\n                <AlertIcon />\r\n                <AlertTitle mr={2}>Invalid Rows</AlertTitle>\r\n                <AlertDescription>\r\n                  There are total {mappedSheetDataInvalid.length}/\r\n                  {sheetData.length} rows which are invalid\r\n                </AlertDescription>\r\n                {/* <CloseButton position=\"absolute\" right=\"8px\" top=\"8px\" /> */}\r\n              </Alert>\r\n            </Box>\r\n          )}\r\n          {mappedSheetDataInvalid.length > 0 && (\r\n            <Box w='100%' p={4} style={{ overflowX: 'auto' }}>\r\n              <table\r\n                variant='striped'\r\n                // style={{ backgroundColor: \"teal\" }}\r\n                size='lg'\r\n                className='table-auto border-collapse border border-green-800'\r\n              >\r\n                <thead style={{ backgroundColor: '#1e293b', color: '#ffffff' }}>\r\n                  <tr>\r\n                    {acceptedWorkshopsOnboardingHeaders.map((header) => {\r\n                      if (\r\n                        header === 'isInvalid' ||\r\n                        header === 'gallery' ||\r\n                        header === 'locationId' ||\r\n                        header === 'contactId' ||\r\n                        header === 'location' ||\r\n                        header === 'contact'\r\n                      ) {\r\n                      } else\r\n                        return (\r\n                          <th\r\n                            key={header}\r\n                            className='px-2 text-center'\r\n                            style={{ width: '110px', minWidth: '110px' }}\r\n                          >\r\n                            {header}\r\n                          </th>\r\n                        );\r\n                    })}\r\n                  </tr>\r\n                </thead>\r\n                <tbody style={{ overflow: 'auto' }}>\r\n                  {mappedSheetDataInvalid.map((row) => {\r\n                    return (\r\n                      <tr key={row.branchName + row.branchCode}>\r\n                        {Object.keys(row).map((header, index) => {\r\n                          if (header === 'isInvalid') {\r\n                          } else\r\n                            return (\r\n                              <td\r\n                                key={index}\r\n                                className='px-2 text-center'\r\n                                style={{\r\n                                  width: '110px',\r\n                                  minWidth: '110px',\r\n                                  color:\r\n                                    row[header] === 'invalid' ||\r\n                                    row[header] === 'Mandatory*' ||\r\n                                    row[header] === 'already exist'\r\n                                      ? 'red'\r\n                                      : 'black',\r\n                                }}\r\n                              >\r\n                                {row[header]}\r\n                              </td>\r\n                            );\r\n                        })}\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </Box>\r\n          )}\r\n        </>\r\n      )}\r\n      <div className='bulkButtonsContainer'>\r\n        <Button\r\n          onClick={handleSubmit(mapOnboardingFields)}\r\n          style={{\r\n            backgroundColor: '#1e293b',\r\n            color: '#ffffff',\r\n            marginLeft: '10px',\r\n          }}\r\n          disabled={sheetData.length < 1 || disableNext}\r\n        >\r\n          Next\r\n        </Button>\r\n        <Button\r\n          variant='clrBtn'\r\n          type='reset'\r\n          onClick={() => {\r\n            setActiveStep(1);\r\n            acceptedFiles.length = 0;\r\n            acceptedFiles.splice(0, acceptedFiles.length);\r\n            if (inputRef.current) {\r\n              inputRef.current.value = '';\r\n            }\r\n            setSheetData([]);\r\n            setMappedSheetDataValid([]);\r\n            setMappedSheetDataInvalid([]);\r\n            setDisableNext(false);\r\n            reset(\r\n              {},\r\n              {\r\n                keepDirty: false,\r\n                keepErrors: false,\r\n                keepValues: false,\r\n              },\r\n            );\r\n          }}\r\n        >\r\n          Clear\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withToast(WorkShopBulk);\r\n"]},"metadata":{},"sourceType":"module"}