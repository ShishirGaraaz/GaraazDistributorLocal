{"ast":null,"code":"\"use strict\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NegativeSpaceLens = void 0;\n\nconst jsx_runtime_1 = require(\"react/jsx-runtime\");\n\nconst react_1 = require(\"react\");\n\nconst LensTop_1 = require(\"./LensTop\");\n\nconst LensLeft_1 = require(\"./LensLeft\");\n\nconst LensRight_1 = require(\"./LensRight\");\n\nconst LensBottom_1 = require(\"./LensBottom\");\n\nexports.NegativeSpaceLens = (0, react_1.forwardRef)((props, ref) => {\n  const {\n    cursorOffset,\n    fadeDurationInMs,\n    isActive,\n    isPositionOutside,\n    position,\n    style: userSpecifiedStyle\n  } = props,\n        rest = __rest(props, [\"cursorOffset\", \"fadeDurationInMs\", \"isActive\", \"isPositionOutside\", \"position\", \"style\"]);\n\n  const compositLensStyle = Object.assign({\n    backgroundColor: 'rgba(0,0,0,.4)'\n  }, userSpecifiedStyle);\n  return (0, jsx_runtime_1.jsxs)(\"div\", Object.assign({}, rest, {\n    children: [(0, jsx_runtime_1.jsx)(LensTop_1.LensTop, Object.assign({}, props, {\n      ref: ref,\n      style: compositLensStyle\n    }), void 0), (0, jsx_runtime_1.jsx)(LensLeft_1.LensLeft, Object.assign({}, props, {\n      ref: ref,\n      style: compositLensStyle\n    }), void 0), (0, jsx_runtime_1.jsx)(LensRight_1.LensRight, Object.assign({}, props, {\n      ref: ref,\n      style: compositLensStyle\n    }), void 0), (0, jsx_runtime_1.jsx)(LensBottom_1.LensBottom, Object.assign({}, props, {\n      ref: ref,\n      style: compositLensStyle\n    }), void 0)]\n  }), void 0);\n});\nexports.NegativeSpaceLens.displayName = 'NegativeSpaceLens';","map":{"version":3,"sources":["../../../../src/lens/negative-space/index.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,MAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AAEA,MAAA,SAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AACA,MAAA,UAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;AACA,MAAA,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;AACA,MAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AAGa,OAAA,CAAA,iBAAA,GAAoB,CAAA,GAAA,OAAA,CAAA,UAAA,EAAwC,CAAC,KAAD,EAAmB,GAAnB,KAAuC;AAC5G,QAAM;AACF,IAAA,YADE;AAEF,IAAA,gBAFE;AAGF,IAAA,QAHE;AAIF,IAAA,iBAJE;AAKF,IAAA,QALE;AAMF,IAAA,KAAK,EAAE;AANL,MAQF,KARJ;AAAA,QAOO,IAAI,GAAA,MAAA,CACP,KADO,EAPL,CAAA,cAAA,EAAA,kBAAA,EAAA,UAAA,EAAA,mBAAA,EAAA,UAAA,EAAA,OAAA,CAOK,CAPX;;AAUA,QAAM,iBAAiB,GAAA,MAAA,CAAA,MAAA,CAAA;AACnB,IAAA,eAAe,EAAE;AADE,GAAA,EAEhB,kBAFgB,CAAvB;AAKA,SACI,CAAA,GAAA,aAAA,CAAA,IAAA,EAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAS,IAAT,EAAa;AAAA,IAAA,QAAA,EAAA,CACT,CAAA,GAAA,aAAA,CAAA,GAAA,EAAC,SAAA,CAAA,OAAD,EAAQ,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,KAAL,EAAU;AAAE,MAAA,GAAG,EAAE,GAAP;AAAY,MAAA,KAAK,EAAE;AAAnB,KAAV,CAAR,EAAsD,KAAA,CAAtD,CADS,EAET,CAAA,GAAA,aAAA,CAAA,GAAA,EAAC,UAAA,CAAA,QAAD,EAAS,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,KAAL,EAAU;AAAE,MAAA,GAAG,EAAE,GAAP;AAAY,MAAA,KAAK,EAAE;AAAnB,KAAV,CAAT,EAAuD,KAAA,CAAvD,CAFS,EAGT,CAAA,GAAA,aAAA,CAAA,GAAA,EAAC,WAAA,CAAA,SAAD,EAAU,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,KAAL,EAAU;AAAE,MAAA,GAAG,EAAE,GAAP;AAAY,MAAA,KAAK,EAAE;AAAnB,KAAV,CAAV,EAAwD,KAAA,CAAxD,CAHS,EAIT,CAAA,GAAA,aAAA,CAAA,GAAA,EAAC,YAAA,CAAA,UAAD,EAAW,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,KAAL,EAAU;AAAE,MAAA,GAAG,EAAE,GAAP;AAAY,MAAA,KAAK,EAAE;AAAnB,KAAV,CAAX,EAAyD,KAAA,CAAzD,CAJS;AAAA,GAAb,CAAA,EAIiE,KAAA,CAJjE,CADJ;AAQH,CAxBgC,CAApB;AA0Bb,OAAA,CAAA,iBAAA,CAAkB,WAAlB,GAAgC,mBAAhC","sourcesContent":["import { forwardRef } from 'react';\n\nimport { LensTop } from 'src/lens/negative-space/LensTop';\nimport { LensLeft } from 'src/lens/negative-space/LensLeft';\nimport { LensRight } from 'src/lens/negative-space/LensRight';\nimport { LensBottom } from 'src/lens/negative-space/LensBottom';\nimport type { LensProps } from 'src/types';\n\nexport const NegativeSpaceLens = forwardRef<HTMLImageElement, LensProps>((props: LensProps, ref): JSX.Element => {\n    const {\n        cursorOffset,\n        fadeDurationInMs,\n        isActive,\n        isPositionOutside,\n        position,\n        style: userSpecifiedStyle,\n        ...rest\n    } = props;\n\n    const compositLensStyle = {\n        backgroundColor: 'rgba(0,0,0,.4)',\n        ...userSpecifiedStyle,\n    };\n\n    return (\n        <div {...rest}>\n            <LensTop {...props} ref={ref} style={compositLensStyle} />\n            <LensLeft {...props} ref={ref} style={compositLensStyle} />\n            <LensRight {...props} ref={ref} style={compositLensStyle} />\n            <LensBottom {...props} ref={ref} style={compositLensStyle} />\n        </div>\n    );\n});\n\nNegativeSpaceLens.displayName = 'NegativeSpaceLens';\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}