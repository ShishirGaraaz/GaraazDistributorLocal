{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Work\\\\garaaz-distributor\\\\src\\\\containers\\\\BranchList\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useMemo } from 'react';\nimport { useIntl } from 'react-intl';\nimport { useSelector, useDispatch } from 'react-redux';\nimport BranchItemCard from '../../components/BranchCard';\nimport messages from './messages';\nimport toast from 'react-hot-toast';\nimport Error from '../../components/Error';\nimport serverErrorIllustrator from \"../../assets/img/serverError.svg\";\nimport { optionsProp } from './constants';\nimport { Button } from '@chakra-ui/button';\nimport { Link } from 'react-router-dom';\nimport AdditionOption from '../../utils/AdditionOptions';\nimport './style.css';\nimport { Box, Image, Center, MenuButton, MenuList, Menu, MenuItem } from '@chakra-ui/react';\nimport DynamicTable from '../../components/DynamicTable';\nimport { Loading } from '../../components/Loading';\nimport { FiMoreVertical } from 'react-icons/fi';\nimport { useHistory } from 'react-router';\nimport { ROUTES } from '../../routes';\nimport ModifiedTableTop, { SingleInput } from '../../components/TableTop/ModifiedTableTop';\nimport downloadExcel from '../../utils/downloadExcel';\nimport { selectGlobalState } from '../../globalSlice';\nimport garaazLogo from '../../images/placeholderImage.jpg';\nimport { getBranchList } from './actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BranchList = _ref => {\n  _s();\n\n  let {\n    notification\n  } = _ref;\n  // const [branches, setBranches] = useState([]);\n  const [pageCount, setPageCount] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [totalCount, setTotalCount] = useState(0);\n  const [data, setData] = useState([]);\n  const {\n    branches,\n    isDistributor\n  } = useSelector(selectGlobalState);\n  const [tableData, setTableData] = useState([]);\n  const [serverError, setServerError] = useState(false);\n  const auth = useSelector(state => state.auth);\n  const [loading, setLoading] = useState(false);\n  const intl = useIntl();\n  const history = useHistory();\n  const dispatcher = useDispatch();\n  const [filters, setFilters] = useState({\n    branchCode: '',\n    branchName: ''\n  });\n  console.log({\n    isDistributor\n  });\n\n  const getBranches = async () => {\n    try {\n      setLoading(true);\n      setTableData([...branches].reverse());\n      setServerError(false);\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n      setServerError(true);\n      toast('Something went wrong!');\n    }\n  }; // const fetchAllBranches = (params) => {\n  //   (async () => {\n  //     setIsLoading(true);\n  //     try {\n  //       const response = await dispatcher(getBranchList({ auth, params }));\n  //       setData(response.data[0].data);\n  //       setTableData(response.data[0].data);\n  //       params.limit = params?.limit ? params?.limit : 10;\n  //       setPageCount(Math.ceil(response.data[0]?.totalCount?.count / params?.limit));\n  //       setTotalCount(response.data[0]?.totalCount?.count);\n  //       setIsLoading(false);\n  //     } catch (error) {\n  //       setIsLoading(false);\n  //       if (error.response) {\n  //         notification({\n  //           status: 'error',\n  //           description:\n  //             error.response.data.message ??\n  //             intl.formatMessage(messages.errorMessage),\n  //         });\n  //       }\n  //     }\n  //   })();\n  // };\n\n\n  useEffect(() => {\n    getBranches();\n  }, [branches]);\n\n  const renderImage = value => {\n    return /*#__PURE__*/_jsxDEV(Center, {\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Image, {\n        width: \"5vw\",\n        src: value.startsWith('https') ? value : garaazLogo,\n        alt: \"part\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this);\n  };\n\n  const columns = useMemo(() => [{\n    Header: 'S. No',\n    accessor: 'sno',\n    Cell: allData => {\n      var _allData$row;\n\n      return /*#__PURE__*/_jsxDEV(Box, {\n        children: (allData === null || allData === void 0 ? void 0 : (_allData$row = allData.row) === null || _allData$row === void 0 ? void 0 : _allData$row.index) + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 18\n      }, this);\n    }\n  }, {\n    Header: 'Image',\n    accessor: row => {\n      var _row$gallery, _row$gallery$;\n\n      return ((_row$gallery = row.gallery) === null || _row$gallery === void 0 ? void 0 : _row$gallery.length) > 0 ? (_row$gallery$ = row.gallery[0]) === null || _row$gallery$ === void 0 ? void 0 : _row$gallery$.path : 'thumbnail';\n    },\n    Cell: _ref2 => {\n      let {\n        value\n      } = _ref2;\n      return renderImage(value);\n    }\n  }, {\n    Header: 'Branch Code',\n    accessor: 'branchCode'\n  }, {\n    Header: 'Branch Name',\n    accessor: 'branchName'\n  }, {\n    Header: 'Branch Address',\n    accessor: 'location[0].addressLine1'\n  }, {\n    Header: 'Mobile Number',\n    accessor: 'contact[0].alternateNumbers'\n  }, {\n    Header: 'Actions',\n    accessor: row => row._id,\n    Cell: allData => {\n      return /*#__PURE__*/_jsxDEV(Menu, {\n        children: [/*#__PURE__*/_jsxDEV(MenuButton, {\n          p: 0,\n          as: Button,\n          children: /*#__PURE__*/_jsxDEV(Center, {\n            children: /*#__PURE__*/_jsxDEV(FiMoreVertical, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(MenuList, {\n          children: /*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: () => history.push(`/branch/${allData.row.original._id}/edit`),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }, this);\n    }\n  }], []);\n  const isEmployeeCol = useMemo(() => [{\n    Header: 'S. No',\n    accessor: 'sno',\n    Cell: allData => {\n      var _allData$row2;\n\n      return /*#__PURE__*/_jsxDEV(Box, {\n        children: (allData === null || allData === void 0 ? void 0 : (_allData$row2 = allData.row) === null || _allData$row2 === void 0 ? void 0 : _allData$row2.index) + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 18\n      }, this);\n    }\n  }, {\n    Header: 'Image',\n    accessor: row => {\n      var _row$gallery2, _row$gallery$2;\n\n      return ((_row$gallery2 = row.gallery) === null || _row$gallery2 === void 0 ? void 0 : _row$gallery2.length) > 0 ? (_row$gallery$2 = row.gallery[0]) === null || _row$gallery$2 === void 0 ? void 0 : _row$gallery$2.path : 'thumbnail';\n    },\n    Cell: _ref3 => {\n      let {\n        value\n      } = _ref3;\n      return renderImage(value);\n    }\n  }, {\n    Header: 'Branch Code',\n    accessor: 'branchCode'\n  }, {\n    Header: 'Branch Name',\n    accessor: 'branchName'\n  }, {\n    Header: 'Branch Address',\n    accessor: 'location[0].addressLine1'\n  }, {\n    Header: 'Mobile Number',\n    accessor: 'contact[0].alternateNumbers'\n  }], []);\n  const inputData = useMemo(() => ({\n    title: 'Search',\n    type: 'text',\n    placeholder: '',\n    name: 'branchSearch',\n    width: '20%'\n  }), []);\n\n  const handleTableTopChange = async (e, name) => {\n    const value = e.hasOwnProperty('target') ? e.target.value : e;\n    const newFilters = { ...filters,\n      [name]: `${value}`.trim()\n    };\n    setFilters(newFilters);\n    setTableData(branches.filter(branch => {\n      return `${branch.branchCode}`.toLowerCase().indexOf(newFilters.branchSearch.toLowerCase()) !== -1 || `${branch.branchName}`.toLowerCase().indexOf(newFilters.branchSearch.toLowerCase()) !== -1;\n    }));\n  };\n\n  const handleExport = () => {\n    const refinedTableData = [...tableData].map(data => {\n      var _data$location$, _data$contact$;\n\n      return {\n        'Branch Name': data.branchName,\n        'Branch Code': data.branchCode,\n        'Branch Address': (_data$location$ = data.location[0]) === null || _data$location$ === void 0 ? void 0 : _data$location$.addressLine1,\n        'Mobile Number': (_data$contact$ = data.contact[0]) === null || _data$contact$ === void 0 ? void 0 : _data$contact$.alternateNumbers.join(',')\n      };\n    });\n    downloadExcel(refinedTableData, 'Branches.xlsx');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    minHeight: \"68vh\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      children: branches.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(SingleInput, {\n          inputObj: inputData,\n          onChange: handleTableTopChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this), isDistributor && /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/branch/add\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"addition\",\n              size: \"md\",\n              children: intl.formatMessage(messages.addBranch)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: ROUTES.BRANCH_ADD_BULK,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"addition\",\n              size: \"md\",\n              ml: 4,\n              children: intl.formatMessage(messages.uploadBranches)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 17\n          }, this), isDistributor && /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleExport,\n            variant: \"addition\",\n            size: \"md\",\n            ml: 4,\n            children: intl.formatMessage(messages.exportToExcel)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-auto  pb-6 pt-0\",\n      children: serverError ? /*#__PURE__*/_jsxDEV(Error, {\n        onRetry: getBranches,\n        title: \"Server Error\",\n        message: \"Something went wrong, please try again!\",\n        illustrator: serverErrorIllustrator\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this) : branches.length < 1 ? loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(AdditionOption, { ...optionsProp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Box, {\n        mt: 5,\n        children: /*#__PURE__*/_jsxDEV(DynamicTable, {\n          columns: isDistributor ? columns : isEmployeeCol // columns = {columns}\n          ,\n          data: [...tableData] // fetchData={fetchAllBranches}\n          ,\n          fetchData: () => {\n            console.log(\"fetching data\");\n          },\n          skipPageReset: true // totalCount={totalCount}\n          // controlledPageCount={pageCount}\n          // loading={isLoading}\n          //loading={tableLoading}\n          ,\n          hidePagination: true,\n          params: {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BranchList, \"xQdtOev9/mTA3K4VMKBqsPgGgmU=\", false, function () {\n  return [useSelector, useSelector, useIntl, useHistory, useDispatch];\n});\n\n_c = BranchList;\nexport default BranchList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BranchList\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/containers/BranchList/index.js"],"names":["React","useEffect","useState","useMemo","useIntl","useSelector","useDispatch","BranchItemCard","messages","toast","Error","optionsProp","Button","Link","AdditionOption","Box","Image","Center","MenuButton","MenuList","Menu","MenuItem","DynamicTable","Loading","FiMoreVertical","useHistory","ROUTES","ModifiedTableTop","SingleInput","downloadExcel","selectGlobalState","garaazLogo","getBranchList","BranchList","notification","pageCount","setPageCount","isLoading","setIsLoading","totalCount","setTotalCount","data","setData","branches","isDistributor","tableData","setTableData","serverError","setServerError","auth","state","loading","setLoading","intl","history","dispatcher","filters","setFilters","branchCode","branchName","console","log","getBranches","reverse","error","renderImage","value","startsWith","columns","Header","accessor","Cell","allData","row","index","gallery","length","path","_id","push","original","isEmployeeCol","inputData","title","type","placeholder","name","width","handleTableTopChange","e","hasOwnProperty","target","newFilters","trim","filter","branch","toLowerCase","indexOf","branchSearch","handleExport","refinedTableData","map","location","addressLine1","contact","alternateNumbers","join","formatMessage","addBranch","BRANCH_ADD_BULK","uploadBranches","exportToExcel","serverErrorIllustrator"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,OAArC,QAAoD,OAApD;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,WAAT,EAAqBC,WAArB,QAAwC,aAAxC;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;;AAEA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAO,aAAP;AACA,SACEC,GADF,EAEEC,KAFF,EAGEC,MAHF,EAIEC,UAJF,EAKEC,QALF,EAMEC,IANF,EAOEC,QAPF,QAQO,kBARP;AASA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,SAASC,OAAT,QAAwB,0BAAxB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,OAAOC,gBAAP,IACEC,WADF,QAEO,4CAFP;AAGA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AAEA,OAAOC,UAAP,MAAuB,mCAAvB;AACA,SAASC,aAAT,QAA8B,WAA9B;;;AAEA,MAAMC,UAAU,GAAG,QAAoB;AAAA;;AAAA,MAAnB;AAACC,IAAAA;AAAD,GAAmB;AACrC;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BlC,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACmC,SAAD,EAAYC,YAAZ,IAA4BpC,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACqC,UAAD,EAAaC,aAAb,IAA8BtC,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACuC,IAAD,EAAOC,OAAP,IAAkBxC,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAEyC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA8BvC,WAAW,CAACyB,iBAAD,CAA/C;AACA,QAAM,CAACe,SAAD,EAAYC,YAAZ,IAA4B5C,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAC6C,WAAD,EAAcC,cAAd,IAAgC9C,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM+C,IAAI,GAAG5C,WAAW,CAAE6C,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBlD,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMmD,IAAI,GAAGjD,OAAO,EAApB;AACA,QAAMkD,OAAO,GAAG7B,UAAU,EAA1B;AACA,QAAM8B,UAAU,GAAGjD,WAAW,EAA9B;AACA,QAAM,CAACkD,OAAD,EAAUC,UAAV,IAAwBvD,QAAQ,CAAC;AACrCwD,IAAAA,UAAU,EAAE,EADyB;AAErCC,IAAAA,UAAU,EAAE;AAFyB,GAAD,CAAtC;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEjB,IAAAA;AAAF,GAAZ;;AAEA,QAAMkB,WAAW,GAAG,YAAY;AAC9B,QAAI;AACFV,MAAAA,UAAU,CAAC,IAAD,CAAV;AAEAN,MAAAA,YAAY,CAAC,CAAC,GAAGH,QAAJ,EAAcoB,OAAd,EAAD,CAAZ;AACAf,MAAAA,cAAc,CAAC,KAAD,CAAd;AACAI,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAND,CAME,OAAOY,KAAP,EAAc;AACdZ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAJ,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAvC,MAAAA,KAAK,CAAC,uBAAD,CAAL;AACD;AACF,GAZD,CArBqC,CAmCrC;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACd6D,IAAAA,WAAW;AACZ,GAFQ,EAEN,CAACnB,QAAD,CAFM,CAAT;;AAIA,QAAMsB,WAAW,GAAIC,KAAD,IAAW;AAC7B,wBACE,QAAC,MAAD;AAAQ,MAAA,cAAc,EAAC,QAAvB;AAAA,6BACE,QAAC,KAAD;AACE,QAAA,KAAK,EAAC,KADR;AAEE,QAAA,GAAG,EAAEA,KAAK,CAACC,UAAN,CAAiB,OAAjB,IAA4BD,KAA5B,GAAoCnC,UAF3C;AAGE,QAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AASD,GAVD;;AAYA,QAAMqC,OAAO,GAAGjE,OAAO,CACrB,MAAM,CACJ;AACEkE,IAAAA,MAAM,EAAE,OADV;AAEEC,IAAAA,QAAQ,EAAE,KAFZ;AAGEC,IAAAA,IAAI,EAAGC,OAAD,IAAa;AAAA;;AACjB,0BAAO,QAAC,GAAD;AAAA,kBAAM,CAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,4BAAAA,OAAO,CAAEC,GAAT,8DAAcC,KAAd,IAAsB;AAA5B;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AALH,GADI,EAQJ;AACEL,IAAAA,MAAM,EAAE,OADV;AAEEC,IAAAA,QAAQ,EAAGG,GAAD;AAAA;;AAAA,aACR,iBAAAA,GAAG,CAACE,OAAJ,8DAAaC,MAAb,IAAsB,CAAtB,oBAA0BH,GAAG,CAACE,OAAJ,CAAY,CAAZ,CAA1B,kDAA0B,cAAgBE,IAA1C,GAAiD,WADzC;AAAA,KAFZ;AAIEN,IAAAA,IAAI,EAAE;AAAA,UAAC;AAAEL,QAAAA;AAAF,OAAD;AAAA,aAAeD,WAAW,CAACC,KAAD,CAA1B;AAAA;AAJR,GARI,EAeJ;AACEG,IAAAA,MAAM,EAAE,aADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GAfI,EAmBJ;AACED,IAAAA,MAAM,EAAE,aADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GAnBI,EAuBJ;AACED,IAAAA,MAAM,EAAE,gBADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GAvBI,EA2BJ;AACED,IAAAA,MAAM,EAAE,eADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GA3BI,EA+BJ;AACED,IAAAA,MAAM,EAAE,SADV;AAEEC,IAAAA,QAAQ,EAAGG,GAAD,IAASA,GAAG,CAACK,GAFzB;AAGEP,IAAAA,IAAI,EAAGC,OAAD,IAAa;AACjB,0BACE,QAAC,IAAD;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,CAAC,EAAE,CAAf;AAAkB,UAAA,EAAE,EAAE5D,MAAtB;AAAA,iCACE,QAAC,MAAD;AAAA,mCACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE,QAAC,QAAD;AAAA,iCACE,QAAC,QAAD;AACE,YAAA,OAAO,EAAE,MACP0C,OAAO,CAACyB,IAAR,CAAc,WAAUP,OAAO,CAACC,GAAR,CAAYO,QAAZ,CAAqBF,GAAI,OAAjD,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAmBD;AAvBH,GA/BI,CADe,EA0DrB,EA1DqB,CAAvB;AA6DA,QAAMG,aAAa,GAAG9E,OAAO,CAC3B,MAAM,CACJ;AACEkE,IAAAA,MAAM,EAAE,OADV;AAEEC,IAAAA,QAAQ,EAAE,KAFZ;AAGEC,IAAAA,IAAI,EAAGC,OAAD,IAAa;AAAA;;AACjB,0BAAO,QAAC,GAAD;AAAA,kBAAM,CAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,6BAAAA,OAAO,CAAEC,GAAT,gEAAcC,KAAd,IAAsB;AAA5B;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AALH,GADI,EAQJ;AACEL,IAAAA,MAAM,EAAE,OADV;AAEEC,IAAAA,QAAQ,EAAGG,GAAD;AAAA;;AAAA,aACR,kBAAAA,GAAG,CAACE,OAAJ,gEAAaC,MAAb,IAAsB,CAAtB,qBAA0BH,GAAG,CAACE,OAAJ,CAAY,CAAZ,CAA1B,mDAA0B,eAAgBE,IAA1C,GAAiD,WADzC;AAAA,KAFZ;AAIEN,IAAAA,IAAI,EAAE;AAAA,UAAC;AAAEL,QAAAA;AAAF,OAAD;AAAA,aAAeD,WAAW,CAACC,KAAD,CAA1B;AAAA;AAJR,GARI,EAeJ;AACEG,IAAAA,MAAM,EAAE,aADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GAfI,EAmBJ;AACED,IAAAA,MAAM,EAAE,aADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GAnBI,EAuBJ;AACED,IAAAA,MAAM,EAAE,gBADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GAvBI,EA2BJ;AACED,IAAAA,MAAM,EAAE,eADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GA3BI,CADqB,EAiC3B,EAjC2B,CAA7B;AAoCA,QAAMY,SAAS,GAAG/E,OAAO,CACvB,OAAO;AACLgF,IAAAA,KAAK,EAAE,QADF;AAELC,IAAAA,IAAI,EAAE,MAFD;AAGLC,IAAAA,WAAW,EAAE,EAHR;AAILC,IAAAA,IAAI,EAAE,cAJD;AAKLC,IAAAA,KAAK,EAAE;AALF,GAAP,CADuB,EASvB,EATuB,CAAzB;;AAYA,QAAMC,oBAAoB,GAAG,OAAOC,CAAP,EAAUH,IAAV,KAAmB;AAC9C,UAAMpB,KAAK,GAAGuB,CAAC,CAACC,cAAF,CAAiB,QAAjB,IAA6BD,CAAC,CAACE,MAAF,CAASzB,KAAtC,GAA8CuB,CAA5D;AACA,UAAMG,UAAU,GAAG,EAAE,GAAGpC,OAAL;AAAc,OAAC8B,IAAD,GAAS,GAAEpB,KAAM,EAAT,CAAW2B,IAAX;AAAtB,KAAnB;AACApC,IAAAA,UAAU,CAACmC,UAAD,CAAV;AAEA9C,IAAAA,YAAY,CACVH,QAAQ,CAACmD,MAAT,CAAiBC,MAAD,IAAY;AAC1B,aACG,GAAEA,MAAM,CAACrC,UAAW,EAArB,CACGsC,WADH,GAEGC,OAFH,CAEWL,UAAU,CAACM,YAAX,CAAwBF,WAAxB,EAFX,MAEsD,CAAC,CAFvD,IAGC,GAAED,MAAM,CAACpC,UAAW,EAArB,CACGqC,WADH,GAEGC,OAFH,CAEWL,UAAU,CAACM,YAAX,CAAwBF,WAAxB,EAFX,MAEsD,CAAC,CANzD;AAQD,KATD,CADU,CAAZ;AAYD,GAjBD;;AAmBA,QAAMG,YAAY,GAAG,MAAM;AACzB,UAAMC,gBAAgB,GAAG,CAAC,GAAGvD,SAAJ,EAAewD,GAAf,CAAoB5D,IAAD,IAAU;AAAA;;AACpD,aAAO;AACL,uBAAeA,IAAI,CAACkB,UADf;AAEL,uBAAelB,IAAI,CAACiB,UAFf;AAGL,6CAAkBjB,IAAI,CAAC6D,QAAL,CAAc,CAAd,CAAlB,oDAAkB,gBAAkBC,YAH/B;AAIL,2CAAiB9D,IAAI,CAAC+D,OAAL,CAAa,CAAb,CAAjB,mDAAiB,eAAiBC,gBAAjB,CAAkCC,IAAlC,CAAuC,GAAvC;AAJZ,OAAP;AAMD,KAPwB,CAAzB;AAQA7E,IAAAA,aAAa,CAACuE,gBAAD,EAAmB,eAAnB,CAAb;AACD,GAVD;;AAYA,sBACE,QAAC,GAAD;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE,QAAC,GAAD;AAAA,gBACGzD,QAAQ,CAACiC,MAAT,GAAkB,CAAlB,iBACC,QAAC,GAAD;AACE,QAAA,OAAO,EAAC,MADV;AAEE,QAAA,UAAU,EAAC,QAFb;AAGE,QAAA,cAAc,EAAC,eAHjB;AAAA,gCAKE,QAAC,WAAD;AAAa,UAAA,QAAQ,EAAEM,SAAvB;AAAkC,UAAA,QAAQ,EAAEM;AAA5C;AAAA;AAAA;AAAA;AAAA,gBALF,EAMG5C,aAAa,iBACZ,QAAC,GAAD;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,aAAT;AAAA,mCACE,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,UAAhB;AAA2B,cAAA,IAAI,EAAC,IAAhC;AAAA,wBACGS,IAAI,CAACsD,aAAL,CAAmBnG,QAAQ,CAACoG,SAA5B;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAME,QAAC,IAAD;AAAM,YAAA,EAAE,EAAElF,MAAM,CAACmF,eAAjB;AAAA,mCACE,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,UAAhB;AAA2B,cAAA,IAAI,EAAC,IAAhC;AAAqC,cAAA,EAAE,EAAE,CAAzC;AAAA,wBACGxD,IAAI,CAACsD,aAAL,CAAmBnG,QAAQ,CAACsG,cAA5B;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBANF,EAWElE,aAAa,iBAAK,QAAC,MAAD;AAChB,YAAA,OAAO,EAAEuD,YADO;AAEhB,YAAA,OAAO,EAAC,UAFQ;AAGhB,YAAA,IAAI,EAAC,IAHW;AAIhB,YAAA,EAAE,EAAE,CAJY;AAAA,sBAMf9C,IAAI,CAACsD,aAAL,CAAmBnG,QAAQ,CAACuG,aAA5B;AANe;AAAA;AAAA;AAAA;AAAA,kBAXpB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YADF,eAkCE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,gBACGhE,WAAW,gBACV,QAAC,KAAD;AACE,QAAA,OAAO,EAAEe,WADX;AAEE,QAAA,KAAK,EAAC,cAFR;AAGE,QAAA,OAAO,EAAC,yCAHV;AAIE,QAAA,WAAW,EAAEkD;AAJf;AAAA;AAAA;AAAA;AAAA,cADU,GAORrE,QAAQ,CAACiC,MAAT,GAAkB,CAAlB,GACFzB,OAAO,gBACL,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cADK,gBAGL,QAAC,cAAD,OAAoBxC;AAApB;AAAA;AAAA;AAAA;AAAA,cAJA,gBAOF,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA,+BACE,QAAC,YAAD;AACE,UAAA,OAAO,EAAEiC,aAAa,GAAGwB,OAAH,GAAaa,aADrC,CAEE;AAFF;AAGE,UAAA,IAAI,EAAE,CAAC,GAAGpC,SAAJ,CAHR,CAIE;AAJF;AAKE,UAAA,SAAS,EAAE,MAAI;AAACe,YAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAA6B,WAL/C;AAME,UAAA,aAAa,EAAE,IANjB,CAOE;AACA;AACA;AACA;AAVF;AAWE,UAAA,cAAc,EAAE,IAXlB;AAYE,UAAA,MAAM,EAAE;AAZV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAfJ;AAAA;AAAA;AAAA;AAAA,YAlCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsED,CAhSD;;GAAM5B,U;UAMgC5B,W,EAGvBA,W,EAEAD,O,EACGqB,U,EACGnB,W;;;KAbf2B,U;AAkSN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState, useMemo } from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport BranchItemCard from '../../components/BranchCard';\r\nimport messages from './messages';\r\nimport toast from 'react-hot-toast';\r\nimport Error from '../../components/Error';\r\nimport serverErrorIllustrator from '../../assets/img/serverError.svg';\r\nimport { optionsProp } from './constants';\r\nimport { Button } from '@chakra-ui/button';\r\nimport { Link } from 'react-router-dom';\r\nimport AdditionOption from '../../utils/AdditionOptions';\r\nimport './style.css';\r\nimport {\r\n  Box,\r\n  Image,\r\n  Center,\r\n  MenuButton,\r\n  MenuList,\r\n  Menu,\r\n  MenuItem,\r\n} from '@chakra-ui/react';\r\nimport DynamicTable from '../../components/DynamicTable';\r\nimport { Loading } from '../../components/Loading';\r\nimport { FiMoreVertical } from 'react-icons/fi';\r\nimport { useHistory } from 'react-router';\r\nimport { ROUTES } from '../../routes';\r\nimport ModifiedTableTop, {\r\n  SingleInput,\r\n} from '../../components/TableTop/ModifiedTableTop';\r\nimport downloadExcel from '../../utils/downloadExcel';\r\nimport { selectGlobalState } from '../../globalSlice';\r\n\r\nimport garaazLogo from '../../images/placeholderImage.jpg';\r\nimport { getBranchList } from './actions';\r\n\r\nconst BranchList = ({notification}) => {\r\n  // const [branches, setBranches] = useState([]);\r\n  const [pageCount, setPageCount] = useState(0);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [totalCount, setTotalCount] = useState(0);\r\n  const [data, setData] = useState([]);\r\n  const { branches, isDistributor } = useSelector(selectGlobalState);\r\n  const [tableData, setTableData] = useState([]);\r\n  const [serverError, setServerError] = useState(false);\r\n  const auth = useSelector((state) => state.auth);\r\n  const [loading, setLoading] = useState(false);\r\n  const intl = useIntl();\r\n  const history = useHistory();\r\n  const dispatcher = useDispatch();\r\n  const [filters, setFilters] = useState({\r\n    branchCode: '',\r\n    branchName: '',\r\n  });\r\n\r\n  console.log({ isDistributor });\r\n\r\n  const getBranches = async () => {  \r\n    try {\r\n      setLoading(true);\r\n\r\n      setTableData([...branches].reverse());\r\n      setServerError(false);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setServerError(true);\r\n      toast('Something went wrong!');\r\n    }\r\n  };\r\n\r\n  // const fetchAllBranches = (params) => {\r\n  //   (async () => {\r\n  //     setIsLoading(true);\r\n  //     try {\r\n  //       const response = await dispatcher(getBranchList({ auth, params }));\r\n  //       setData(response.data[0].data);\r\n  //       setTableData(response.data[0].data);\r\n\r\n  //       params.limit = params?.limit ? params?.limit : 10;\r\n  //       setPageCount(Math.ceil(response.data[0]?.totalCount?.count / params?.limit));\r\n\r\n  //       setTotalCount(response.data[0]?.totalCount?.count);\r\n  //       setIsLoading(false);\r\n  //     } catch (error) {\r\n  //       setIsLoading(false);\r\n  //       if (error.response) {\r\n  //         notification({\r\n  //           status: 'error',\r\n  //           description:\r\n  //             error.response.data.message ??\r\n  //             intl.formatMessage(messages.errorMessage),\r\n  //         });\r\n  //       }\r\n  //     }\r\n  //   })();\r\n  // };\r\n\r\n  useEffect(() => {\r\n    getBranches();\r\n  }, [branches]);\r\n\r\n  const renderImage = (value) => {\r\n    return (\r\n      <Center justifyContent='center'>\r\n        <Image\r\n          width='5vw'\r\n          src={value.startsWith('https') ? value : garaazLogo}\r\n          alt='part'\r\n        />\r\n      </Center>\r\n    );\r\n  };\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: 'S. No',\r\n        accessor: 'sno',\r\n        Cell: (allData) => {\r\n          return <Box>{allData?.row?.index + 1}</Box>;\r\n        },\r\n      },\r\n      {\r\n        Header: 'Image',\r\n        accessor: (row) =>\r\n          row.gallery?.length > 0 ? row.gallery[0]?.path : 'thumbnail',\r\n        Cell: ({ value }) => renderImage(value),\r\n      },\r\n\r\n      {\r\n        Header: 'Branch Code',\r\n        accessor: 'branchCode',\r\n      },\r\n      {\r\n        Header: 'Branch Name',\r\n        accessor: 'branchName',\r\n      },\r\n      {\r\n        Header: 'Branch Address',\r\n        accessor: 'location[0].addressLine1',\r\n      },\r\n      {\r\n        Header: 'Mobile Number',\r\n        accessor: 'contact[0].alternateNumbers',\r\n      },\r\n      {\r\n        Header: 'Actions',\r\n        accessor: (row) => row._id,\r\n        Cell: (allData) => {\r\n          return (\r\n            <Menu>\r\n              <MenuButton p={0} as={Button}>\r\n                <Center>\r\n                  <FiMoreVertical />\r\n                </Center>\r\n              </MenuButton>\r\n\r\n              <MenuList>\r\n                <MenuItem\r\n                  onClick={() =>\r\n                    history.push(`/branch/${allData.row.original._id}/edit`)\r\n                  }\r\n                >\r\n                  Edit\r\n                </MenuItem>\r\n              </MenuList>\r\n            </Menu>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n    [],\r\n  );\r\n\r\n  const isEmployeeCol = useMemo(\r\n    () => [\r\n      {\r\n        Header: 'S. No',\r\n        accessor: 'sno',\r\n        Cell: (allData) => {\r\n          return <Box>{allData?.row?.index + 1}</Box>;\r\n        },\r\n      },\r\n      {\r\n        Header: 'Image',\r\n        accessor: (row) =>\r\n          row.gallery?.length > 0 ? row.gallery[0]?.path : 'thumbnail',\r\n        Cell: ({ value }) => renderImage(value),\r\n      },\r\n\r\n      {\r\n        Header: 'Branch Code',\r\n        accessor: 'branchCode',\r\n      },\r\n      {\r\n        Header: 'Branch Name',\r\n        accessor: 'branchName',\r\n      },\r\n      {\r\n        Header: 'Branch Address',\r\n        accessor: 'location[0].addressLine1',\r\n      },\r\n      {\r\n        Header: 'Mobile Number',\r\n        accessor: 'contact[0].alternateNumbers',\r\n      },\r\n    ],\r\n    [],\r\n  );\r\n\r\n  const inputData = useMemo(\r\n    () => ({\r\n      title: 'Search',\r\n      type: 'text',\r\n      placeholder: '',\r\n      name: 'branchSearch',\r\n      width: '20%',\r\n    }),\r\n\r\n    [],\r\n  );\r\n\r\n  const handleTableTopChange = async (e, name) => {\r\n    const value = e.hasOwnProperty('target') ? e.target.value : e;\r\n    const newFilters = { ...filters, [name]: `${value}`.trim() };\r\n    setFilters(newFilters);\r\n\r\n    setTableData(\r\n      branches.filter((branch) => {\r\n        return (\r\n          `${branch.branchCode}`\r\n            .toLowerCase()\r\n            .indexOf(newFilters.branchSearch.toLowerCase()) !== -1 ||\r\n          `${branch.branchName}`\r\n            .toLowerCase()\r\n            .indexOf(newFilters.branchSearch.toLowerCase()) !== -1\r\n        );\r\n      }),\r\n    );\r\n  };\r\n\r\n  const handleExport = () => {\r\n    const refinedTableData = [...tableData].map((data) => {\r\n      return {\r\n        'Branch Name': data.branchName,\r\n        'Branch Code': data.branchCode,\r\n        'Branch Address': data.location[0]?.addressLine1,\r\n        'Mobile Number': data.contact[0]?.alternateNumbers.join(','),\r\n      };\r\n    });\r\n    downloadExcel(refinedTableData, 'Branches.xlsx');\r\n  };\r\n\r\n  return (\r\n    <Box minHeight='68vh'>\r\n      <Box>\r\n        {branches.length > 0 && (\r\n          <Box\r\n            display='flex'\r\n            alignItems='center'\r\n            justifyContent='space-between'\r\n          >\r\n            <SingleInput inputObj={inputData} onChange={handleTableTopChange} />\r\n            {isDistributor && (\r\n              <Box>\r\n                <Link to='/branch/add'>\r\n                  <Button variant='addition' size='md'>\r\n                    {intl.formatMessage(messages.addBranch)}\r\n                  </Button>\r\n                </Link>\r\n                <Link to={ROUTES.BRANCH_ADD_BULK}>\r\n                  <Button variant='addition' size='md' ml={4}>\r\n                    {intl.formatMessage(messages.uploadBranches)}\r\n                  </Button>\r\n                </Link>\r\n               {isDistributor && (<Button\r\n                  onClick={handleExport}\r\n                  variant='addition'\r\n                  size='md'\r\n                  ml={4}\r\n                >\r\n                  {intl.formatMessage(messages.exportToExcel)}\r\n                </Button>)}\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        )}\r\n      </Box>\r\n      <div className='flex-auto  pb-6 pt-0'>\r\n        {serverError ? (\r\n          <Error\r\n            onRetry={getBranches}\r\n            title='Server Error'\r\n            message='Something went wrong, please try again!'\r\n            illustrator={serverErrorIllustrator}\r\n          />\r\n        ) : branches.length < 1 ? (\r\n          loading ? (\r\n            <Loading />\r\n          ) : (\r\n            <AdditionOption {...optionsProp} />\r\n          )\r\n        ) : (\r\n          <Box mt={5}>\r\n            <DynamicTable\r\n              columns={isDistributor ? columns : isEmployeeCol}\r\n              // columns = {columns}\r\n              data={[...tableData]}\r\n              // fetchData={fetchAllBranches}\r\n              fetchData={()=>{console.log(\"fetching data\")}}\r\n              skipPageReset={true}\r\n              // totalCount={totalCount}\r\n              // controlledPageCount={pageCount}\r\n              // loading={isLoading}\r\n              //loading={tableLoading}\r\n              hidePagination={true}\r\n              params={{}}\r\n            />\r\n          </Box>\r\n        )}\r\n      </div>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default BranchList;\r\n"]},"metadata":{},"sourceType":"module"}