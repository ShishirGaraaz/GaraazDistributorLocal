{"ast":null,"code":"import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { _registerNode } from '../Global.js';\nimport { getNumberOrArrayOfNumbersValidator } from '../Validators.js';\nexport class Rect extends Shape {\n  _sceneFunc(context) {\n    var cornerRadius = this.cornerRadius(),\n        width = this.width(),\n        height = this.height();\n    context.beginPath();\n\n    if (!cornerRadius) {\n      context.rect(0, 0, width, height);\n    } else {\n      let topLeft = 0;\n      let topRight = 0;\n      let bottomLeft = 0;\n      let bottomRight = 0;\n\n      if (typeof cornerRadius === 'number') {\n        topLeft = topRight = bottomLeft = bottomRight = Math.min(cornerRadius, width / 2, height / 2);\n      } else {\n        topLeft = Math.min(cornerRadius[0] || 0, width / 2, height / 2);\n        topRight = Math.min(cornerRadius[1] || 0, width / 2, height / 2);\n        bottomRight = Math.min(cornerRadius[2] || 0, width / 2, height / 2);\n        bottomLeft = Math.min(cornerRadius[3] || 0, width / 2, height / 2);\n      }\n\n      context.moveTo(topLeft, 0);\n      context.lineTo(width - topRight, 0);\n      context.arc(width - topRight, topRight, topRight, Math.PI * 3 / 2, 0, false);\n      context.lineTo(width, height - bottomRight);\n      context.arc(width - bottomRight, height - bottomRight, bottomRight, 0, Math.PI / 2, false);\n      context.lineTo(bottomLeft, height);\n      context.arc(bottomLeft, height - bottomLeft, bottomLeft, Math.PI / 2, Math.PI, false);\n      context.lineTo(0, topLeft);\n      context.arc(topLeft, topLeft, topLeft, Math.PI, Math.PI * 3 / 2, false);\n    }\n\n    context.closePath();\n    context.fillStrokeShape(this);\n  }\n\n}\nRect.prototype.className = 'Rect';\n\n_registerNode(Rect);\n\nFactory.addGetterSetter(Rect, 'cornerRadius', 0, getNumberOrArrayOfNumbersValidator(4));","map":{"version":3,"sources":["../../src/shapes/Rect.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { _registerNode } from '../Global.js';\nimport { getNumberOrArrayOfNumbersValidator } from '../Validators.js';\nexport class Rect extends Shape {\n    _sceneFunc(context) {\n        var cornerRadius = this.cornerRadius(), width = this.width(), height = this.height();\n        context.beginPath();\n        if (!cornerRadius) {\n            context.rect(0, 0, width, height);\n        }\n        else {\n            let topLeft = 0;\n            let topRight = 0;\n            let bottomLeft = 0;\n            let bottomRight = 0;\n            if (typeof cornerRadius === 'number') {\n                topLeft = topRight = bottomLeft = bottomRight = Math.min(cornerRadius, width / 2, height / 2);\n            }\n            else {\n                topLeft = Math.min(cornerRadius[0] || 0, width / 2, height / 2);\n                topRight = Math.min(cornerRadius[1] || 0, width / 2, height / 2);\n                bottomRight = Math.min(cornerRadius[2] || 0, width / 2, height / 2);\n                bottomLeft = Math.min(cornerRadius[3] || 0, width / 2, height / 2);\n            }\n            context.moveTo(topLeft, 0);\n            context.lineTo(width - topRight, 0);\n            context.arc(width - topRight, topRight, topRight, (Math.PI * 3) / 2, 0, false);\n            context.lineTo(width, height - bottomRight);\n            context.arc(width - bottomRight, height - bottomRight, bottomRight, 0, Math.PI / 2, false);\n            context.lineTo(bottomLeft, height);\n            context.arc(bottomLeft, height - bottomLeft, bottomLeft, Math.PI / 2, Math.PI, false);\n            context.lineTo(0, topLeft);\n            context.arc(topLeft, topLeft, topLeft, Math.PI, (Math.PI * 3) / 2, false);\n        }\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n}\nRect.prototype.className = 'Rect';\n_registerNode(Rect);\nFactory.addGetterSetter(Rect, 'cornerRadius', 0, getNumberOrArrayOfNumbersValidator(4));\n//# sourceMappingURL=Rect.js.map"]},"metadata":{},"sourceType":"module"}