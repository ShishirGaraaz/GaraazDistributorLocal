{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Work\\\\garaaz-distributor\\\\src\\\\components\\\\NavbarAdmin\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport get from 'lodash/get';\nimport { changeLocale } from '../../containers/LanguageProvider/actions';\nimport { BsFillCloudMoonFill, BsCloudMoon } from 'react-icons/bs';\nimport { useColorMode, IconButton } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NavbarAdmin = _ref => {\n  _s();\n\n  let {\n    title = ''\n  } = _ref;\n  const {\n    colorMode,\n    toggleColorMode\n  } = useColorMode();\n  const [collapseOpen, setCollapseOpen] = useState(false);\n  const [collapseStyle, setCollapseStyle] = useState(undefined);\n  const [animation, setAnimation] = useState(false);\n  const collapseRef = useRef(null);\n\n  const startAnitmation = () => {\n    if (!animation) {\n      setAnimation(true);\n\n      if (collapseOpen) {\n        setCollapseStyle(0);\n        setTimeout(() => {\n          setAnimation(false);\n          setCollapseOpen(false);\n        }, 310);\n      } else {\n        setCollapseOpen(true);\n        setTimeout(() => {\n          setCollapseStyle(collapseRef.current.scrollHeight);\n        }, 10);\n        setTimeout(() => {\n          setAnimation(false);\n        }, 310);\n      }\n    }\n  };\n\n  const storeLocale = useSelector(state => get(state, 'language.locale', ''));\n  const dispatch = useDispatch();\n\n  const handleLanguageChange = event => {\n    dispatch(changeLocale(event.target.value));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"absolute top-0 left-0 w-full z-10 bg-red lg:flex-row lg:flex-nowrap lg:justify-start flex items-center py-3 px-4 bg-blueGray-800\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full mx-aut0 items-center flex justify-between lg:flex-nowrap flex-wrap lg:px-6 px-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-blueGray-800 lg:text-white text-sm uppercase inline-block font-semibold my-3\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), colorMode === 'light' ? /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: toggleColorMode,\n        children: /*#__PURE__*/_jsxDEV(BsCloudMoon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 72\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 34\n      }, this) : /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: toggleColorMode,\n        children: /*#__PURE__*/_jsxDEV(BsFillCloudMoonFill, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 140\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 102\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NavbarAdmin, \"Oxc4T8YiNNbxwPitRtsAd8Om5bk=\", false, function () {\n  return [useColorMode, useSelector, useDispatch];\n});\n\n_c = NavbarAdmin;\nNavbarAdmin.propTypes = {\n  title: PropTypes.string\n};\nexport default NavbarAdmin;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavbarAdmin\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/components/NavbarAdmin/index.js"],"names":["React","useState","useRef","PropTypes","useDispatch","useSelector","get","changeLocale","BsFillCloudMoonFill","BsCloudMoon","useColorMode","IconButton","NavbarAdmin","title","colorMode","toggleColorMode","collapseOpen","setCollapseOpen","collapseStyle","setCollapseStyle","undefined","animation","setAnimation","collapseRef","startAnitmation","setTimeout","current","scrollHeight","storeLocale","state","dispatch","handleLanguageChange","event","target","value","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport get from 'lodash/get';\r\nimport { changeLocale } from '../../containers/LanguageProvider/actions';\r\nimport { BsFillCloudMoonFill , BsCloudMoon} from 'react-icons/bs';\r\nimport { useColorMode, IconButton } from '@chakra-ui/react';\r\n\r\n\r\nconst NavbarAdmin = ({ title = '' }) => {\r\n    const {colorMode, toggleColorMode} = useColorMode()\r\n  const [collapseOpen, setCollapseOpen] = useState(false);\r\n  const [collapseStyle, setCollapseStyle] = useState(undefined);\r\n  const [animation, setAnimation] = useState(false);\r\n  const collapseRef = useRef(null);\r\n  const startAnitmation = () => {\r\n    if (!animation) {\r\n      setAnimation(true);\r\n      if (collapseOpen) {\r\n        setCollapseStyle(0);\r\n        setTimeout(() => {\r\n          setAnimation(false);\r\n          setCollapseOpen(false);\r\n        }, 310);\r\n      } else {\r\n        setCollapseOpen(true);\r\n        setTimeout(() => {\r\n          setCollapseStyle(collapseRef.current.scrollHeight);\r\n        }, 10);\r\n        setTimeout(() => {\r\n          setAnimation(false);\r\n        }, 310);\r\n      }\r\n    }\r\n  };\r\n\r\n  const storeLocale = useSelector(state => get(state, 'language.locale', ''));\r\n  const dispatch = useDispatch();\r\n  const handleLanguageChange = event => {\r\n    dispatch(changeLocale(event.target.value));\r\n  };\r\n\r\n  return (\r\n    <nav className=\"absolute top-0 left-0 w-full z-10 bg-red lg:flex-row lg:flex-nowrap lg:justify-start flex items-center py-3 px-4 bg-blueGray-800\">\r\n      <div className=\"w-full mx-aut0 items-center flex justify-between lg:flex-nowrap flex-wrap lg:px-6 px-4\">\r\n        <h3 className=\"text-blueGray-800 lg:text-white text-sm uppercase inline-block font-semibold my-3\">{title}</h3>\r\n        {colorMode === 'light' ? <IconButton onClick={toggleColorMode}><BsCloudMoon /></IconButton>: <IconButton onClick={toggleColorMode}><BsFillCloudMoonFill/></IconButton>}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavbarAdmin.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default NavbarAdmin;\r\n"]},"metadata":{},"sourceType":"module"}