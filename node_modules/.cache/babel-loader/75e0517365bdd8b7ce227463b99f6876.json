{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Work\\\\garaaz-distributor\\\\src\\\\containers\\\\Dashboard\\\\index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Box, useColorMode, Divider } from '@chakra-ui/react';\nimport { MdListAlt } from 'react-icons/md';\nimport moment from 'moment';\nimport getMoneyFormat from '../../utils/getMoneyFormat';\nimport { getCollectionStat, getInventoryStat, getOrderStat, getOutstandingStat, getSalesStat, selectDashboardState } from './slice';\nimport { IoStatsChart } from 'react-icons/io5';\nimport { FaBuffer } from 'react-icons/fa';\nimport { FiTrendingDown } from 'react-icons/fi';\nimport { AiOutlineUngroup } from 'react-icons/ai';\nimport { VscLayersActive } from 'react-icons/vsc';\nimport messages from './messages';\nimport ModifiedTableTop from '../../components/TableTop/ModifiedTableTop';\nimport { useHistory } from 'react-router-dom';\nimport { selectGlobalState } from '../../globalSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const {\n    isDistributor\n  } = useSelector(selectGlobalState);\n  const [inputValues, setInputValue] = useState({\n    end: moment().add(1, 'days').format('YYYY-MM-DD'),\n    start: moment().startOf('month').format('YYYY-MM-DD')\n  });\n  const intl = useIntl();\n  const auth = useSelector(state => state.auth);\n  const {\n    stats\n  } = useSelector(selectDashboardState);\n  const dispatcher = useDispatch();\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n  console.log({\n    isDistributor\n  });\n  const inputData = useMemo(() => [{\n    title: intl.formatMessage(messages.date),\n    type: 'date',\n    placeholder: 'Enter order No',\n    name: ['start', 'end'],\n    defaultValue: [moment().startOf('month').format('YYYY-MM-DD'), moment().format('YYYY-MM-DD')]\n  }], []);\n  useEffect(() => {\n    dispatcher(getCollectionStat({\n      auth\n    }));\n    dispatcher(getInventoryStat({\n      auth\n    }));\n    dispatcher(getOrderStat({\n      auth\n    }));\n    dispatcher(getOutstandingStat({\n      auth\n    }));\n    dispatcher(getSalesStat({\n      auth\n    }));\n  }, []);\n\n  const fetchAllStat = params => {\n    const promises = [dispatcher(getCollectionStat({\n      auth,\n      params\n    })), dispatcher(getInventoryStat({\n      auth,\n      params\n    })), dispatcher(getOrderStat({\n      auth,\n      params\n    })), dispatcher(getOutstandingStat({\n      auth,\n      params\n    })), dispatcher(getSalesStat({\n      auth,\n      params\n    }))];\n    return Promise.allSettled(promises);\n  };\n\n  const handleTableTopChange = async (e, name) => {\n    setLoading(true);\n    let value = e.hasOwnProperty('target') ? `${e.target.value}`.trim() : `${e.value}`.trim();\n\n    if (name === 'start') {\n      value = moment(value).format('YYYY-MM-DD');\n    } else if (name === 'end') {\n      value = moment(value).add(1, 'days').format('YYYY-MM-DD');\n    }\n\n    setInputValue(prevState => ({ ...prevState,\n      [name]: value\n    }));\n\n    try {\n      await fetchAllStat({ ...inputValues,\n        [name]: value\n      });\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    minHeight: \"80vh\",\n    children: [/*#__PURE__*/_jsxDEV(ModifiedTableTop, {\n      inputData: inputData,\n      onChange: handleTableTopChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      mb: 8,\n      size: \"md\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      children: [/*#__PURE__*/_jsxDEV(StatCard, {\n        onClick: () => history.push('/outstanding'),\n        icon: /*#__PURE__*/_jsxDEV(FiTrendingDown, {\n          style: {\n            color: '#fff',\n            fontSize: '30px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }, this),\n        statName: \"Total Outsanding\",\n        stat: stats === null || stats === void 0 ? void 0 : stats.totalOutstanding\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n        icon: /*#__PURE__*/_jsxDEV(AiOutlineUngroup, {\n          style: {\n            color: '#fff',\n            fontSize: '30px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this),\n        onClick: () => history.push('/collections'),\n        statName: \"Total Collection\",\n        stat: stats === null || stats === void 0 ? void 0 : stats.totalCollection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n        onClick: () => history.push('/inventory'),\n        statName: \"Total Inventory\",\n        stat: stats === null || stats === void 0 ? void 0 : stats.totalInventory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n        icon: /*#__PURE__*/_jsxDEV(IoStatsChart, {\n          style: {\n            color: '#fff',\n            fontSize: '30px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }, this),\n        statName: \"Total Sale\",\n        stat: stats === null || stats === void 0 ? void 0 : stats.totalSale,\n        onClick: () => history.push('/sales')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n        icon: /*#__PURE__*/_jsxDEV(FaBuffer, {\n          style: {\n            color: '#fff',\n            fontSize: '30px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }, this),\n        statName: \"Total Order Amount\",\n        stat: stats === null || stats === void 0 ? void 0 : stats.totalOrderAmount,\n        onClick: () => history.push('/orders')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatCard, {\n        notMoney: true,\n        icon: /*#__PURE__*/_jsxDEV(VscLayersActive, {\n          style: {\n            color: '#fff',\n            fontSize: '30px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }, this),\n        statName: \"Total Orders\",\n        stat: stats === null || stats === void 0 ? void 0 : stats.totalOrders,\n        onClick: () => history.push('/orders')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"PQFZCo/DC8nk36+KRpH+pLswEx4=\", false, function () {\n  return [useSelector, useIntl, useSelector, useSelector, useDispatch, useHistory];\n});\n\n_c = Dashboard;\n\nconst StatCard = props => {\n  _s2();\n\n  var _props$icon;\n\n  const {\n    colorMode\n  } = useColorMode();\n  return /*#__PURE__*/_jsxDEV(StyledCard, {\n    flexBasis: {\n      base: '100%',\n      md: '46.5%',\n      lg: '31%'\n    },\n    display: \"flex\",\n    alignItems: \"center\",\n    boxShadow: \"base\",\n    p: 6,\n    borderRadius: 5,\n    width: \"fit-content\",\n    height: \"fit-content\",\n    mb: 7,\n    backgroundColor: colorMode === 'dark' ? 'black' : 'white',\n    onClick: props.onClick,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      borderRadius: 5,\n      width: \"fit-content\",\n      bg: \"#1E293B\",\n      p: 2,\n      children: (_props$icon = props.icon) !== null && _props$icon !== void 0 ? _props$icon : /*#__PURE__*/_jsxDEV(MdListAlt, {\n        style: {\n          color: '#fff',\n          fontSize: '30px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      ml: 3,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        textStyle: \"subtitle\",\n        children: props.notMoney ? props.stat : getMoneyFormat(props.stat)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        textStyle: \"labelLight\",\n        children: props.statName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(StatCard, \"2Uu86IH3do63pkN3s1ysdRMmJuc=\", false, function () {\n  return [useColorMode];\n});\n\n_c2 = StatCard;\nconst StyledCard = styled(Box)`\n  margin-right: 3.5%;\n\n  &:nth-child(3n) {\n    margin-right: 0px;\n  }\n`;\n_c3 = StyledCard;\nexport default Dashboard;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Dashboard\");\n$RefreshReg$(_c2, \"StatCard\");\n$RefreshReg$(_c3, \"StyledCard\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/containers/Dashboard/index.js"],"names":["React","useEffect","useMemo","useState","useIntl","styled","useSelector","useDispatch","Box","useColorMode","Divider","MdListAlt","moment","getMoneyFormat","getCollectionStat","getInventoryStat","getOrderStat","getOutstandingStat","getSalesStat","selectDashboardState","IoStatsChart","FaBuffer","FiTrendingDown","AiOutlineUngroup","VscLayersActive","messages","ModifiedTableTop","useHistory","selectGlobalState","Dashboard","isDistributor","inputValues","setInputValue","end","add","format","start","startOf","intl","auth","state","stats","dispatcher","loading","setLoading","history","console","log","inputData","title","formatMessage","date","type","placeholder","name","defaultValue","fetchAllStat","params","promises","Promise","allSettled","handleTableTopChange","e","value","hasOwnProperty","target","trim","prevState","error","push","color","fontSize","totalOutstanding","totalCollection","totalInventory","totalSale","totalOrderAmount","totalOrders","StatCard","props","colorMode","base","md","lg","onClick","icon","notMoney","stat","statName","StyledCard"],"mappings":"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","sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport styled from 'styled-components';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Box, useColorMode, Divider } from '@chakra-ui/react';\r\nimport { MdListAlt } from 'react-icons/md';\r\nimport moment from 'moment';\r\n\r\nimport getMoneyFormat from '../../utils/getMoneyFormat';\r\nimport {\r\n  getCollectionStat,\r\n  getInventoryStat,\r\n  getOrderStat,\r\n  getOutstandingStat,\r\n  getSalesStat,\r\n  selectDashboardState,\r\n} from './slice';\r\nimport { IoStatsChart } from 'react-icons/io5';\r\nimport { FaBuffer } from 'react-icons/fa';\r\nimport { FiTrendingDown } from 'react-icons/fi';\r\nimport { AiOutlineUngroup } from 'react-icons/ai';\r\nimport { VscLayersActive } from 'react-icons/vsc';\r\nimport messages from './messages';\r\nimport ModifiedTableTop from '../../components/TableTop/ModifiedTableTop';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { selectGlobalState } from '../../globalSlice';\r\n\r\nconst Dashboard = () => {\r\n  const { isDistributor } = useSelector(selectGlobalState);\r\n  const [inputValues, setInputValue] = useState({\r\n    end: moment().add(1, 'days').format('YYYY-MM-DD'),\r\n    start: moment().startOf('month').format('YYYY-MM-DD'),\r\n  });\r\n  const intl = useIntl();\r\n  const auth = useSelector((state) => state.auth);\r\n  const { stats } = useSelector(selectDashboardState);\r\n  const dispatcher = useDispatch();\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n  console.log({ isDistributor });\r\n\r\n  const inputData = useMemo(\r\n    () => [\r\n      {\r\n        title: intl.formatMessage(messages.date),\r\n        type: 'date',\r\n        placeholder: 'Enter order No',\r\n        name: ['start', 'end'],\r\n        defaultValue: [\r\n          moment().startOf('month').format('YYYY-MM-DD'),\r\n          moment().format('YYYY-MM-DD'),\r\n        ],\r\n      },\r\n    ],\r\n    [],\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatcher(getCollectionStat({ auth }));\r\n    dispatcher(getInventoryStat({ auth }));\r\n    dispatcher(getOrderStat({ auth }));\r\n    dispatcher(getOutstandingStat({ auth }));\r\n    dispatcher(getSalesStat({ auth }));\r\n  }, []);\r\n\r\n  const fetchAllStat = (params) => {\r\n    const promises = [\r\n      dispatcher(getCollectionStat({ auth, params })),\r\n      dispatcher(getInventoryStat({ auth, params })),\r\n      dispatcher(getOrderStat({ auth, params })),\r\n      dispatcher(getOutstandingStat({ auth, params })),\r\n      dispatcher(getSalesStat({ auth, params })),\r\n    ];\r\n\r\n    return Promise.allSettled(promises)\r\n  };\r\n\r\n  const handleTableTopChange = async (e, name) => {\r\n    setLoading(true);\r\n    let value = e.hasOwnProperty('target')\r\n      ? `${e.target.value}`.trim()\r\n      : `${e.value}`.trim();\r\n\r\n    if (name === 'start') {\r\n      value = moment(value).format('YYYY-MM-DD');\r\n    } else if (name === 'end') {\r\n      value = moment(value).add(1, 'days').format('YYYY-MM-DD');\r\n    }\r\n\r\n    setInputValue((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n\r\n    try {\r\n      await fetchAllStat({\r\n        ...inputValues,\r\n        [name]: value,\r\n      });\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box minHeight='80vh'>\r\n      <ModifiedTableTop inputData={inputData} onChange={handleTableTopChange} />\r\n      <Divider mb={8} size='md' />\r\n      <Box display='flex' flexWrap='wrap'>\r\n        <StatCard\r\n          onClick={() => history.push('/outstanding')}\r\n          icon={<FiTrendingDown style={{ color: '#fff', fontSize: '30px' }} />}\r\n          statName='Total Outsanding'\r\n          stat={stats?.totalOutstanding}\r\n        />\r\n        <StatCard\r\n          icon={\r\n            <AiOutlineUngroup style={{ color: '#fff', fontSize: '30px' }} />\r\n          }\r\n          onClick={ () => history.push('/collections')}\r\n          statName='Total Collection'\r\n          stat={stats?.totalCollection}\r\n        />\r\n        <StatCard  onClick={() => history.push('/inventory')} statName='Total Inventory' stat={stats?.totalInventory} />\r\n        <StatCard\r\n          icon={<IoStatsChart style={{ color: '#fff', fontSize: '30px' }} />}\r\n          statName='Total Sale'\r\n          stat={stats?.totalSale}\r\n          onClick={ () => history.push('/sales')}\r\n        />\r\n        <StatCard\r\n          icon={<FaBuffer style={{ color: '#fff', fontSize: '30px' }} />}\r\n          statName='Total Order Amount'\r\n          stat={stats?.totalOrderAmount}\r\n          onClick={() => history.push('/orders')}\r\n        />\r\n        <StatCard\r\n          notMoney\r\n          icon={<VscLayersActive style={{ color: '#fff', fontSize: '30px' }} />}\r\n          statName='Total Orders'\r\n          stat={stats?.totalOrders}\r\n          onClick={() => history.push('/orders')}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst StatCard = (props) => {\r\n  const { colorMode } = useColorMode();\r\n\r\n  return (\r\n    <StyledCard\r\n      flexBasis={{ base: '100%', md: '46.5%', lg: '31%' }}\r\n      display='flex'\r\n      alignItems='center'\r\n      boxShadow='base'\r\n      p={6}\r\n      borderRadius={5}\r\n      width='fit-content'\r\n      height='fit-content'\r\n      mb={7}\r\n      backgroundColor={colorMode === 'dark' ? 'black' : 'white'}\r\n      onClick={props.onClick}\r\n    >\r\n      <Box borderRadius={5} width='fit-content' bg='#1E293B' p={2}>\r\n        {props.icon ?? (\r\n          <MdListAlt style={{ color: '#fff', fontSize: '30px' }} />\r\n        )}\r\n      </Box>\r\n      <Box ml={3}>\r\n        <Box textStyle='subtitle'>\r\n          {props.notMoney ? props.stat : getMoneyFormat(props.stat)}\r\n        </Box>\r\n        <Box textStyle='labelLight'>{props.statName}</Box>\r\n      </Box>\r\n    </StyledCard>\r\n  );\r\n};\r\n\r\nconst StyledCard = styled(Box)`\r\n  margin-right: 3.5%;\r\n\r\n  &:nth-child(3n) {\r\n    margin-right: 0px;\r\n  }\r\n`;\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}