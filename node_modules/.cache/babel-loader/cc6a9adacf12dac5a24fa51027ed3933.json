{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Work\\\\garaaz-distributor\\\\src\\\\containers\\\\BranchInfo\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo, useCallback, useEffect } from 'react';\nimport { useIntl } from 'react-intl';\nimport { Button } from '@chakra-ui/button';\nimport { useDropzone } from 'react-dropzone';\nimport { Stepper, Step } from 'react-form-stepper';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from \"react-router-dom\";\nimport toast from 'react-hot-toast';\nimport { publicAxios as axios } from '../../axios';\nimport { useHistory } from 'react-router-dom';\nimport { isEmpty, isUndefined } from 'lodash';\nimport LocationDetailsForm from '../../components/LocationDetailsForm';\nimport ContactDetailsForm from '../../components/ContactDetailsForm';\nimport BranchDetailsForm from '../../components/BranchDetailsForm';\nimport messages from './messages';\nimport { getBranchInfo } from './action';\nimport Label from '../../utils/stepperLabel';\nimport { DropZoneStyle } from '../../utils/theme/DropZoneStyle';\nimport { Box } from '@chakra-ui/react';\nimport { UseOnboardContext } from '../../App';\nimport { getBranches } from '../../globalSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BranchInfo = () => {\n  _s();\n\n  const history = useHistory();\n  const {\n    branchId: branchid\n  } = useParams();\n  const intl = useIntl();\n  const [activeStep, setActiveStep] = useState(1);\n  const [currentBranch, setCurrentBranch] = useState({});\n  const auth = useSelector(state => state.auth);\n  const [incomplete, setIncomplete] = useState({\n    branchDetails: false,\n    location: false,\n    contact: false,\n    gallery: false\n  });\n  const {\n    updateOnboard\n  } = UseOnboardContext();\n  const dispatcher = useDispatch();\n\n  const getBranchDetails = async branchId => {\n    const data = await getBranchInfo(auth, branchId);\n    setCurrentBranch(data);\n    return data;\n  };\n\n  useEffect(() => {\n    const {\n      pathname\n    } = history.location;\n\n    if (pathname !== '/branch/add') {\n      getBranchDetails(branchid);\n    }\n  }, []);\n\n  const setLocationId = async location => {\n    if (!isUndefined(currentBranch.branchId)) {\n      try {\n        let Data = currentBranch;\n\n        if (!isEmpty(Data.gallery)) {\n          for (var i in currentBranch.gallery) {\n            Data.gallery[i] = currentBranch.gallery[i].mediaId;\n          }\n        }\n\n        await axios.patch(`/branches/${currentBranch.branchId}`, {\n          Data,\n          locationId: location.locationId\n        }, {\n          headers: {\n            Authorization: auth.authToken\n          }\n        });\n        getBranchDetails(currentBranch._id); // setCurrentBranch({ ...currentBranch, location })\n      } catch (err) {\n        toast(intl.formatMessage(messages.somethingWentWrong));\n      }\n    } else {\n      setCurrentBranch({ ...currentBranch,\n        location: [location],\n        locationId: location._id\n      });\n    }\n  };\n\n  const setContactId = async contact => {\n    // eslint-disable-line\n    if (!isEmpty(currentBranch._id)) {\n      try {\n        let Data = currentBranch;\n\n        if (!isEmpty(Data.gallery)) {\n          for (var i in currentBranch.gallery) {\n            Data.gallery[i] = currentBranch.gallery[i].mediaId;\n          }\n        }\n\n        await axios.patch(`/branches/${currentBranch._id}`, {\n          Data,\n          contactId: contact.contactId\n        }, {\n          headers: {\n            Authorization: auth.authToken\n          }\n        });\n        getBranchDetails(currentBranch._id); // setCurrentBranch({ ...currentBranch, contact })\n      } catch (err) {\n        toast(intl.formatMessage(messages.somethingWentWrong));\n      }\n    } else {\n      setCurrentBranch({ ...currentBranch,\n        contact: [contact],\n        contactId: contact.contactId\n      });\n    }\n  };\n\n  const setMediaId = async ids => {\n    let updatedGallery = [];\n\n    if (!isUndefined(currentBranch.gallery) || !isEmpty(currentBranch.gallery)) {\n      updatedGallery = currentBranch.gallery.map(img => img._id);\n    }\n\n    updatedGallery.push(...ids.map(id => id._id));\n\n    if (!isUndefined(currentBranch._id)) {\n      try {\n        await axios.patch(`/branches/${currentBranch._id}`, {\n          gallery: updatedGallery\n        }, {\n          headers: {\n            Authorization: auth.authToken\n          }\n        });\n        getBranchDetails(currentBranch._id);\n      } catch (err) {\n        toast(intl.formatMessage(messages.somethingWentWrong));\n      }\n    } else {\n      setCurrentBranch({ ...currentBranch,\n        gallery: updatedGallery\n      });\n    }\n  };\n\n  const {\n    _id: branchId,\n    locationId,\n    contactId,\n    gallery = []\n  } = currentBranch;\n  useEffect(() => {\n    if (isUndefined(branchId) && activeStep > 1) {\n      setIncomplete({ ...incomplete,\n        branchDetails: true\n      });\n    }\n\n    if (isUndefined(locationId) && activeStep > 2) {\n      setIncomplete({ ...incomplete,\n        location: true\n      });\n    }\n\n    if (isUndefined(contactId) && activeStep > 3) {\n      setIncomplete({ ...incomplete,\n        contact: true\n      });\n    }\n\n    if (isEmpty(gallery) && activeStep != 4 && incomplete.contact) {\n      setIncomplete({ ...incomplete,\n        gallery: true\n      });\n    }\n  }, [currentBranch, activeStep]);\n  const [files, setFiles] = useState([]);\n  const onDrop = useCallback(acceptedFiles => {\n    setFiles(acceptedFiles.map(file => Object.assign(file, {\n      preview: URL.createObjectURL(file)\n    })));\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject,\n    isSubmitted,\n    acceptedFiles\n  } = useDropzone({\n    accept: \".jpeg,.jpg,.png,.gif,.svg\",\n    maxFiles: 10,\n    multiple: true,\n    noKeyboard: true,\n    onDrop,\n    maxSize: 5242880\n  }); //size in bytes\n\n  const uploadMedia = async () => {\n    try {\n      const newFiles = [...files].filter(file => {\n        return file.path;\n      });\n\n      if (newFiles.length > 0) {\n        const fd = new FormData();\n        newFiles.forEach(file => fd.append('media', file, file.name));\n        const {\n          data: ids\n        } = await axios.post('/media', fd, {\n          headers: {\n            Authorization: auth.authToken\n          }\n        });\n        setMediaId(ids);\n        toast(\"Images uploaded successfully\");\n      }\n\n      if (currentBranch.location && currentBranch.contact) {\n        if (localStorage.onboard) {\n          localStorage.onboard = 3;\n          updateOnboard(3);\n          history.push('/employees');\n        } else {\n          dispatcher(getBranches({\n            auth\n          }));\n          history.push('/branches');\n        }\n      } else if (currentBranch.location) {\n        setActiveStep(2);\n      } else {\n        setActiveStep(1);\n      }\n    } catch (error) {\n      toast(\"Something went wrong!\");\n    } // }\n\n  };\n\n  const style = useMemo(() => ({ ...DropZoneStyle.baseStyle,\n    ...(isDragActive ? DropZoneStyle.activeStyle : {}),\n    ...(isDragAccept ? DropZoneStyle.acceptStyle : {}),\n    ...(isDragReject ? DropZoneStyle.rejectStyle : {})\n  }), [isDragActive, isDragReject, isDragAccept]);\n  useEffect(() => {\n    if (activeStep === 4 && !isEmpty(currentBranch.gallery)) {\n      const set = currentBranch.gallery.map(m => {\n        return {\n          preview: m.path,\n          name: m.mimeType\n        };\n      });\n      setFiles(set);\n    }\n  }, [currentBranch, activeStep]);\n  const images = files.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: DropZoneStyle.thumb,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: DropZoneStyle.thumbInner,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: file.preview,\n        style: DropZoneStyle.img\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this)\n  }, file.name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 5\n  }, this));\n  useEffect(() => () => {\n    files.forEach(file => URL.revokeObjectURL(file.preview));\n  }, [files]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-0 p-6 pb-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center flex\",\n        style: {\n          height: \"12.5%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            alignSelf: \"flex-end\",\n            display: activeStep === 1 ? \"block\" : \"none\",\n            marginLeft: \"auto\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"bulkAdd\",\n            size: \"md\",\n            onClick: () => history.push('/branch/add/bulk'),\n            children: intl.formatMessage(messages.bulkUpload)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full mb-0\",\n        children: /*#__PURE__*/_jsxDEV(Stepper, {\n          activeStep: activeStep,\n          styleConfig: {\n            completedBgColor: \"#008000\",\n            activeBgColor: \"#1e293b\"\n          },\n          nonLinear: history.location.pathname === \"/branch/add\" ? false : true,\n          style: {\n            paddingBottom: \"4px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Step, {\n            label: /*#__PURE__*/_jsxDEV(Label, {\n              title: intl.formatMessage(messages.branchDetails),\n              isComplete: branchId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 24\n            }, this),\n            onClick: () => setActiveStep(1),\n            completed: !isUndefined(branchId)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Step, {\n            label: /*#__PURE__*/_jsxDEV(Label, {\n              title: intl.formatMessage(messages.locationDetails),\n              isComplete: locationId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 24\n            }, this),\n            onClick: () => (currentBranch._id || locationId) && setActiveStep(2) // onClick={() => setActiveStep(2)}\n            ,\n            completed: !isUndefined(locationId)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Step, {\n            label: /*#__PURE__*/_jsxDEV(Label, {\n              title: intl.formatMessage(messages.contactDetails),\n              isComplete: contactId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 24\n            }, this),\n            onClick: () => (locationId || contactId) && setActiveStep(3) // onClick={() => setActiveStep(3)}\n            ,\n            completed: !isUndefined(contactId)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Step, {\n            label: /*#__PURE__*/_jsxDEV(Label, {\n              title: intl.formatMessage(messages.gallery),\n              isComplete: !isEmpty(gallery)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 24\n            }, this),\n            onClick: () => contactId && setActiveStep(4) // onClick={() => setActiveStep(4)}\n            ,\n            completed: !isEmpty(gallery)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [activeStep === 1 && /*#__PURE__*/_jsxDEV(BranchDetailsForm, {\n          setActiveStep: setActiveStep,\n          currentBranch: currentBranch,\n          setCurrentBranch: setCurrentBranch,\n          getBranchDetails: getBranchDetails\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 15\n        }, this), activeStep === 2 && /*#__PURE__*/_jsxDEV(LocationDetailsForm, {\n          setActiveStep: setActiveStep,\n          setCurrentBranch: setCurrentBranch,\n          setLocationId: setLocationId,\n          currentBranch: currentBranch,\n          getBranchDetails: getBranchDetails\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 15\n        }, this), activeStep === 3 && /*#__PURE__*/_jsxDEV(ContactDetailsForm, {\n          setActiveStep: setActiveStep,\n          currentBranch: currentBranch,\n          setCurrentBranch: setCurrentBranch,\n          setContactId: setContactId,\n          getBranchDetails: getBranchDetails\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 15\n        }, this), activeStep === 4 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"mt-6 mb-2 font-bold\",\n            children: intl.formatMessage(messages.gallery)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            my: 6,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1\",\n              children: intl.formatMessage(messages.branchImages)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative w-full\",\n              ...getRootProps({\n                style,\n                className: 'dropzone'\n              }),\n              children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: DropZoneStyle.thumbsContainer,\n                children: images\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 21\n              }, this), isDragActive && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: intl.formatMessage(messages.dropFilesHere)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 23\n              }, this), !acceptedFiles || acceptedFiles.length === 0 && !isDragActive && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: intl.formatMessage(messages.dragAndDropMessage)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 25\n              }, this), acceptedFiles && acceptedFiles.length > 0 && !isDragActive && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"far fa-file fa-2x\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 359,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: acceptedFiles[0].path\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"flex-end\",\n            ml: \"auto\",\n            width: \"100%\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"normal\",\n              type: \"submit\",\n              mr: 3,\n              onClick: () => {\n                uploadMedia();\n              },\n              children: intl.formatMessage(messages.saveButtonLabel)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"reset\",\n              color: \"light\",\n              onClick: () => {\n                setFiles([]);\n                getInputProps([]);\n              },\n              children: intl.formatMessage(messages.cancelButtonLabe)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(BranchInfo, \"Mab4iMdXnCRH2T9f5wKaOQDQ2xM=\", false, function () {\n  return [useHistory, useParams, useIntl, useSelector, useDispatch, useDropzone];\n});\n\n_c = BranchInfo;\nexport default BranchInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"BranchInfo\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/containers/BranchInfo/index.js"],"names":["React","useState","useMemo","useCallback","useEffect","useIntl","Button","useDropzone","Stepper","Step","useSelector","useDispatch","useParams","toast","publicAxios","axios","useHistory","isEmpty","isUndefined","LocationDetailsForm","ContactDetailsForm","BranchDetailsForm","messages","getBranchInfo","Label","DropZoneStyle","Box","UseOnboardContext","getBranches","BranchInfo","history","branchId","branchid","intl","activeStep","setActiveStep","currentBranch","setCurrentBranch","auth","state","incomplete","setIncomplete","branchDetails","location","contact","gallery","updateOnboard","dispatcher","getBranchDetails","data","pathname","setLocationId","Data","i","mediaId","patch","locationId","headers","Authorization","authToken","_id","err","formatMessage","somethingWentWrong","setContactId","contactId","setMediaId","ids","updatedGallery","map","img","push","id","files","setFiles","onDrop","acceptedFiles","file","Object","assign","preview","URL","createObjectURL","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","isSubmitted","accept","maxFiles","multiple","noKeyboard","maxSize","uploadMedia","newFiles","filter","path","length","fd","FormData","forEach","append","name","post","localStorage","onboard","error","style","baseStyle","activeStyle","acceptStyle","rejectStyle","set","m","mimeType","images","thumb","thumbInner","revokeObjectURL","height","alignSelf","display","marginLeft","bulkUpload","completedBgColor","activeBgColor","paddingBottom","locationDetails","contactDetails","branchImages","className","thumbsContainer","dropFilesHere","dragAndDropMessage","saveButtonLabel","cancelButtonLabe"],"mappings":"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","sourcesContent":["import React, { useState, useMemo, useCallback, useEffect } from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport { Button } from '@chakra-ui/button';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { Stepper, Step } from 'react-form-stepper';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useParams } from \"react-router-dom\";\r\nimport toast from 'react-hot-toast';\r\nimport { publicAxios as axios } from '../../axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { isEmpty, isUndefined } from 'lodash';\r\nimport LocationDetailsForm from '../../components/LocationDetailsForm';\r\nimport ContactDetailsForm from '../../components/ContactDetailsForm';\r\nimport BranchDetailsForm from '../../components/BranchDetailsForm';\r\nimport messages from './messages';\r\nimport { getBranchInfo } from './action'\r\nimport Label from '../../utils/stepperLabel';\r\nimport { DropZoneStyle } from '../../utils/theme/DropZoneStyle';\r\nimport { Box } from '@chakra-ui/react'\r\nimport { UseOnboardContext } from '../../App'\r\nimport { getBranches } from '../../globalSlice';\r\n\r\nconst BranchInfo = () => {\r\n  const history = useHistory()\r\n  const { branchId: branchid } = useParams();\r\n  const intl = useIntl();\r\n  const [activeStep, setActiveStep] = useState(1);\r\n  const [currentBranch, setCurrentBranch] = useState({});\r\n  const auth = useSelector(state => state.auth);\r\n  const [incomplete, setIncomplete] = useState({\r\n    branchDetails: false,\r\n    location: false,\r\n    contact: false,\r\n    gallery: false,\r\n  })\r\n  const { updateOnboard } = UseOnboardContext()\r\n  const dispatcher = useDispatch();\r\n\r\n  const getBranchDetails = async (branchId) => {\r\n    const data = await getBranchInfo(auth, branchId)\r\n    setCurrentBranch(data)\r\n    return data\r\n  }\r\n  useEffect(() => {\r\n    const { pathname } = history.location\r\n    if (pathname !== '/branch/add') {\r\n      getBranchDetails(branchid);\r\n    }\r\n  }, [])\r\n  const setLocationId = async location => {\r\n    if (!isUndefined(currentBranch.branchId)) {\r\n      try {\r\n        let Data = currentBranch;\r\n        if (!isEmpty(Data.gallery)) {\r\n          for (var i in currentBranch.gallery) {\r\n            Data.gallery[i] = currentBranch.gallery[i].mediaId\r\n          }\r\n        }\r\n        await axios.patch(\r\n          `/branches/${currentBranch.branchId}`,\r\n          {\r\n            Data,\r\n            locationId: location.locationId,\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: auth.authToken,\r\n            },\r\n          },\r\n        );\r\n        getBranchDetails(currentBranch._id)\r\n        // setCurrentBranch({ ...currentBranch, location })\r\n      } catch (err) {\r\n        toast(intl.formatMessage(messages.somethingWentWrong));\r\n      }\r\n    } else {\r\n      setCurrentBranch({ ...currentBranch, location: [location], locationId: location._id })\r\n    }\r\n  };\r\n  const setContactId = async contact => {\r\n    // eslint-disable-line\r\n    if (!isEmpty(currentBranch._id)) {\r\n      try {\r\n        let Data = currentBranch;\r\n        if (!isEmpty(Data.gallery)) {\r\n          for (var i in currentBranch.gallery) {\r\n            Data.gallery[i] = currentBranch.gallery[i].mediaId\r\n          }\r\n        }\r\n        await axios.patch(\r\n          `/branches/${currentBranch._id}`,\r\n          {\r\n            Data,\r\n            contactId: contact.contactId,\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: auth.authToken,\r\n            },\r\n          },\r\n        );\r\n        getBranchDetails(currentBranch._id)\r\n        // setCurrentBranch({ ...currentBranch, contact })\r\n      } catch (err) {\r\n        toast(intl.formatMessage(messages.somethingWentWrong));\r\n      }\r\n    } else {\r\n      setCurrentBranch({ ...currentBranch, contact: [contact], contactId: contact.contactId })\r\n    }\r\n  };\r\n\r\n  const setMediaId = async (ids) => {\r\n    let updatedGallery = []\r\n    if (!isUndefined(currentBranch.gallery) || !isEmpty(currentBranch.gallery)) {\r\n      updatedGallery = currentBranch.gallery.map(img => img._id)\r\n    }\r\n    updatedGallery.push(...ids.map(id => id._id))\r\n    if (!isUndefined(currentBranch._id)) {\r\n      try {\r\n        await axios.patch(\r\n          `/branches/${currentBranch._id}`,\r\n          {\r\n            gallery: updatedGallery,\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: auth.authToken,\r\n            },\r\n          },\r\n        );\r\n        getBranchDetails(currentBranch._id)\r\n      } catch (err) {\r\n        toast(intl.formatMessage(messages.somethingWentWrong));\r\n      }\r\n    } else {\r\n      setCurrentBranch({ ...currentBranch, gallery: updatedGallery })\r\n    }\r\n  }\r\n\r\n  const { _id: branchId, locationId, contactId, gallery = [] } = currentBranch\r\n  useEffect(() => {\r\n    if (isUndefined(branchId) && activeStep > 1) {\r\n      setIncomplete({ ...incomplete, branchDetails: true })\r\n    }\r\n    if (isUndefined(locationId) && activeStep > 2) {\r\n      setIncomplete({ ...incomplete, location: true })\r\n    }\r\n    if (isUndefined(contactId) && activeStep > 3) {\r\n      setIncomplete({ ...incomplete, contact: true })\r\n    }\r\n    if (isEmpty(gallery) && activeStep != 4 && incomplete.contact) {\r\n      setIncomplete({ ...incomplete, gallery: true })\r\n    }\r\n  }, [currentBranch, activeStep])\r\n\r\n  const [files, setFiles] = useState([])\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    setFiles(\r\n      acceptedFiles.map((file) => Object.assign(file, {\r\n        preview: URL.createObjectURL(file)\r\n      }))\r\n    )\r\n  }, [])\r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive,\r\n    isDragAccept,\r\n    isDragReject,\r\n    isSubmitted,\r\n    acceptedFiles,\r\n  } = useDropzone({ accept: \".jpeg,.jpg,.png,.gif,.svg\", maxFiles: 10, multiple: true, noKeyboard: true, onDrop, maxSize: 5242880 });//size in bytes\r\n\r\n  const uploadMedia = async () => {\r\n   \r\n    try {\r\n      const newFiles =[...files].filter(file => {\r\n        return file.path;\r\n      });\r\n\r\n      if(newFiles.length > 0){\r\n      const fd = new FormData();\r\n      newFiles.forEach((file) => fd.append('media', file, file.name));\r\n      const { data: ids } = await axios.post(\r\n        '/media',\r\n        fd,\r\n        {\r\n          headers: {\r\n            Authorization: auth.authToken,\r\n          }\r\n        }\r\n      )\r\n      setMediaId(ids)\r\n      toast(\"Images uploaded successfully\");\r\n      }\r\n      \r\n      if (currentBranch.location && currentBranch.contact) {\r\n        if(localStorage.onboard){\r\n          localStorage.onboard=3;\r\n          updateOnboard(3);\r\n          history.push('/employees');\r\n        }else {\r\n          dispatcher(getBranches({auth}))\r\n          history.push('/branches');\r\n        }\r\n        \r\n      } else if (currentBranch.location) {\r\n        setActiveStep(2)\r\n      } else {\r\n        setActiveStep(1)\r\n      }\r\n    } catch (error) {\r\n      toast(\"Something went wrong!\");\r\n    }\r\n    // }\r\n  };\r\n\r\n  const style = useMemo(\r\n    () => ({\r\n      ...DropZoneStyle.baseStyle,\r\n      ...(isDragActive ? DropZoneStyle.activeStyle : {}),\r\n      ...(isDragAccept ? DropZoneStyle.acceptStyle : {}),\r\n      ...(isDragReject ? DropZoneStyle.rejectStyle : {}),\r\n    }),\r\n    [isDragActive, isDragReject, isDragAccept],\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (activeStep === 4 && !isEmpty(currentBranch.gallery)) {\r\n      const set = currentBranch.gallery.map((m) => { return { preview: m.path, name: m.mimeType } })\r\n      setFiles(\r\n        set\r\n      )\r\n    }\r\n  }, [currentBranch, activeStep])\r\n\r\n  const images = files.map(file => (\r\n    <div style={DropZoneStyle.thumb} key={file.name}>\r\n      <div style={DropZoneStyle.thumbInner}>\r\n        <img\r\n          src={file.preview}\r\n          style={DropZoneStyle.img}\r\n        />\r\n      </div>\r\n    </div>\r\n  ));\r\n  useEffect(() => () => {\r\n    files.forEach(file => URL.revokeObjectURL(file.preview));\r\n  }, [files]);\r\n  return (\r\n    <>\r\n      {/* <div className=\"relative flex flex-col w-full shadow-lg rounded-lg bg-white\"\r\n        style={{ height: \"80vh\", overflowY: \"auto\" }}> */}\r\n        <div className=\"mb-0 p-6 pb-0\">\r\n          <div className=\"text-center flex\" style={{ height: \"12.5%\" }}>\r\n            <div style={{ alignSelf: \"flex-end\", display: activeStep === 1 ? \"block\" : \"none\", marginLeft: \"auto\" }}>\r\n\r\n              <Button\r\n                variant=\"bulkAdd\"\r\n                size=\"md\"\r\n                onClick={() => history.push('/branch/add/bulk')}\r\n\r\n              >\r\n                {intl.formatMessage(messages.bulkUpload)}\r\n              </Button>\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"w-full mb-0\">\r\n            <Stepper activeStep={activeStep} styleConfig={{\r\n              completedBgColor: \"#008000\",\r\n              activeBgColor: \"#1e293b\",\r\n            }} nonLinear={history.location.pathname === \"/branch/add\" ? false : true}\r\n              style={{ paddingBottom: \"4px\" }}\r\n            >\r\n              <Step\r\n                label={<Label title={intl.formatMessage(messages.branchDetails)} isComplete={branchId} />}\r\n                onClick={() => setActiveStep(1)}\r\n                completed={!isUndefined(branchId)}\r\n              />\r\n              <Step\r\n                label={<Label title={intl.formatMessage(messages.locationDetails)} isComplete={locationId} />}\r\n                onClick={() => (currentBranch._id || locationId) && setActiveStep(2)}\r\n                // onClick={() => setActiveStep(2)}\r\n                completed={!isUndefined(locationId)}\r\n              />\r\n              <Step\r\n                label={<Label title={intl.formatMessage(messages.contactDetails)} isComplete={contactId} />}\r\n                onClick={() => (locationId || contactId) && setActiveStep(3)}\r\n                // onClick={() => setActiveStep(3)}\r\n                completed={!isUndefined(contactId)}\r\n              />\r\n              <Step\r\n                label={<Label title={intl.formatMessage(messages.gallery)} isComplete={!isEmpty(gallery)} />}\r\n                onClick={() => contactId && setActiveStep(4)}\r\n                // onClick={() => setActiveStep(4)}\r\n                completed={!isEmpty(gallery)}\r\n              />\r\n            </Stepper>\r\n          </div>\r\n          <Box>\r\n            {activeStep === 1 && (\r\n              <BranchDetailsForm\r\n                setActiveStep={setActiveStep}\r\n                currentBranch={currentBranch}\r\n                setCurrentBranch={setCurrentBranch}\r\n                getBranchDetails={getBranchDetails}\r\n              />\r\n            )}\r\n            {activeStep === 2 && (\r\n              <LocationDetailsForm\r\n                setActiveStep={setActiveStep}\r\n                setCurrentBranch={setCurrentBranch}\r\n                setLocationId={setLocationId}\r\n                currentBranch={currentBranch}\r\n                getBranchDetails={getBranchDetails}\r\n              />\r\n            )}\r\n            {activeStep === 3 && (\r\n              <ContactDetailsForm\r\n                setActiveStep={setActiveStep}\r\n                currentBranch={currentBranch}\r\n                setCurrentBranch={setCurrentBranch}\r\n                setContactId={setContactId}\r\n                getBranchDetails={getBranchDetails}\r\n              />\r\n            )}\r\n\r\n            {activeStep === 4 && (\r\n              <div>\r\n                <h1 className=\"mt-6 mb-2 font-bold\">\r\n                  {intl.formatMessage(messages.gallery)}\r\n                </h1>\r\n\r\n                <Box my={6}>\r\n                  <label\r\n                    className=\"block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1\"\r\n\r\n                  >\r\n                    {intl.formatMessage(messages.branchImages)}\r\n                  </label>\r\n                  <div\r\n                    className=\"relative w-full\"\r\n                    {...getRootProps({ style, className: 'dropzone' })}\r\n                  >\r\n                    <input {...getInputProps()} />\r\n                    <div style={DropZoneStyle.thumbsContainer}>{images}</div>\r\n                    {isDragActive && (\r\n                      <p>{intl.formatMessage(messages.dropFilesHere)}</p>\r\n                    )}\r\n                    {!acceptedFiles ||\r\n                      (acceptedFiles.length === 0 && !isDragActive && (\r\n                        <p>{intl.formatMessage(messages.dragAndDropMessage)}</p>\r\n                      ))}\r\n                    {acceptedFiles && acceptedFiles.length > 0 && !isDragActive && (\r\n                      <>\r\n                        <p>\r\n                          <i className=\"far fa-file fa-2x\" />\r\n                        </p>\r\n                        <p>{acceptedFiles[0].path}</p>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </Box>\r\n                <Box display='flex' justifyContent='flex-end' ml='auto' width='100%'>\r\n                    <Button variant='normal' type=\"submit\" mr={3}\r\n                      onClick={() => {\r\n                        \r\n                        uploadMedia()\r\n                      }}\r\n                    >\r\n                      {intl.formatMessage(messages.saveButtonLabel)}\r\n                    </Button>\r\n                    <Button  type=\"reset\" color=\"light\" onClick={() => {\r\n                      setFiles([])\r\n                      getInputProps([])\r\n                    }}>\r\n                      {intl.formatMessage(messages.cancelButtonLabe)}\r\n                    </Button>\r\n                </Box>\r\n              </div>\r\n            )}\r\n          </Box>\r\n        </div>\r\n     {/*  </div> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BranchInfo;\r\n"]},"metadata":{},"sourceType":"module"}