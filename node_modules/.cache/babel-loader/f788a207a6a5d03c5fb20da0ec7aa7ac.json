{"ast":null,"code":"import { Factory } from '../Factory.js';\nimport { Node } from '../Node.js';\nimport { getNumberValidator } from '../Validators.js';\n\nfunction remap(fromValue, fromMin, fromMax, toMin, toMax) {\n  var fromRange = fromMax - fromMin,\n      toRange = toMax - toMin,\n      toValue;\n\n  if (fromRange === 0) {\n    return toMin + toRange / 2;\n  }\n\n  if (toRange === 0) {\n    return toMin;\n  }\n\n  toValue = (fromValue - fromMin) / fromRange;\n  toValue = toRange * toValue + toMin;\n  return toValue;\n}\n\nexport const Enhance = function (imageData) {\n  var data = imageData.data,\n      nSubPixels = data.length,\n      rMin = data[0],\n      rMax = rMin,\n      r,\n      gMin = data[1],\n      gMax = gMin,\n      g,\n      bMin = data[2],\n      bMax = bMin,\n      b,\n      i;\n  var enhanceAmount = this.enhance();\n\n  if (enhanceAmount === 0) {\n    return;\n  }\n\n  for (i = 0; i < nSubPixels; i += 4) {\n    r = data[i + 0];\n\n    if (r < rMin) {\n      rMin = r;\n    } else if (r > rMax) {\n      rMax = r;\n    }\n\n    g = data[i + 1];\n\n    if (g < gMin) {\n      gMin = g;\n    } else if (g > gMax) {\n      gMax = g;\n    }\n\n    b = data[i + 2];\n\n    if (b < bMin) {\n      bMin = b;\n    } else if (b > bMax) {\n      bMax = b;\n    }\n  }\n\n  if (rMax === rMin) {\n    rMax = 255;\n    rMin = 0;\n  }\n\n  if (gMax === gMin) {\n    gMax = 255;\n    gMin = 0;\n  }\n\n  if (bMax === bMin) {\n    bMax = 255;\n    bMin = 0;\n  }\n\n  var rMid, rGoalMax, rGoalMin, gMid, gGoalMax, gGoalMin, bMid, bGoalMax, bGoalMin;\n\n  if (enhanceAmount > 0) {\n    rGoalMax = rMax + enhanceAmount * (255 - rMax);\n    rGoalMin = rMin - enhanceAmount * (rMin - 0);\n    gGoalMax = gMax + enhanceAmount * (255 - gMax);\n    gGoalMin = gMin - enhanceAmount * (gMin - 0);\n    bGoalMax = bMax + enhanceAmount * (255 - bMax);\n    bGoalMin = bMin - enhanceAmount * (bMin - 0);\n  } else {\n    rMid = (rMax + rMin) * 0.5;\n    rGoalMax = rMax + enhanceAmount * (rMax - rMid);\n    rGoalMin = rMin + enhanceAmount * (rMin - rMid);\n    gMid = (gMax + gMin) * 0.5;\n    gGoalMax = gMax + enhanceAmount * (gMax - gMid);\n    gGoalMin = gMin + enhanceAmount * (gMin - gMid);\n    bMid = (bMax + bMin) * 0.5;\n    bGoalMax = bMax + enhanceAmount * (bMax - bMid);\n    bGoalMin = bMin + enhanceAmount * (bMin - bMid);\n  }\n\n  for (i = 0; i < nSubPixels; i += 4) {\n    data[i + 0] = remap(data[i + 0], rMin, rMax, rGoalMin, rGoalMax);\n    data[i + 1] = remap(data[i + 1], gMin, gMax, gGoalMin, gGoalMax);\n    data[i + 2] = remap(data[i + 2], bMin, bMax, bGoalMin, bGoalMax);\n  }\n};\nFactory.addGetterSetter(Node, 'enhance', 0, getNumberValidator(), Factory.afterSetFilter);","map":{"version":3,"sources":["../../src/filters/Enhance.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { Factory } from '../Factory.js';\nimport { Node } from '../Node.js';\nimport { getNumberValidator } from '../Validators.js';\nfunction remap(fromValue, fromMin, fromMax, toMin, toMax) {\n    var fromRange = fromMax - fromMin, toRange = toMax - toMin, toValue;\n    if (fromRange === 0) {\n        return toMin + toRange / 2;\n    }\n    if (toRange === 0) {\n        return toMin;\n    }\n    toValue = (fromValue - fromMin) / fromRange;\n    toValue = toRange * toValue + toMin;\n    return toValue;\n}\nexport const Enhance = function (imageData) {\n    var data = imageData.data, nSubPixels = data.length, rMin = data[0], rMax = rMin, r, gMin = data[1], gMax = gMin, g, bMin = data[2], bMax = bMin, b, i;\n    var enhanceAmount = this.enhance();\n    if (enhanceAmount === 0) {\n        return;\n    }\n    for (i = 0; i < nSubPixels; i += 4) {\n        r = data[i + 0];\n        if (r < rMin) {\n            rMin = r;\n        }\n        else if (r > rMax) {\n            rMax = r;\n        }\n        g = data[i + 1];\n        if (g < gMin) {\n            gMin = g;\n        }\n        else if (g > gMax) {\n            gMax = g;\n        }\n        b = data[i + 2];\n        if (b < bMin) {\n            bMin = b;\n        }\n        else if (b > bMax) {\n            bMax = b;\n        }\n    }\n    if (rMax === rMin) {\n        rMax = 255;\n        rMin = 0;\n    }\n    if (gMax === gMin) {\n        gMax = 255;\n        gMin = 0;\n    }\n    if (bMax === bMin) {\n        bMax = 255;\n        bMin = 0;\n    }\n    var rMid, rGoalMax, rGoalMin, gMid, gGoalMax, gGoalMin, bMid, bGoalMax, bGoalMin;\n    if (enhanceAmount > 0) {\n        rGoalMax = rMax + enhanceAmount * (255 - rMax);\n        rGoalMin = rMin - enhanceAmount * (rMin - 0);\n        gGoalMax = gMax + enhanceAmount * (255 - gMax);\n        gGoalMin = gMin - enhanceAmount * (gMin - 0);\n        bGoalMax = bMax + enhanceAmount * (255 - bMax);\n        bGoalMin = bMin - enhanceAmount * (bMin - 0);\n    }\n    else {\n        rMid = (rMax + rMin) * 0.5;\n        rGoalMax = rMax + enhanceAmount * (rMax - rMid);\n        rGoalMin = rMin + enhanceAmount * (rMin - rMid);\n        gMid = (gMax + gMin) * 0.5;\n        gGoalMax = gMax + enhanceAmount * (gMax - gMid);\n        gGoalMin = gMin + enhanceAmount * (gMin - gMid);\n        bMid = (bMax + bMin) * 0.5;\n        bGoalMax = bMax + enhanceAmount * (bMax - bMid);\n        bGoalMin = bMin + enhanceAmount * (bMin - bMid);\n    }\n    for (i = 0; i < nSubPixels; i += 4) {\n        data[i + 0] = remap(data[i + 0], rMin, rMax, rGoalMin, rGoalMax);\n        data[i + 1] = remap(data[i + 1], gMin, gMax, gGoalMin, gGoalMax);\n        data[i + 2] = remap(data[i + 2], bMin, bMax, bGoalMin, bGoalMax);\n    }\n};\nFactory.addGetterSetter(Node, 'enhance', 0, getNumberValidator(), Factory.afterSetFilter);\n//# sourceMappingURL=Enhance.js.map"]},"metadata":{},"sourceType":"module"}