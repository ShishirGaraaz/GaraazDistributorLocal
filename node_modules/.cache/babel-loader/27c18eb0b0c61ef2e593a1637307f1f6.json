{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Work\\\\garaaz-distributor\\\\src\\\\components\\\\Invites\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useMemo } from 'react';\nimport { Box, Button, Tag, TagLabel } from \"@chakra-ui/react\";\nimport classnames from 'classnames';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport InviteList from './InviteList';\nimport { getInvites } from './action';\nimport messages from './messages';\nimport { useIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport { Loading } from '../Loading';\nimport DynamicTable from '../DynamicTable';\nimport { selectGlobalState } from '../../globalSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Invites = () => {\n  _s();\n\n  const intl = useIntl();\n  const auth = useSelector(state => state.auth);\n  const [invites, setInvites] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const {\n    isDistributor\n  } = useSelector(selectGlobalState);\n\n  const callInvites = async () => {\n    return await getInvites(auth);\n  };\n\n  const fetchInvites = async () => {\n    try {\n      setLoading(true);\n      setInvites(await callInvites());\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n      toast(intl.formatMessage(messages.somethingwentwrong));\n    }\n  };\n\n  useEffect(() => {\n    fetchInvites();\n  }, []);\n  const columns = useMemo(() => [{\n    Header: 'S. No',\n    accessor: 'sno',\n    Cell: allData => {\n      var _allData$row;\n\n      return /*#__PURE__*/_jsxDEV(Box, {\n        children: (allData === null || allData === void 0 ? void 0 : (_allData$row = allData.row) === null || _allData$row === void 0 ? void 0 : _allData$row.index) + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 18\n      }, this);\n    }\n  }, {\n    Header: 'Status',\n    accessor: 'status'\n  }, {\n    Header: 'Send Status',\n    accessor: 'sendStatus'\n  }, {\n    Header: 'Employee Name',\n    accessor: row => `${row.firstName} ${row.lastName}`\n  }, {\n    Header: 'Mobile Number',\n    accessor: 'mobileNumber'\n  }, {\n    Header: 'Active Status',\n    accessor: 'active',\n    Cell: _ref => {\n      let {\n        value\n      } = _ref;\n\n      if (value) {\n        return /*#__PURE__*/_jsxDEV(Tag, {\n          colorScheme: \"green\",\n          children: /*#__PURE__*/_jsxDEV(TagLabel, {\n            children: \"Active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(Tag, {\n        colorScheme: \"red\",\n        children: /*#__PURE__*/_jsxDEV(TagLabel, {\n          children: \"InActive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }, this);\n    }\n  }], []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-0 p-1 pb-0 \",\n      children: [isDistributor && /*#__PURE__*/_jsxDEV(Box, {\n        textAlign: \"right\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/employee/add\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"addition\",\n            size: \"md\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-user-plus mr-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 25\n            }, this), intl.formatMessage(messages.addEmployee)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 27\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(Box, {\n        mt: 6,\n        children: /*#__PURE__*/_jsxDEV(DynamicTable, {\n          columns: columns,\n          data: invites,\n          fetchData: () => console.log('...fetching'),\n          skipPageReset: true,\n          hidePagination: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n/* <DynamicTable\r\n            columns={activeColumn}\r\n            data={allAccounts}\r\n            fetchData={() => console.log('...fetching')}\r\n            skipPageReset={true}\r\n            loading={tableLoading}\r\n          />  <InviteList invites={invites} /> */\n\n\n_s(Invites, \"8VuDNmB5/YbQ3vk1EQmOPUf1tns=\", false, function () {\n  return [useIntl, useSelector, useSelector];\n});\n\n_c = Invites;\nexport default Invites;\n\nvar _c;\n\n$RefreshReg$(_c, \"Invites\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/components/Invites/index.js"],"names":["React","useEffect","useState","useMemo","Box","Button","Tag","TagLabel","classnames","NavLink","useSelector","InviteList","getInvites","messages","useIntl","Link","toast","Loading","DynamicTable","selectGlobalState","Invites","intl","auth","state","invites","setInvites","loading","setLoading","isDistributor","callInvites","fetchInvites","error","formatMessage","somethingwentwrong","columns","Header","accessor","Cell","allData","row","index","firstName","lastName","value","addEmployee","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useMemo } from 'react';\r\nimport {\r\n  Box, Button, Tag, TagLabel\r\n} from \"@chakra-ui/react\"\r\nimport classnames from 'classnames';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport InviteList from './InviteList';\r\nimport { getInvites } from './action';\r\nimport messages from './messages';\r\nimport { useIntl } from 'react-intl';\r\nimport { Link } from 'react-router-dom';\r\nimport toast from 'react-hot-toast';\r\nimport {Loading} from '../Loading';\r\nimport DynamicTable  from '../DynamicTable';\r\nimport { selectGlobalState } from '../../globalSlice';\r\n\r\nconst Invites = () => {\r\n  const intl = useIntl()\r\n  const auth = useSelector(state => state.auth);\r\n  const [invites, setInvites] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const { isDistributor } = useSelector(selectGlobalState);\r\n  const callInvites = async () => {\r\n    return await getInvites(auth)\r\n  }\r\n  const fetchInvites = async () => {\r\n    try {\r\n      setLoading(true)\r\n      setInvites(await callInvites())\r\n      setLoading(false)\r\n    } catch (error) {\r\n      setLoading(false)\r\n      toast(intl.formatMessage(messages.somethingwentwrong))\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    fetchInvites()\r\n  }, [])\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: 'S. No',\r\n        accessor: 'sno',\r\n        Cell: (allData) => {\r\n          return <Box>{allData?.row?.index + 1}</Box>;\r\n        },\r\n      },\r\n    \r\n      {\r\n        Header: 'Status',\r\n        accessor: 'status',\r\n      },\r\n      {\r\n        Header: 'Send Status',\r\n        accessor: 'sendStatus',\r\n      },\r\n      {\r\n        Header: 'Employee Name',\r\n        accessor: (row) => `${row.firstName} ${row.lastName}`,\r\n      },\r\n      {\r\n        Header: 'Mobile Number',\r\n        accessor: 'mobileNumber',\r\n      },\r\n      {\r\n        Header: 'Active Status',\r\n        accessor: 'active',\r\n        Cell: ({ value }) => {\r\n          if(value){\r\n            return (\r\n            <Tag colorScheme='green'>\r\n              <TagLabel>Active</TagLabel>\r\n            </Tag>\r\n            )\r\n          }\r\n            \r\n          return (\r\n              <Tag colorScheme='red'>\r\n                <TagLabel >InActive</TagLabel>\r\n              </Tag>\r\n            )\r\n        \r\n        },\r\n      },\r\n     \r\n    ],\r\n    [],\r\n  );\r\n\r\n\r\n  return (\r\n    <div >\r\n      <div className=\"mb-0 p-1 pb-0 \">\r\n        {isDistributor && <Box textAlign='right'>\r\n          <Link to=\"/employee/add\">\r\n            <Button variant=\"addition\"\r\n              size=\"md\"><i className=\"fas fa-user-plus mr-3\"></i>\r\n              {intl.formatMessage(messages.addEmployee)}</Button>\r\n          </Link>\r\n        </Box>}\r\n\r\n       {loading? \r\n       (<Loading/>) \r\n       : \r\n       (\r\n        <Box mt={6}>\r\n          <DynamicTable\r\n            columns={columns}\r\n            data={invites}\r\n            fetchData={() => console.log('...fetching')}\r\n            skipPageReset={true}\r\n            hidePagination={true}\r\n\r\n          />\r\n        </Box>\r\n        \r\n\r\n       )\r\n       }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n/* <DynamicTable\r\n            columns={activeColumn}\r\n            data={allAccounts}\r\n            fetchData={() => console.log('...fetching')}\r\n            skipPageReset={true}\r\n            loading={tableLoading}\r\n          />  <InviteList invites={invites} /> */\r\n\r\nexport default Invites;\r\n"]},"metadata":{},"sourceType":"module"}