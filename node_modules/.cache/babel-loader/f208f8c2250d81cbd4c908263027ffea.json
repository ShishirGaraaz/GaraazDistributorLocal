{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Work\\\\garaaz-distributor\\\\src\\\\components\\\\BranchBulk\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Select, Alert, AlertIcon, AlertTitle, AlertDescription, Box } from '@chakra-ui/react';\nimport { useForm } from 'react-hook-form';\nimport { useDropzone } from 'react-dropzone';\nimport { useIntl } from 'react-intl';\nimport { Stepper, Step } from 'react-form-stepper';\nimport XLSX from 'xlsx';\nimport { useSelector, useDispatch } from 'react-redux';\nimport toast from 'react-hot-toast';\nimport isEqual from 'lodash/isEqual';\nimport messages from './messages';\nimport { publicAxios as axios } from '../../axios';\nimport _ from 'lodash';\nimport { sheetValidation } from './helper';\nimport Layout from '../../containers/Layout';\nimport { useHistory } from 'react-router';\nimport withToast from '../../HOCs/withToast';\nimport { getBranches } from '../../globalSlice';\nimport { UseOnboardContext } from '../../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst baseStyle = {\n  flex: 1,\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  padding: '20px',\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: '#eeeeee',\n  borderStyle: 'dashed',\n  backgroundColor: '#fafafa',\n  color: '#bdbdbd',\n  outline: 'none',\n  transition: 'border .24s ease-in-out',\n  cursor: 'pointer'\n};\nconst activeStyle = {\n  borderColor: '#2196f3'\n};\nconst acceptStyle = {\n  borderColor: '#00e676'\n};\nconst rejectStyle = {\n  borderColor: '#ff1744'\n};\nconst requiredFields = ['Branch Name', 'Address Line1', 'State', 'Country', 'Mobile Numbers', 'Branch Code'];\n\nconst BranchBulk = _ref => {\n  _s();\n\n  let {\n    isOpen,\n    onClose,\n    notification\n  } = _ref;\n  const {\n    updateOnboard\n  } = UseOnboardContext();\n  const auth = useSelector(state => state.auth);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [sheetData, setSheetData] = useState([]);\n  const [activeStep, setActiveStep] = useState(1);\n  const [mappedSheetDataValid, setMappedSheetDataValid] = useState([]);\n  const [mappedSheetDataInvalid, setMappedSheetDataInvalid] = useState([]);\n  const [disableNext, setDisableNext] = useState(false);\n  const dispatcher = useDispatch();\n  const [actualBranchOnboardingHeaders, setActualBranchOnboardingHeaders] = useState([]);\n  const acceptedBranchOnboardingHeaders = useSelector(state => state.app.acceptedBranchOnboardingHeaders);\n  const {\n    register,\n    formState: {\n      errors\n    },\n    handleSubmit,\n    reset\n  } = useForm({\n    mode: 'onSubmit'\n  });\n  const history = useHistory();\n  const intl = useIntl();\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject,\n    acceptedFiles,\n    inputRef\n  } = useDropzone({\n    accept: 'text/csv,application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n    maxFiles: 1,\n    noKeyboard: true\n  });\n  useEffect(() => {\n    if (acceptedFiles.length > 0) {\n      const reader = new FileReader();\n\n      reader.onload = evt => {\n        const bstr = evt.target.result;\n        const wb = XLSX.read(bstr, {\n          type: 'binary'\n        });\n        const wsname = wb.SheetNames[0];\n        const ws = wb.Sheets[wsname];\n        const jsonData = XLSX.utils.sheet_to_json(ws, {\n          defval: \"\"\n        });\n\n        if (!jsonData.length) {\n          setErrorMessage('Either sheets is empty or the sheet is corrupted.');\n        } else {\n          setErrorMessage('');\n          setActualBranchOnboardingHeaders(Object.keys(jsonData[0]));\n          setSheetData(jsonData);\n        }\n      };\n\n      reader.readAsBinaryString(acceptedFiles[0]);\n    }\n  }, [acceptedFiles]);\n  useEffect(() => {\n    if (errorMessage) {\n      toast(errorMessage);\n    }\n  }, [errorMessage]);\n  const style = useMemo(() => ({ ...baseStyle,\n    ...(isDragActive ? activeStyle : {}),\n    ...(isDragAccept ? acceptStyle : {}),\n    ...(isDragReject ? rejectStyle : {})\n  }), [isDragActive, isDragReject, isDragAccept]);\n\n  const callback = async data => {\n    if (activeStep < 3) setActiveStep(activeStep + 1);\n\n    if (activeStep === 2) {\n      try {\n        setDisableNext(true);\n        const validatedData = await sheetValidation(sheetData, auth, data, acceptedBranchOnboardingHeaders);\n        const totalRows = validatedData.length;\n        validatedData.forEach((re, index) => {\n          re.then(res => {\n            if (res.data.isInvalid) {\n              setMappedSheetDataInvalid(prev => [...prev, res.data]);\n              notification({\n                status: 'error',\n                title: 'Invalid Fields',\n                description: `${res.missingFields.join(',')} field${res.missingFields.length > 1 ? 's' : ''} ${res.missingFields.length > 1 ? 'are' : 'is'}  invalid`\n              });\n            } else {\n              setMappedSheetDataValid(prev => [...prev, res.data]);\n            }\n\n            if (totalRows === index + 1) setDisableNext(false);\n          });\n        });\n      } catch (error) {\n        if (typeof error === 'string') toast(error);else toast(`${error}`);\n      }\n    } else if (activeStep === 3) {\n      const validLength = mappedSheetDataValid.length;\n      const totalLength = sheetData.length;\n\n      try {\n        await axios.post('/branches/bulk', {\n          branches: mappedSheetDataValid\n        }, {\n          headers: {\n            Authorization: auth.authToken\n          }\n        });\n        toast(\"Branches onboarded successfully\");\n        setMappedSheetDataValid([]);\n        dispatcher(getBranches({\n          auth\n        }));\n\n        if (localStorage.onboard) {\n          localStorage.onboard = 3;\n          updateOnboard(3);\n          history.push('/employees');\n        } else {\n          history.push('/branches');\n        }\n      } catch (err) {\n        if (err.response) {\n          toast(err.response.data.errorMsg);\n        } else {\n          toast(\"Something went wrong!\");\n        }\n\n        setDisableNext(true);\n        setMappedSheetDataInvalid(mappedSheetDataValid); // setMappedSheetDataValid([])\n      }\n\n      reset({}, {\n        keepDirty: false,\n        keepErrors: false,\n        keepValues: false\n      });\n      toast(`Attempting to onboard ${validLength}/${totalLength} Branches.`);\n    }\n  };\n\n  const mapOnboardingFields = useCallback(callback, [activeStep, setActiveStep, mappedSheetDataValid]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full mb-3\",\n      children: /*#__PURE__*/_jsxDEV(Stepper, {\n        styleConfig: {\n          completedBgColor: \"#1e293b\",\n          activeBgColor: \"#da0032\"\n        },\n        activeStep: activeStep,\n        children: [/*#__PURE__*/_jsxDEV(Step, {\n          label: \"File Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Step, {\n          label: \"Field Mappings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Step, {\n          label: \"Review\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }, this), activeStep === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full px-4 lg:w-full mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        w: \"100%\",\n        mb: \"3\",\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          status: \"info\",\n          children: [/*#__PURE__*/_jsxDEV(AlertIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(AlertDescription, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Download a sample file from here \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              style: {\n                fontWeight: \"bold\"\n              },\n              href: \"https://docs.google.com/uc?id=1NGCdg-NMx5zg-wMiHS_ENoO--_9cPqyA&export=download\",\n              download: \"Branch sample File\",\n              children: \"Download File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1\",\n        children: \"Branch Detail Document\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative w-full\",\n        ...getRootProps({\n          style,\n          className: 'dropzone'\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 15\n        }, this), isDragActive && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: intl.formatMessage(messages.dropFileHere)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 17\n        }, this), !acceptedFiles || acceptedFiles.length === 0 && !isDragActive && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: intl.formatMessage(messages.dragAndDropMessage)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 19\n        }, this), acceptedFiles && acceptedFiles.length > 0 && !isDragActive && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"far fa-file fa-2x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: acceptedFiles[0].path\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 11\n    }, this), activeStep === 2 && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(mapOnboardingFields),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"space-between\",\n        children: acceptedBranchOnboardingHeaders.map(header => {\n          var _actualBranchOnboardi;\n\n          return /*#__PURE__*/_jsxDEV(Box, {\n            width: \"48%\",\n            mb: 5,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative w-full mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1\",\n                children: header\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, { ...register(`${header}`, {\n                  required: requiredFields.includes(header)\n                }),\n                defaultValue: (_actualBranchOnboardi = actualBranchOnboardingHeaders.find(actualHeader => `${actualHeader}`.toLowerCase().indexOf(`${header}`.toLowerCase()) !== -1)) !== null && _actualBranchOnboardi !== void 0 ? _actualBranchOnboardi : 'No value',\n                placeholder: \"Select a value\",\n                children: actualBranchOnboardingHeaders.map(actualHeader => /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: actualHeader\n                }, actualHeader, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 19\n              }, this), errors && errors[header] && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-youtube-regular text-sm\",\n                children: header\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this)\n          }, header, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 11\n    }, this), activeStep === 3 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        w: \"100%\",\n        p: 4,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          status: \"info\",\n          children: [/*#__PURE__*/_jsxDEV(AlertIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(AlertTitle, {\n            mr: 2,\n            children: \"Valid Rows\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(AlertDescription, {\n            children: [\"There are total \", mappedSheetDataValid.length, \"/\", sheetData.length, \" rows which are valid\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 13\n      }, this), mappedSheetDataInvalid.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n        w: \"100%\",\n        p: 4,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          status: \"error\",\n          children: [/*#__PURE__*/_jsxDEV(AlertIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(AlertTitle, {\n            mr: 2,\n            children: \"Invalid Rows\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(AlertDescription, {\n            children: [\"There are total \", mappedSheetDataInvalid.length, \"/\", sheetData.length, \" rows which are invalid\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 51\n      }, this), mappedSheetDataInvalid.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n        w: \"100%\",\n        p: 4,\n        style: {\n          overflowX: 'auto'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          variant: \"striped\" // style={{ backgroundColor: \"teal\" }}\n          ,\n          size: \"lg\",\n          className: \"table-auto border-collapse border border-green-800\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            style: {\n              backgroundColor: \"#1e293b\",\n              color: \"#ffffff\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: Object.keys(mappedSheetDataInvalid[0]).map((header, index) => {\n                if (header === \"isInvalid\" || header === 'gallery' || header === \"locationId\" || header === \"contactId\" || header === \"location\" || header === \"contact\") {} else {\n                  return /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"px-2 text-center\",\n                    style: {\n                      width: '150px',\n                      minWidth: '150px'\n                    },\n                    children: header.toUpperCase()\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 348,\n                    columnNumber: 35\n                  }, this);\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            style: {\n              overflow: \"auto\"\n            },\n            children: mappedSheetDataInvalid.map(row => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: Object.keys(row).map((header, index) => {\n                  if (header === \"isInvalid\" || header === 'gallery' || header === \"locationId\" || header === \"contactId\" || header === \"location\" || header === \"contact\") {} else if (header === \"workingDays\") {\n                    //below split is because that is a long string with various key value pair\n                    return /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-2 text-center\",\n                      style: {\n                        width: '110px',\n                        minWidth: '110px',\n                        color: row[header] === 'invalid' ? \"red\" : \"black\"\n                      },\n                      children: [`${row[header]}`.split('\"', 4)[3], \"...\"]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 369,\n                      columnNumber: 41\n                    }, this);\n                  } else {\n                    return /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"px-2 text-center\",\n                      style: {\n                        width: '110px',\n                        minWidth: '110px',\n                        color: row[header] === 'invalid' ? \"red\" : \"black\"\n                      },\n                      children: row[header] || \"....\"\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 377,\n                      columnNumber: 41\n                    }, this);\n                  }\n                })\n              }, row.branchName + row.branchCode, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 25\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bulkButtonsContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmit(mapOnboardingFields),\n        style: {\n          backgroundColor: \"#1e293b\",\n          color: \"#ffffff\",\n          marginLeft: \"10px\"\n        },\n        disabled: sheetData.length < 1,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"clrBtn\",\n        type: \"reset\",\n        onClick: () => {\n          setActiveStep(1);\n          acceptedFiles.length = 0;\n          acceptedFiles.splice(0, acceptedFiles.length);\n\n          if (inputRef.current) {\n            inputRef.current.value = '';\n          }\n\n          setSheetData([]);\n          setMappedSheetDataValid([]);\n          setMappedSheetDataInvalid([]);\n          reset({}, {\n            keepDirty: false,\n            keepErrors: false,\n            keepValues: false\n          });\n        },\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(BranchBulk, \"vxKSheFbplO1zgizjG+mKxYiPZs=\", false, function () {\n  return [useSelector, useDispatch, useSelector, useForm, useHistory, useIntl, useDropzone];\n});\n\n_c = BranchBulk;\nBranchBulk.propTypes = {\n  isOpen: PropTypes.bool,\n  onClose: PropTypes.func\n};\nexport default _c2 = withToast(BranchBulk);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BranchBulk\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/components/BranchBulk/index.js"],"names":["React","useMemo","useState","useEffect","useCallback","PropTypes","Button","Select","Alert","AlertIcon","AlertTitle","AlertDescription","Box","useForm","useDropzone","useIntl","Stepper","Step","XLSX","useSelector","useDispatch","toast","isEqual","messages","publicAxios","axios","_","sheetValidation","Layout","useHistory","withToast","getBranches","UseOnboardContext","baseStyle","flex","display","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","color","outline","transition","cursor","activeStyle","acceptStyle","rejectStyle","requiredFields","BranchBulk","isOpen","onClose","notification","updateOnboard","auth","state","errorMessage","setErrorMessage","sheetData","setSheetData","activeStep","setActiveStep","mappedSheetDataValid","setMappedSheetDataValid","mappedSheetDataInvalid","setMappedSheetDataInvalid","disableNext","setDisableNext","dispatcher","actualBranchOnboardingHeaders","setActualBranchOnboardingHeaders","acceptedBranchOnboardingHeaders","app","register","formState","errors","handleSubmit","reset","mode","history","intl","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","acceptedFiles","inputRef","accept","maxFiles","noKeyboard","length","reader","FileReader","onload","evt","bstr","target","result","wb","read","type","wsname","SheetNames","ws","Sheets","jsonData","utils","sheet_to_json","defval","Object","keys","readAsBinaryString","style","callback","data","validatedData","totalRows","forEach","re","index","then","res","isInvalid","prev","status","title","description","missingFields","join","error","validLength","totalLength","post","branches","headers","Authorization","authToken","localStorage","onboard","push","err","response","errorMsg","keepDirty","keepErrors","keepValues","mapOnboardingFields","completedBgColor","activeBgColor","fontWeight","className","formatMessage","dropFileHere","dragAndDropMessage","path","map","header","required","includes","find","actualHeader","toLowerCase","indexOf","overflowX","width","minWidth","toUpperCase","overflow","row","split","branchName","branchCode","marginLeft","splice","current","value","propTypes","bool","func"],"mappings":"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","sourcesContent":["import React, { useMemo, useState, useEffect, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Select, Alert, AlertIcon, AlertTitle, AlertDescription, Box } from '@chakra-ui/react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { useIntl } from 'react-intl';\r\nimport { Stepper, Step } from 'react-form-stepper';\r\nimport XLSX from 'xlsx';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport toast from 'react-hot-toast';\r\nimport isEqual from 'lodash/isEqual';\r\nimport messages from './messages'\r\nimport { publicAxios as axios } from '../../axios';\r\nimport _ from 'lodash';\r\nimport { sheetValidation } from './helper';\r\nimport Layout from '../../containers/Layout';\r\nimport { useHistory } from 'react-router';\r\nimport withToast from '../../HOCs/withToast';\r\nimport { getBranches } from '../../globalSlice';\r\nimport { UseOnboardContext } from '../../App';\r\n\r\n\r\nconst baseStyle = {\r\n  flex: 1,\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  padding: '20px',\r\n  borderWidth: 2,\r\n  borderRadius: 2,\r\n  borderColor: '#eeeeee',\r\n  borderStyle: 'dashed',\r\n  backgroundColor: '#fafafa',\r\n  color: '#bdbdbd',\r\n  outline: 'none',\r\n  transition: 'border .24s ease-in-out',\r\n  cursor: 'pointer',\r\n};\r\n\r\n\r\nconst activeStyle = {\r\n  borderColor: '#2196f3',\r\n};\r\n\r\nconst acceptStyle = {\r\n  borderColor: '#00e676',\r\n};\r\n\r\nconst rejectStyle = {\r\n  borderColor: '#ff1744',\r\n};\r\n\r\n\r\nconst requiredFields = ['Branch Name', 'Address Line1','State','Country', 'Mobile Numbers', 'Branch Code']\r\n\r\nconst BranchBulk = ({ isOpen, onClose, notification}) => {\r\n  const { updateOnboard } = UseOnboardContext();\r\n  const auth = useSelector(state => state.auth);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [sheetData, setSheetData] = useState([]);\r\n  const [activeStep, setActiveStep] = useState(1);\r\n  const [mappedSheetDataValid, setMappedSheetDataValid] = useState([]);\r\n  const [mappedSheetDataInvalid, setMappedSheetDataInvalid] = useState([]);\r\n  const [disableNext, setDisableNext] = useState(false)\r\n  const dispatcher = useDispatch()\r\n\r\n  const [\r\n    actualBranchOnboardingHeaders,\r\n    setActualBranchOnboardingHeaders,\r\n  ] = useState([]);\r\n  const acceptedBranchOnboardingHeaders = useSelector(\r\n    state => state.app.acceptedBranchOnboardingHeaders,\r\n  );\r\n\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    handleSubmit,\r\n    reset,\r\n  } = useForm({\r\n    mode: 'onSubmit',\r\n  });\r\n  const history = useHistory()\r\n  const intl = useIntl();\r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive,\r\n    isDragAccept,\r\n    isDragReject,\r\n    acceptedFiles,\r\n    inputRef,\r\n  } = useDropzone({\r\n    accept:\r\n      'text/csv,application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n    maxFiles: 1,\r\n    noKeyboard: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (acceptedFiles.length > 0) {\r\n      const reader = new FileReader();\r\n      reader.onload = evt => {\r\n        const bstr = evt.target.result;\r\n        const wb = XLSX.read(bstr, { type: 'binary' });\r\n        const wsname = wb.SheetNames[0];\r\n        const ws = wb.Sheets[wsname];\r\n        const jsonData = XLSX.utils.sheet_to_json(ws, { defval: \"\" });\r\n        if (!jsonData.length) {\r\n          setErrorMessage('Either sheets is empty or the sheet is corrupted.');\r\n        } else {\r\n          setErrorMessage('');\r\n          setActualBranchOnboardingHeaders(Object.keys(jsonData[0]));\r\n          setSheetData(jsonData);\r\n        }\r\n      };\r\n      reader.readAsBinaryString(acceptedFiles[0]);\r\n    }\r\n  }, [acceptedFiles]);\r\n\r\n  useEffect(() => {\r\n    if (errorMessage) {\r\n      toast(errorMessage);\r\n    }\r\n  }, [errorMessage]);\r\n\r\n  const style = useMemo(\r\n    () => ({\r\n      ...baseStyle,\r\n      ...(isDragActive ? activeStyle : {}),\r\n      ...(isDragAccept ? acceptStyle : {}),\r\n      ...(isDragReject ? rejectStyle : {}),\r\n    }),\r\n    [isDragActive, isDragReject, isDragAccept],\r\n  );\r\n\r\n\r\n  const callback = async (data) => {\r\n \r\n    if (activeStep < 3) setActiveStep(activeStep + 1);\r\n    if (activeStep === 2) {\r\n      try {\r\n        setDisableNext(true)\r\n        const validatedData = await sheetValidation(sheetData, auth, data, acceptedBranchOnboardingHeaders);\r\n \r\n        const totalRows = validatedData.length;\r\n       validatedData.forEach((re, index) => {\r\n          re.then((res) => {\r\n  \r\n            if (res.data.isInvalid) {\r\n              setMappedSheetDataInvalid((prev) => [...prev, res.data])\r\n              notification({\r\n                status: 'error',\r\n                title: 'Invalid Fields',\r\n                description:\r\n                  `${res.missingFields.join(',')} field${res.missingFields.length > 1? 's' : ''} ${res.missingFields.length > 1? 'are' : 'is'}  invalid`\r\n              });\r\n            } else {\r\n              setMappedSheetDataValid((prev) => [...prev, res.data])\r\n            }\r\n            if (totalRows === index + 1) setDisableNext(false)\r\n          })\r\n        })\r\n      } catch (error) {\r\n        if(typeof error === 'string') toast(error);\r\n        else toast(`${error}`);\r\n      }\r\n    }\r\n    else if (activeStep === 3) {\r\n      const validLength = mappedSheetDataValid.length;\r\n      const totalLength = sheetData.length;\r\n\r\n       try {\r\n        await axios.post(\r\n          '/branches/bulk',\r\n          {\r\n            branches: mappedSheetDataValid,\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: auth.authToken,\r\n            },\r\n          },\r\n        );\r\n        toast(\"Branches onboarded successfully\");\r\n        setMappedSheetDataValid([])\r\n        dispatcher(getBranches({auth}))\r\n        if(localStorage.onboard){\r\n          localStorage.onboard=3;\r\n          updateOnboard(3);\r\n          history.push('/employees');\r\n        }else {\r\n          history.push('/branches');\r\n        }\r\n      } catch (err) {\r\n        if(err.response){\r\n          toast(err.response.data.errorMsg);\r\n        }else{\r\n          toast(\"Something went wrong!\");\r\n        }\r\n        setDisableNext(true)\r\n        setMappedSheetDataInvalid(mappedSheetDataValid)\r\n        // setMappedSheetDataValid([])\r\n      }\r\n      reset(\r\n        {},\r\n        {\r\n          keepDirty: false,\r\n          keepErrors: false,\r\n          keepValues: false,\r\n        },\r\n      )\r\n      toast(`Attempting to onboard ${validLength}/${totalLength} Branches.`); \r\n    }\r\n  }\r\n  const mapOnboardingFields = useCallback(callback,\r\n    [activeStep, setActiveStep, mappedSheetDataValid],\r\n  );\r\n  return (\r\n\r\n    <>\r\n{/*       <div className=\"container relative flex flex-col w-full shadow-lg rounded-lg bg-white\" style={{ height: \"80vh\", overflowY: \"auto\", paddingTop: \"30px\" }}> */}\r\n        <div className=\"w-full mb-3\">\r\n          <Stepper styleConfig={{\r\n            completedBgColor: \"#1e293b\",\r\n            activeBgColor: \"#da0032\"\r\n          }} activeStep={activeStep}>\r\n            <Step label=\"File Upload\" />\r\n            <Step label=\"Field Mappings\" />\r\n            <Step label=\"Review\" />\r\n          </Stepper>\r\n        </div>\r\n        {activeStep === 1 && (\r\n          <div className=\"w-full px-4 lg:w-full mb-3\">\r\n            <Box w=\"100%\" mb=\"3\" >\r\n              <Alert status=\"info\">\r\n                <AlertIcon />\r\n                <AlertDescription>\r\n                  <label >Download a sample file from here </label>\r\n                  {/* 160PtTlhQRtSH7UWFPaddgxczR35Ggbfj */}\r\n                  <a style={{ fontWeight: \"bold\" }} href={\"https://docs.google.com/uc?id=1NGCdg-NMx5zg-wMiHS_ENoO--_9cPqyA&export=download\"} download=\"Branch sample File\">Download File</a>\r\n                </AlertDescription>\r\n              </Alert>\r\n            </Box>\r\n            <label\r\n              className=\"block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1\"\r\n\r\n            >\r\n              Branch Detail Document\r\n            </label>\r\n            <div\r\n              className=\"relative w-full\"\r\n              {...getRootProps({ style, className: 'dropzone' })}\r\n            >\r\n              <input {...getInputProps()} />\r\n              {isDragActive && (\r\n                <p>{intl.formatMessage(messages.dropFileHere)}</p>\r\n              )}\r\n              {!acceptedFiles ||\r\n                (acceptedFiles.length === 0 && !isDragActive && (\r\n                  <p>{intl.formatMessage(messages.dragAndDropMessage)}</p>\r\n                ))}\r\n              {acceptedFiles && acceptedFiles.length > 0 && !isDragActive && (\r\n                <>\r\n                  <p>\r\n                    <i className=\"far fa-file fa-2x\" />\r\n                  </p>\r\n                  <p>{acceptedFiles[0].path}</p>\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {activeStep === 2 &&\r\n          <form onSubmit={handleSubmit(mapOnboardingFields)}>\r\n            <Box display='flex' flexWrap='wrap' justifyContent='space-between'>\r\n            {acceptedBranchOnboardingHeaders.map(header => (\r\n              <Box key={header} width='48%' mb={5}>\r\n                <div className=\"relative w-full mb-3\">\r\n                  <label\r\n                    className=\"block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1\"\r\n\r\n                  >\r\n                    {header}\r\n                  </label>\r\n                  <Select\r\n                    {...register(`${header}`, {\r\n                      required: requiredFields.includes(header),\r\n                    })}\r\n                    defaultValue={actualBranchOnboardingHeaders.find(actualHeader => `${actualHeader}`.toLowerCase().indexOf(`${header}`.toLowerCase()) !== -1) ?? 'No value'}\r\n                    placeholder='Select a value'\r\n                  >\r\n                    {actualBranchOnboardingHeaders.map(actualHeader => (\r\n                      <option key={actualHeader} >{actualHeader}</option>\r\n                    ))}\r\n                  </Select>\r\n                  {errors && errors[header] && (\r\n                    <span className=\"text-youtube-regular text-sm\">\r\n                      {header}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </Box>\r\n            ))}\r\n            </Box>\r\n          </form>\r\n        }\r\n\r\n        {activeStep === 3 && (\r\n          <>\r\n            <Box w=\"100%\" p={4}>\r\n              <Alert status=\"info\">\r\n                <AlertIcon />\r\n                <AlertTitle mr={2}>Valid Rows</AlertTitle>\r\n                <AlertDescription>\r\n                  There are total {mappedSheetDataValid.length}/\r\n                  {sheetData.length} rows which are valid\r\n                </AlertDescription>\r\n                {/* <CloseButton position=\"absolute\" right=\"8px\" top=\"8px\" /> */}\r\n              </Alert>\r\n            </Box>\r\n\r\n            {mappedSheetDataInvalid.length > 0 && <Box w=\"100%\" p={4}>\r\n              <Alert status=\"error\">\r\n                <AlertIcon />\r\n                <AlertTitle mr={2}>Invalid Rows</AlertTitle>\r\n                <AlertDescription>\r\n                  There are total {mappedSheetDataInvalid.length}/\r\n                  {sheetData.length} rows which are invalid\r\n                </AlertDescription>\r\n                {/* <CloseButton position=\"absolute\" right=\"8px\" top=\"8px\" /> */}\r\n              </Alert>\r\n            </Box>}\r\n            {mappedSheetDataInvalid.length > 0 && (\r\n              <Box w=\"100%\" p={4} style={{ overflowX: 'auto' }}>\r\n                <table\r\n                  variant=\"striped\"\r\n                  // style={{ backgroundColor: \"teal\" }}\r\n                  size=\"lg\"\r\n                  className=\"table-auto border-collapse border border-green-800\"\r\n                >\r\n                  <thead style={{ backgroundColor: \"#1e293b\", color: \"#ffffff\" }}>\r\n                    <tr>\r\n                      {Object.keys(mappedSheetDataInvalid[0]).map((header, index) => {\r\n                        if (header === \"isInvalid\" || header === 'gallery' || header === \"locationId\" || header === \"contactId\" || header === \"location\" || header === \"contact\") {\r\n                        } else {\r\n                          return (<th\r\n                            key={index}\r\n                            className=\"px-2 text-center\"\r\n                            style={{ width: '150px', minWidth: '150px' }}\r\n                          >\r\n                            {header.toUpperCase()}\r\n                          </th>)\r\n                        }\r\n                      })\r\n                      }\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody style={{ overflow: \"auto\" }}>\r\n                    {mappedSheetDataInvalid.map(row => {\r\n                      return (\r\n                        <tr key={row.branchName + row.branchCode}>\r\n                          {\r\n                            Object.keys(row).map((header, index) => {\r\n                              if (header === \"isInvalid\" || header === 'gallery' || header === \"locationId\" || header === \"contactId\" || header === \"location\" || header === \"contact\") {\r\n                              } else if (header === \"workingDays\") {\r\n                                //below split is because that is a long string with various key value pair\r\n                                return (<td\r\n                                  key={index}\r\n                                  className=\"px-2 text-center\"\r\n                                  style={{ width: '110px', minWidth: '110px', color: row[header] === 'invalid' ? \"red\" : \"black\" }}\r\n                                >\r\n                                  {`${row[header]}`.split('\"', 4)[3]}{\"...\"}\r\n                                </td>)\r\n                              } else {\r\n                                return (<td\r\n                                  key={index}\r\n                                  className=\"px-2 text-center\"\r\n                                  style={{ width: '110px', minWidth: '110px', color: row[header] === 'invalid' ? \"red\" : \"black\" }}\r\n                                >\r\n                                  {row[header] || \"....\"}\r\n                                </td>)\r\n                              }\r\n                            })\r\n                          }\r\n                        </tr>\r\n                      )\r\n                    })}\r\n                  </tbody>\r\n                </table>\r\n              </Box>\r\n            )}\r\n          </>\r\n        )}\r\n        {/* </ModalBody> */}\r\n\r\n        {/* <div className=\"bulkButtonsContainer\">\r\n\r\n          <Button variant=\"ghost\" onClick={() => {\r\n            setMappedSheetDataValid([])\r\n            setMappedSheetDataInvalid([])\r\n            setDisableNext(false)\r\n            reset(\r\n              {},\r\n              {\r\n                keepDirty: false,\r\n                keepErrors: false,\r\n                keepValues: false,\r\n              },\r\n            )\r\n          }\r\n          }\r\n          >\r\n            Clear\r\n          </Button>\r\n          <Button\r\n            onClick={handleSubmit(mapOnboardingFields)}\r\n            style={{ backgroundColor: \"#1e293b\", color: \"#ffffff\", marginLeft: \"10px\" }}\r\n            disabled={sheetData.length < 1 || disableNext}\r\n          >\r\n            Next\r\n          </Button>\r\n        </div> */}\r\n        <div className=\"bulkButtonsContainer\">\r\n          <Button\r\n            onClick={handleSubmit(mapOnboardingFields)}\r\n            style={{ backgroundColor: \"#1e293b\", color: \"#ffffff\", marginLeft: \"10px\" }}\r\n            disabled={sheetData.length < 1}\r\n          >\r\n            Next\r\n          </Button>\r\n          <Button variant=\"clrBtn\" type=\"reset\" onClick={() => {\r\n            setActiveStep(1);\r\n            acceptedFiles.length = 0;\r\n            acceptedFiles.splice(0, acceptedFiles.length);\r\n            if (inputRef.current) {\r\n              inputRef.current.value = '';\r\n            }\r\n            setSheetData([]);\r\n            setMappedSheetDataValid([])\r\n            setMappedSheetDataInvalid([])\r\n            reset(\r\n              {},\r\n              {\r\n                keepDirty: false,\r\n                keepErrors: false,\r\n                keepValues: false,\r\n              },\r\n            )\r\n          }\r\n          }\r\n          >\r\n            Clear\r\n          </Button>\r\n        </div>\r\n  {/*     </div> */}\r\n    </>\r\n  );\r\n};\r\n\r\nBranchBulk.propTypes = {\r\n  isOpen: PropTypes.bool,\r\n  onClose: PropTypes.func,\r\n};\r\n\r\nexport default withToast(BranchBulk);\r\n"]},"metadata":{},"sourceType":"module"}