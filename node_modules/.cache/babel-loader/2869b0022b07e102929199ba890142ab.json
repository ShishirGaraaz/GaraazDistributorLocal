{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Work\\\\garaaz-distributor\\\\src\\\\components\\\\BranchDetailsForm\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { Button } from '@chakra-ui/react';\nimport { useIntl } from 'react-intl';\nimport toast from 'react-hot-toast';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\nimport { useSelector } from 'react-redux';\nimport { publicAxios as axios } from '../../axios';\nimport messages from './messages';\nimport { isUndefined, upperCase } from 'lodash';\nimport { useParams } from 'react-router';\nimport { Select as MultiSelect } from 'chakra-react-select';\nimport { getDistributorInfo } from '../../containers/DistributerInfo/actions';\nimport daysOption from '../../utils/daysOption';\nimport CustomInput from '../../utils/Input';\nimport FormactionButtons from '../../utils/FormactionButtons';\nimport { Box, Center } from '@chakra-ui/react';\nimport InputScaffold from '../../utils/InputScaffold';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BranchDetailsForm = _ref => {\n  _s();\n\n  let {\n    setActiveStep,\n    setCurrentBranch,\n    currentBranch,\n    getBranchDetails\n  } = _ref;\n  const {\n    register,\n    formState: {\n      errors\n    },\n    handleSubmit,\n    reset,\n    setValue\n  } = useForm({\n    mode: 'onSubmit'\n  });\n  const [branchDetails, setBranchDetails] = useState({});\n  const auth = useSelector(state => state.auth);\n  const {\n    branchId\n  } = useParams();\n  const [workingdays, setworkingdays] = useState([]);\n  const intl = useIntl();\n  const [loading, setLoading] = useState(false);\n\n  const getDistributorData = async () => {\n    try {\n      const {\n        business = []\n      } = await getDistributorInfo(auth);\n      const {\n        operationalDays,\n        operationalHours\n      } = business[0];\n      setValue('startTime', operationalHours.split('-')[0]);\n      setValue('endTime', operationalHours.split('-')[1]);\n      setworkingdays(JSON.parse(operationalDays));\n    } catch (err) {\n      toast('Distributor profile missing');\n    }\n  };\n\n  const getBranchData = async () => {\n    const data = await getBranchDetails(branchId || currentBranch._id);\n    setBranchDetails(data);\n  };\n\n  useEffect(() => {\n    if (!isUndefined(branchId) || !isUndefined(currentBranch._id)) {\n      getBranchData();\n    } else {\n      getDistributorData();\n    }\n  }, []);\n  useEffect(() => {\n    if (!isEmpty(branchDetails)) {\n      setValue('branchName', get(branchDetails, 'branchName', ''));\n      setValue('branchCode', get(branchDetails, 'branchCode', ''));\n      setValue('inchargeCode', get(branchDetails, 'inchargeCode', '')); // setValue('branchRo', get(branchDetails, 'branchRo', ''));\n\n      setValue('startTime', get(branchDetails, 'startTime', ''));\n      setValue('endTime', get(branchDetails, 'endTime', ''));\n      setworkingdays(get(branchDetails, 'workingDays').map(day => ({\n        value: upperCase(day.slice(0, 3)),\n        label: day\n      })));\n    }\n  }, [branchDetails]);\n\n  const handleFormSubmit = async Data => {\n    setLoading(true);\n    Data.gallery = [];\n    if (!isUndefined(currentBranch.locationId)) Data.locationId = currentBranch.locationId;\n    if (!isUndefined(currentBranch.contactId)) Data.contactId = currentBranch.contactId;\n\n    if (!isEmpty(currentBranch.gallery)) {\n      for (var i in currentBranch.gallery) {\n        Data.gallery[i] = currentBranch.gallery[i].mediaId;\n      }\n    }\n\n    Data.workingDays = workingdays.map(day => day.label);\n\n    try {\n      const api = !isEmpty(branchId) || currentBranch._id ? `/branches/${branchId || currentBranch._id}` : '/branches';\n\n      if (!isEmpty(branchId) || currentBranch._id) {\n        delete Data.branchCode;\n        await axios.patch(api, Data, {\n          headers: {\n            Authorization: auth.authToken\n          }\n        });\n        setBranchDetails(Data);\n      } else {\n        const {\n          data\n        } = await axios.post(api, {\n          branches: [{ ...Data\n          }]\n        }, {\n          headers: {\n            Authorization: auth.authToken\n          }\n        });\n        setCurrentBranch(data[0]);\n      }\n\n      setActiveStep(2);\n      toast(intl.formatMessage(messages.branchDetailsSaveSuccess));\n      setLoading(false);\n    } catch (err) {\n      if (err === null || err === void 0 ? void 0 : err.response) {\n        var _err$response, _err$response$data, _err$response2, _err$response2$data;\n\n        toast(`${err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.errorMsg}`.indexOf('branchCode') !== -1 ? 'Branch code exist, please enter a valid branch code' : err === null || err === void 0 ? void 0 : (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.errorMsg);\n      } else {\n        toast(intl.formatMessage(messages.somethingWentWrong));\n      }\n\n      setLoading(false);\n    }\n  };\n\n  const onReset = () => reset({}, {\n    keepDirty: false,\n    keepErrors: false,\n    keepValues: false\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(handleFormSubmit),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"mt-6 mb-2 font-bold\",\n        children: intl.formatMessage(messages.branchDetails)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"mb-6 border-b-1 border-blueGray-200\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          flexWrap: \"wrap\",\n          children: [/*#__PURE__*/_jsxDEV(InputScaffold, {\n            width: \"48%\",\n            label: messages.branchName,\n            inputName: \"branchName\",\n            inputType: \"text\",\n            register: register,\n            isRequired: true,\n            errors: errors,\n            requiredLabel: messages.branchNameRequired\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputScaffold, {\n            width: \"48%\",\n            label: messages.branchCode,\n            inputName: \"branchCode\",\n            inputType: \"text\",\n            register: register,\n            isRequired: true,\n            errors: errors,\n            requiredLabel: messages.branchCodeRequired\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          flexWrap: \"wrap\",\n          width: \"100%\",\n          mt: 6,\n          mb: 6,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            width: {\n              base: '100%',\n              lg: '48%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1\",\n              children: intl.formatMessage(messages.workingDays)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MultiSelect, {\n              name: \"workingDays\",\n              placeholder: intl.formatMessage(messages.workingDays),\n              value: workingdays,\n              onChange: e => {\n                setworkingdays(e);\n              },\n              isMulti: true,\n              options: daysOption\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            flexWrap: \"wrap\",\n            width: {\n              base: '100%',\n              lg: '48%'\n            },\n            mt: {\n              base: 6,\n              lg: 0\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputScaffold, {\n              width: \"47%\",\n              label: messages.startTime,\n              inputName: \"startTime\",\n              inputType: \"time\",\n              register: register,\n              isRequired: true,\n              errors: errors,\n              requiredLabel: messages.startTimeRequired\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Center, {\n              width: {\n                base: 'auto',\n                lg: '6%'\n              },\n              display: {\n                base: 'none',\n                lg: 'flex'\n              },\n              textAlign: \"center\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: intl.formatMessage(messages.operationalHourTo)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputScaffold, {\n              width: \"47%\",\n              label: messages.endTime,\n              inputName: \"endTime\",\n              inputType: \"time\",\n              register: register,\n              isRequired: true,\n              errors: errors,\n              requiredLabel: messages.endTimeRequired\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        ml: \"auto\",\n        children: /*#__PURE__*/_jsxDEV(FormactionButtons, {\n          isLoading: loading,\n          saveLabel: messages.saveButtonText,\n          onReset: onReset,\n          cancleLabel: messages.cancelButtonLabe\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BranchDetailsForm, \"YI9/Lrl+QygsjMh6LL/n4V2zrxA=\", false, function () {\n  return [useForm, useSelector, useParams, useIntl];\n});\n\n_c = BranchDetailsForm;\nBranchDetailsForm.propTypes = {\n  setActiveStep: PropTypes.func,\n  setCurrentBranch: PropTypes.func,\n  currentBranch: PropTypes.object,\n  getBranchDetails: PropTypes.func\n};\nexport default BranchDetailsForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BranchDetailsForm\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/components/BranchDetailsForm/index.js"],"names":["React","useEffect","useState","PropTypes","useForm","Button","useIntl","toast","get","isEmpty","useSelector","publicAxios","axios","messages","isUndefined","upperCase","useParams","Select","MultiSelect","getDistributorInfo","daysOption","CustomInput","FormactionButtons","Box","Center","InputScaffold","BranchDetailsForm","setActiveStep","setCurrentBranch","currentBranch","getBranchDetails","register","formState","errors","handleSubmit","reset","setValue","mode","branchDetails","setBranchDetails","auth","state","branchId","workingdays","setworkingdays","intl","loading","setLoading","getDistributorData","business","operationalDays","operationalHours","split","JSON","parse","err","getBranchData","data","_id","map","day","value","slice","label","handleFormSubmit","Data","gallery","locationId","contactId","i","mediaId","workingDays","api","branchCode","patch","headers","Authorization","authToken","post","branches","formatMessage","branchDetailsSaveSuccess","response","errorMsg","indexOf","somethingWentWrong","onReset","keepDirty","keepErrors","keepValues","branchName","branchNameRequired","branchCodeRequired","base","lg","e","startTime","startTimeRequired","operationalHourTo","endTime","endTimeRequired","saveButtonText","cancelButtonLabe","propTypes","func","object"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Button } from '@chakra-ui/react';\r\nimport { useIntl } from 'react-intl';\r\nimport toast from 'react-hot-toast';\r\nimport get from 'lodash/get';\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport { useSelector } from 'react-redux';\r\nimport { publicAxios as axios } from '../../axios';\r\nimport messages from './messages';\r\nimport { isUndefined, upperCase } from 'lodash';\r\nimport { useParams } from 'react-router';\r\nimport { Select as MultiSelect } from 'chakra-react-select';\r\nimport { getDistributorInfo } from '../../containers/DistributerInfo/actions';\r\nimport daysOption from '../../utils/daysOption';\r\nimport CustomInput from '../../utils/Input';\r\nimport FormactionButtons from '../../utils/FormactionButtons';\r\nimport { Box, Center } from '@chakra-ui/react';\r\nimport InputScaffold from '../../utils/InputScaffold';\r\n\r\nconst BranchDetailsForm = ({\r\n  setActiveStep,\r\n  setCurrentBranch,\r\n  currentBranch,\r\n  getBranchDetails,\r\n}) => {\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    handleSubmit,\r\n    reset,\r\n    setValue,\r\n  } = useForm({ mode: 'onSubmit' });\r\n  const [branchDetails, setBranchDetails] = useState({});\r\n  const auth = useSelector((state) => state.auth);\r\n  const { branchId } = useParams();\r\n  const [workingdays, setworkingdays] = useState([]);\r\n  const intl = useIntl();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getDistributorData = async () => {\r\n    try {\r\n      const { business = [] } = await getDistributorInfo(auth);\r\n      const { operationalDays, operationalHours } = business[0];\r\n      setValue('startTime', operationalHours.split('-')[0]);\r\n      setValue('endTime', operationalHours.split('-')[1]);\r\n      setworkingdays(JSON.parse(operationalDays));\r\n    } catch (err) {\r\n      toast('Distributor profile missing');\r\n    }\r\n  };\r\n\r\n  const getBranchData = async () => {\r\n    const data = await getBranchDetails(branchId || currentBranch._id);\r\n    setBranchDetails(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isUndefined(branchId) || !isUndefined(currentBranch._id)) {\r\n      getBranchData();\r\n    } else {\r\n      getDistributorData();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!isEmpty(branchDetails)) {\r\n      setValue('branchName', get(branchDetails, 'branchName', ''));\r\n      setValue('branchCode', get(branchDetails, 'branchCode', ''));\r\n      setValue('inchargeCode', get(branchDetails, 'inchargeCode', ''));\r\n      // setValue('branchRo', get(branchDetails, 'branchRo', ''));\r\n      setValue('startTime', get(branchDetails, 'startTime', ''));\r\n      setValue('endTime', get(branchDetails, 'endTime', ''));\r\n      setworkingdays(\r\n        get(branchDetails, 'workingDays').map((day) => ({\r\n          value: upperCase(day.slice(0, 3)),\r\n          label: day,\r\n        })),\r\n      );\r\n    }\r\n  }, [branchDetails]);\r\n\r\n  const handleFormSubmit = async (Data) => {\r\n    setLoading(true);\r\n    Data.gallery = [];\r\n    if (!isUndefined(currentBranch.locationId))\r\n      Data.locationId = currentBranch.locationId;\r\n    if (!isUndefined(currentBranch.contactId))\r\n      Data.contactId = currentBranch.contactId;\r\n    if (!isEmpty(currentBranch.gallery)) {\r\n      for (var i in currentBranch.gallery) {\r\n        Data.gallery[i] = currentBranch.gallery[i].mediaId;\r\n      }\r\n    }\r\n    Data.workingDays = workingdays.map((day) => day.label);\r\n    try {\r\n      const api =\r\n        !isEmpty(branchId) || currentBranch._id\r\n          ? `/branches/${branchId || currentBranch._id}`\r\n          : '/branches';\r\n      if (!isEmpty(branchId) || currentBranch._id) {\r\n        \r\n        delete Data.branchCode;\r\n        await axios.patch(api, Data, {\r\n          headers: {\r\n            Authorization: auth.authToken,\r\n          },\r\n        });\r\n        setBranchDetails(Data);\r\n      } else {\r\n        const { data } = await axios.post(\r\n          api,\r\n          {\r\n            branches: [{ ...Data }],\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: auth.authToken,\r\n            },\r\n          },\r\n        );\r\n        setCurrentBranch(data[0]);\r\n      }\r\n      setActiveStep(2);\r\n      toast(intl.formatMessage(messages.branchDetailsSaveSuccess));\r\n      setLoading(false);\r\n    } catch (err) {\r\n      if (err?.response) {\r\n        toast(\r\n          `${err?.response?.data?.errorMsg}`.indexOf('branchCode') !== -1\r\n            ? 'Branch code exist, please enter a valid branch code'\r\n            : err?.response?.data?.errorMsg,\r\n        );\r\n      } else {\r\n        toast(intl.formatMessage(messages.somethingWentWrong));\r\n      }\r\n\r\n      setLoading(false);\r\n    }\r\n  };\r\n  const onReset = () =>\r\n    reset(\r\n      {},\r\n      {\r\n        keepDirty: false,\r\n        keepErrors: false,\r\n        keepValues: false,\r\n      },\r\n    );\r\n  return (\r\n    <form onSubmit={handleSubmit(handleFormSubmit)}>\r\n      <div>\r\n        <h6 className='mt-6 mb-2 font-bold'>\r\n          {intl.formatMessage(messages.branchDetails)}\r\n        </h6>\r\n        <hr className='mb-6 border-b-1 border-blueGray-200' />\r\n        <Box>\r\n          <Box display='flex' justifyContent='space-between' flexWrap='wrap'>\r\n            <InputScaffold\r\n              width='48%'\r\n              label={messages.branchName}\r\n              inputName='branchName'\r\n              inputType='text'\r\n              register={register}\r\n              isRequired={true}\r\n              errors={errors}\r\n              requiredLabel={messages.branchNameRequired}\r\n            />\r\n            <InputScaffold\r\n              width='48%'\r\n              label={messages.branchCode}\r\n              inputName='branchCode'\r\n              inputType='text'\r\n              register={register}\r\n              isRequired={true}\r\n              errors={errors}\r\n              requiredLabel={messages.branchCodeRequired}\r\n            />\r\n          </Box>\r\n          <Box\r\n            display='flex'\r\n            justifyContent='space-between'\r\n            flexWrap='wrap'\r\n            width='100%'\r\n            mt={6}\r\n            mb={6}\r\n          >\r\n            <Box width={{ base: '100%', lg: '48%' }}>\r\n              <label className='block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1'>\r\n                {intl.formatMessage(messages.workingDays)}\r\n              </label>\r\n              <MultiSelect\r\n                name='workingDays'\r\n                placeholder={intl.formatMessage(messages.workingDays)}\r\n                value={workingdays}\r\n                onChange={(e) => {\r\n                  setworkingdays(e);\r\n                }}\r\n                isMulti\r\n                options={daysOption}\r\n              />\r\n            </Box>\r\n            <Box\r\n              display='flex'\r\n              justifyContent='space-between'\r\n              flexWrap='wrap'\r\n              width={{ base: '100%', lg: '48%' }}\r\n              mt={{ base: 6, lg: 0 }}\r\n            >\r\n              <InputScaffold\r\n                width='47%'\r\n                label={messages.startTime}\r\n                inputName='startTime'\r\n                inputType='time'\r\n                register={register}\r\n                isRequired={true}\r\n                errors={errors}\r\n                requiredLabel={messages.startTimeRequired}\r\n              />\r\n              <Center\r\n                width={{ base: 'auto', lg: '6%' }}\r\n                display={{ base: 'none', lg: 'flex' }}\r\n                textAlign='center'\r\n              >\r\n                <label>{intl.formatMessage(messages.operationalHourTo)}</label>\r\n              </Center>\r\n              <InputScaffold\r\n                width='47%'\r\n                label={messages.endTime}\r\n                inputName='endTime'\r\n                inputType='time'\r\n                register={register}\r\n                isRequired={true}\r\n                errors={errors}\r\n                requiredLabel={messages.endTimeRequired}\r\n              />\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n        <Box ml='auto'>\r\n          <FormactionButtons\r\n            isLoading={loading}\r\n            saveLabel={messages.saveButtonText}\r\n            onReset={onReset}\r\n            cancleLabel={messages.cancelButtonLabe}\r\n          />\r\n        </Box>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nBranchDetailsForm.propTypes = {\r\n  setActiveStep: PropTypes.func,\r\n  setCurrentBranch: PropTypes.func,\r\n  currentBranch: PropTypes.object,\r\n  getBranchDetails: PropTypes.func,\r\n};\r\n\r\nexport default BranchDetailsForm;\r\n"]},"metadata":{},"sourceType":"module"}