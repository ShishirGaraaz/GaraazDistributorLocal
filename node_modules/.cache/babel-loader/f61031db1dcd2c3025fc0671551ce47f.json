{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Work\\\\garaaz-distributor\\\\src\\\\components\\\\EmployeeList\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useMemo } from 'react';\nimport { Button, Box, Center, Image, MenuButton, Menu, MenuList, MenuItem, useDisclosure } from '@chakra-ui/react';\nimport toast from 'react-hot-toast';\nimport { useHistory } from 'react-router';\nimport nodataIllustrator from \"../../assets/img/NoData.svg\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport messages from './messages';\nimport serverErrorIllustrator from \"../../assets/img/serverError.svg\";\nimport Error from '../Error';\nimport { useIntl } from 'react-intl';\nimport './style.css';\nimport { optionsProp } from './constants';\nimport EmployeeTable from './EmployeeTable';\nimport AdditionOption from '../../utils/AdditionOptions';\nimport { Loading } from '../Loading';\nimport DynamicTable from '../DynamicTable';\nimport { FiMoreVertical } from 'react-icons/fi';\nimport EditEmployee from './EditEmployee';\nimport { selectGlobalState } from '../../globalSlice';\nimport { Link } from 'react-router-dom'; // import EmployeeAddition from '../EmployeeAddition/index';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EmployeeList = _ref => {\n  _s();\n\n  let {\n    employees,\n    getEmployeeList,\n    loading,\n    serverError,\n    handleExport\n  } = _ref;\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const auth = useSelector(state => state.auth); //const employees = useSelector((state) => state.employeeList.employees);\n\n  const [openBulk, setOpenBulk] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState({});\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const [reFetchEmployee, setRefetchEmployee] = useState(false);\n  const {\n    isDistributor\n  } = useSelector(selectGlobalState);\n  const columns = useMemo(() => [{\n    Header: 'S. No',\n    accessor: 'sno',\n    Cell: allData => {\n      var _allData$row;\n\n      return /*#__PURE__*/_jsxDEV(Box, {\n        children: (allData === null || allData === void 0 ? void 0 : (_allData$row = allData.row) === null || _allData$row === void 0 ? void 0 : _allData$row.index) + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 18\n      }, this);\n    }\n  }, {\n    Header: 'Employee Code',\n    accessor: 'employeeCode'\n  }, {\n    Header: 'Employee Name',\n    accessor: 'userProfile',\n    Cell: _ref2 => {\n      var _value$, _value$2;\n\n      let {\n        value\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(Box, {\n        children: `${(_value$ = value[0]) === null || _value$ === void 0 ? void 0 : _value$.firstName} ${(_value$2 = value[0]) === null || _value$2 === void 0 ? void 0 : _value$2.lastName}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    Header: 'Mobile Number',\n    accessor: row => {\n      var _row$userProfile$;\n\n      return row === null || row === void 0 ? void 0 : (_row$userProfile$ = row.userProfile[0]) === null || _row$userProfile$ === void 0 ? void 0 : _row$userProfile$.mobileNumber;\n    }\n  }, {\n    Header: 'Branch Code',\n    accessor: row => {\n      var _row$branch$;\n\n      return (_row$branch$ = row.branch[0]) === null || _row$branch$ === void 0 ? void 0 : _row$branch$.branchCode;\n    }\n  }, {\n    Header: 'Branch Name',\n    accessor: row => {\n      var _row$branch$2;\n\n      return (_row$branch$2 = row.branch[0]) === null || _row$branch$2 === void 0 ? void 0 : _row$branch$2.branchName;\n    }\n  }, {\n    Header: 'Actions',\n    accessor: row => row,\n    Cell: _ref3 => {\n      let {\n        value\n      } = _ref3;\n\n      const handleEdit = () => {\n        setSelectedEmployee(value);\n        onOpen();\n      };\n\n      return /*#__PURE__*/_jsxDEV(Menu, {\n        children: [/*#__PURE__*/_jsxDEV(MenuButton, {\n          p: 0,\n          as: Button,\n          children: /*#__PURE__*/_jsxDEV(Center, {\n            children: /*#__PURE__*/_jsxDEV(FiMoreVertical, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(MenuList, {\n          children: /*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: handleEdit,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this);\n    }\n  }], []);\n  const employeeCol = useMemo(() => [{\n    Header: 'S. No',\n    accessor: 'sno',\n    Cell: allData => {\n      var _allData$row2;\n\n      return /*#__PURE__*/_jsxDEV(Box, {\n        children: (allData === null || allData === void 0 ? void 0 : (_allData$row2 = allData.row) === null || _allData$row2 === void 0 ? void 0 : _allData$row2.index) + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 18\n      }, this);\n    }\n  }, {\n    Header: 'Employee Code',\n    accessor: 'employeeCode'\n  }, {\n    Header: 'Employee Name',\n    accessor: 'userProfile',\n    Cell: _ref4 => {\n      var _value$3, _value$4;\n\n      let {\n        value\n      } = _ref4;\n      return /*#__PURE__*/_jsxDEV(Box, {\n        children: `${(_value$3 = value[0]) === null || _value$3 === void 0 ? void 0 : _value$3.firstName} ${(_value$4 = value[0]) === null || _value$4 === void 0 ? void 0 : _value$4.lastName}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    Header: 'Mobile Number',\n    accessor: row => {\n      var _row$userProfile$2;\n\n      return row === null || row === void 0 ? void 0 : (_row$userProfile$2 = row.userProfile[0]) === null || _row$userProfile$2 === void 0 ? void 0 : _row$userProfile$2.mobileNumber;\n    }\n  }, {\n    Header: 'Branch Code',\n    accessor: row => {\n      var _row$branch$3;\n\n      return (_row$branch$3 = row.branch[0]) === null || _row$branch$3 === void 0 ? void 0 : _row$branch$3.branchCode;\n    }\n  }, {\n    Header: 'Branch Name',\n    accessor: row => {\n      var _row$branch$4;\n\n      return (_row$branch$4 = row.branch[0]) === null || _row$branch$4 === void 0 ? void 0 : _row$branch$4.branchName;\n    }\n  }], []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-0 p-1 pb-0 \",\n      children: [employees.length > 0 && isDistributor && /*#__PURE__*/_jsxDEV(Box, {\n        textAlign: \"right\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/employee/add\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"addition\",\n            size: \"md\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-user-plus mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this), intl.formatMessage(messages.addEmployee)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleExport,\n          variant: \"addition\",\n          size: \"md\",\n          ml: 4,\n          children: intl.formatMessage(messages.exportToExcel)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), !navigator.onLine ? /*#__PURE__*/_jsxDEV(Error, {\n        onRetry: getEmployeeList,\n        title: intl.formatMessage(messages.networkErrorTitle),\n        message: intl.formatMessage(messages.networkErrorMessage),\n        illustrator: serverErrorIllustrator\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this) : serverError ? /*#__PURE__*/_jsxDEV(Error, {\n        onRetry: getEmployeeList,\n        title: intl.formatMessage(messages.serverErrorTitle),\n        message: intl.formatMessage(messages.serverErrorMessage),\n        illustrator: serverErrorIllustrator\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this) : loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this) : employees.length > 0 ? /*#__PURE__*/_jsxDEV(Box, {\n        mt: 6,\n        children: /*#__PURE__*/_jsxDEV(DynamicTable, {\n          columns: isDistributor ? columns : employeeCol,\n          data: employees,\n          fetchData: () => console.log('...fetching'),\n          skipPageReset: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this) : isDistributor ? /*#__PURE__*/_jsxDEV(AdditionOption, { ...optionsProp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Center, {\n        h: \"80vh\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          textStyle: \"normalBold\",\n          children: \"No Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditEmployee, {\n      isOpen: isOpen,\n      employees: employees,\n      selectedEmployee: selectedEmployee,\n      onClose: onClose,\n      fetchEmployees: getEmployeeList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EmployeeList, \"SG51lPGObyF4EfbC6evvA9RAJvI=\", false, function () {\n  return [useIntl, useDispatch, useHistory, useSelector, useDisclosure, useSelector];\n});\n\n_c = EmployeeList;\nexport default EmployeeList;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeList\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/components/EmployeeList/index.js"],"names":["React","useEffect","useState","useMemo","Button","Box","Center","Image","MenuButton","Menu","MenuList","MenuItem","useDisclosure","toast","useHistory","useDispatch","useSelector","messages","Error","useIntl","optionsProp","EmployeeTable","AdditionOption","Loading","DynamicTable","FiMoreVertical","EditEmployee","selectGlobalState","Link","EmployeeList","employees","getEmployeeList","loading","serverError","handleExport","intl","dispatch","history","auth","state","openBulk","setOpenBulk","selectedEmployee","setSelectedEmployee","isOpen","onOpen","onClose","reFetchEmployee","setRefetchEmployee","isDistributor","columns","Header","accessor","Cell","allData","row","index","value","firstName","lastName","userProfile","mobileNumber","branch","branchCode","branchName","handleEdit","employeeCol","length","formatMessage","addEmployee","exportToExcel","navigator","onLine","networkErrorTitle","networkErrorMessage","serverErrorIllustrator","serverErrorTitle","serverErrorMessage","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useMemo } from 'react';\r\nimport {\r\n  Button,\r\n  Box,\r\n  Center,\r\n  Image,\r\n  MenuButton,\r\n  Menu,\r\n  MenuList,\r\n  MenuItem,\r\n  useDisclosure,\r\n} from '@chakra-ui/react';\r\nimport toast from 'react-hot-toast';\r\nimport { useHistory } from 'react-router';\r\nimport nodataIllustrator from '../../assets/img/NoData.svg';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport messages from './messages';\r\nimport serverErrorIllustrator from '../../assets/img/serverError.svg';\r\nimport Error from '../Error';\r\nimport { useIntl } from 'react-intl';\r\nimport './style.css';\r\nimport { optionsProp } from './constants';\r\nimport EmployeeTable from './EmployeeTable';\r\nimport AdditionOption from '../../utils/AdditionOptions';\r\nimport { Loading } from '../Loading';\r\nimport DynamicTable from '../DynamicTable';\r\nimport { FiMoreVertical } from 'react-icons/fi';\r\nimport EditEmployee from './EditEmployee';\r\nimport { selectGlobalState } from '../../globalSlice';\r\n\r\nimport { Link } from 'react-router-dom';\r\n// import EmployeeAddition from '../EmployeeAddition/index';\r\nconst EmployeeList = ({\r\n  employees,\r\n  getEmployeeList,\r\n  loading,\r\n  serverError,\r\n  handleExport,\r\n}) => {\r\n  const intl = useIntl();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const auth = useSelector((state) => state.auth);\r\n  //const employees = useSelector((state) => state.employeeList.employees);\r\n  const [openBulk, setOpenBulk] = useState(false);\r\n  const [selectedEmployee, setSelectedEmployee] = useState({});\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [reFetchEmployee, setRefetchEmployee] = useState(false);\r\n  const { isDistributor } = useSelector(selectGlobalState);\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: 'S. No',\r\n        accessor: 'sno',\r\n        Cell: (allData) => {\r\n          return <Box>{allData?.row?.index + 1}</Box>;\r\n        },\r\n      },\r\n      {\r\n        Header: 'Employee Code',\r\n        accessor: 'employeeCode',\r\n      },\r\n\r\n      {\r\n        Header: 'Employee Name',\r\n        accessor: 'userProfile',\r\n        Cell: ({ value }) => (\r\n          <Box>{`${value[0]?.firstName} ${value[0]?.lastName}`}</Box>\r\n        ),\r\n      },\r\n      {\r\n        Header: 'Mobile Number',\r\n        accessor: (row) => row?.userProfile[0]?.mobileNumber,\r\n      },\r\n      {\r\n        Header: 'Branch Code',\r\n        accessor: (row) => row.branch[0]?.branchCode,\r\n      },\r\n      {\r\n        Header: 'Branch Name',\r\n        accessor: (row) => row.branch[0]?.branchName,\r\n      },\r\n\r\n      {\r\n        Header: 'Actions',\r\n        accessor: (row) => row,\r\n        Cell: ({ value }) => {\r\n          const handleEdit = () => {\r\n            setSelectedEmployee(value);\r\n            onOpen();\r\n          };\r\n\r\n          return (\r\n            <Menu>\r\n              <MenuButton p={0} as={Button}>\r\n                <Center>\r\n                  <FiMoreVertical />\r\n                </Center>\r\n              </MenuButton>\r\n\r\n              <MenuList>\r\n                <MenuItem onClick={handleEdit}>Edit</MenuItem>\r\n              </MenuList>\r\n            </Menu>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n    [],\r\n  );\r\n\r\n  const employeeCol = useMemo(\r\n    () => [\r\n      {\r\n        Header: 'S. No',\r\n        accessor: 'sno',\r\n        Cell: (allData) => {\r\n          return <Box>{allData?.row?.index + 1}</Box>;\r\n        },\r\n      },\r\n      {\r\n        Header: 'Employee Code',\r\n        accessor: 'employeeCode',\r\n      },\r\n\r\n      {\r\n        Header: 'Employee Name',\r\n        accessor: 'userProfile',\r\n        Cell: ({ value }) => (\r\n          <Box>{`${value[0]?.firstName} ${value[0]?.lastName}`}</Box>\r\n        ),\r\n      },\r\n      {\r\n        Header: 'Mobile Number',\r\n        accessor: (row) => row?.userProfile[0]?.mobileNumber,\r\n      },\r\n      {\r\n        Header: 'Branch Code',\r\n        accessor: (row) => row.branch[0]?.branchCode,\r\n      },\r\n      {\r\n        Header: 'Branch Name',\r\n        accessor: (row) => row.branch[0]?.branchName,\r\n      },\r\n    ],\r\n    [],\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <div className='mb-0 p-1 pb-0 '>\r\n  \r\n        {employees.length > 0 && isDistributor && (\r\n          <Box textAlign='right'>\r\n            <Link to='/employee/add'>\r\n              <Button variant='addition' size='md'>\r\n                <i className='fas fa-user-plus mr-2'></i>\r\n                {intl.formatMessage(messages.addEmployee)}\r\n              </Button>\r\n            </Link>\r\n            <Button onClick={handleExport} variant='addition' size='md' ml={4}>\r\n            {intl.formatMessage(messages.exportToExcel)}\r\n          </Button>\r\n          </Box>\r\n        )}\r\n        {!navigator.onLine ? (\r\n          <Error\r\n            onRetry={getEmployeeList}\r\n            title={intl.formatMessage(messages.networkErrorTitle)}\r\n            message={intl.formatMessage(messages.networkErrorMessage)}\r\n            illustrator={serverErrorIllustrator}\r\n          />\r\n        ) : serverError ? (\r\n          <Error\r\n            onRetry={getEmployeeList}\r\n            title={intl.formatMessage(messages.serverErrorTitle)}\r\n            message={intl.formatMessage(messages.serverErrorMessage)}\r\n            illustrator={serverErrorIllustrator}\r\n          />\r\n        ) : loading ? (\r\n          <Loading />\r\n        ) : employees.length > 0 ? (\r\n          <Box mt={6}>\r\n            <DynamicTable\r\n              columns={isDistributor ? columns : employeeCol}\r\n              data={employees}\r\n              fetchData={() => console.log('...fetching')}\r\n              skipPageReset={true}\r\n            />\r\n          </Box>\r\n        ) : isDistributor ? (\r\n          <AdditionOption {...optionsProp} />\r\n        ) : (\r\n          <Center h='80vh'>\r\n            <Box textStyle='normalBold'>No Data</Box>\r\n          </Center>\r\n        )}\r\n      </div>\r\n      <EditEmployee\r\n        isOpen={isOpen}\r\n        employees={employees}\r\n        selectedEmployee={selectedEmployee}\r\n        onClose={onClose}\r\n        fetchEmployees={getEmployeeList}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeeList;\r\n"]},"metadata":{},"sourceType":"module"}