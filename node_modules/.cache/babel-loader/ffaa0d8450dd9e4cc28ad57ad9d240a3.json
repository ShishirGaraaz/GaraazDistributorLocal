{"ast":null,"code":"import { Factory } from '../Factory.js';\nimport { Line } from './Line.js';\nimport { getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nimport { Path } from './Path.js';\nexport class Arrow extends Line {\n  _sceneFunc(ctx) {\n    super._sceneFunc(ctx);\n\n    var PI2 = Math.PI * 2;\n    var points = this.points();\n    var tp = points;\n    var fromTension = this.tension() !== 0 && points.length > 4;\n\n    if (fromTension) {\n      tp = this.getTensionPoints();\n    }\n\n    var length = this.pointerLength();\n    var n = points.length;\n    var dx, dy;\n\n    if (fromTension) {\n      const lp = [tp[tp.length - 4], tp[tp.length - 3], tp[tp.length - 2], tp[tp.length - 1], points[n - 2], points[n - 1]];\n      const lastLength = Path.calcLength(tp[tp.length - 4], tp[tp.length - 3], 'C', lp);\n      const previous = Path.getPointOnQuadraticBezier(Math.min(1, 1 - length / lastLength), lp[0], lp[1], lp[2], lp[3], lp[4], lp[5]);\n      dx = points[n - 2] - previous.x;\n      dy = points[n - 1] - previous.y;\n    } else {\n      dx = points[n - 2] - points[n - 4];\n      dy = points[n - 1] - points[n - 3];\n    }\n\n    var radians = (Math.atan2(dy, dx) + PI2) % PI2;\n    var width = this.pointerWidth();\n\n    if (this.pointerAtEnding()) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.translate(points[n - 2], points[n - 1]);\n      ctx.rotate(radians);\n      ctx.moveTo(0, 0);\n      ctx.lineTo(-length, width / 2);\n      ctx.lineTo(-length, -width / 2);\n      ctx.closePath();\n      ctx.restore();\n\n      this.__fillStroke(ctx);\n    }\n\n    if (this.pointerAtBeginning()) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.translate(points[0], points[1]);\n\n      if (fromTension) {\n        dx = (tp[0] + tp[2]) / 2 - points[0];\n        dy = (tp[1] + tp[3]) / 2 - points[1];\n      } else {\n        dx = points[2] - points[0];\n        dy = points[3] - points[1];\n      }\n\n      ctx.rotate((Math.atan2(-dy, -dx) + PI2) % PI2);\n      ctx.moveTo(0, 0);\n      ctx.lineTo(-length, width / 2);\n      ctx.lineTo(-length, -width / 2);\n      ctx.closePath();\n      ctx.restore();\n\n      this.__fillStroke(ctx);\n    }\n  }\n\n  __fillStroke(ctx) {\n    var isDashEnabled = this.dashEnabled();\n\n    if (isDashEnabled) {\n      this.attrs.dashEnabled = false;\n      ctx.setLineDash([]);\n    }\n\n    ctx.fillStrokeShape(this);\n\n    if (isDashEnabled) {\n      this.attrs.dashEnabled = true;\n    }\n  }\n\n  getSelfRect() {\n    const lineRect = super.getSelfRect();\n    const offset = this.pointerWidth() / 2;\n    return {\n      x: lineRect.x - offset,\n      y: lineRect.y - offset,\n      width: lineRect.width + offset * 2,\n      height: lineRect.height + offset * 2\n    };\n  }\n\n}\nArrow.prototype.className = 'Arrow';\n\n_registerNode(Arrow);\n\nFactory.addGetterSetter(Arrow, 'pointerLength', 10, getNumberValidator());\nFactory.addGetterSetter(Arrow, 'pointerWidth', 10, getNumberValidator());\nFactory.addGetterSetter(Arrow, 'pointerAtBeginning', false);\nFactory.addGetterSetter(Arrow, 'pointerAtEnding', true);","map":{"version":3,"sources":["../../src/shapes/Arrow.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { Factory } from '../Factory.js';\nimport { Line } from './Line.js';\nimport { getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nimport { Path } from './Path.js';\nexport class Arrow extends Line {\n    _sceneFunc(ctx) {\n        super._sceneFunc(ctx);\n        var PI2 = Math.PI * 2;\n        var points = this.points();\n        var tp = points;\n        var fromTension = this.tension() !== 0 && points.length > 4;\n        if (fromTension) {\n            tp = this.getTensionPoints();\n        }\n        var length = this.pointerLength();\n        var n = points.length;\n        var dx, dy;\n        if (fromTension) {\n            const lp = [\n                tp[tp.length - 4],\n                tp[tp.length - 3],\n                tp[tp.length - 2],\n                tp[tp.length - 1],\n                points[n - 2],\n                points[n - 1],\n            ];\n            const lastLength = Path.calcLength(tp[tp.length - 4], tp[tp.length - 3], 'C', lp);\n            const previous = Path.getPointOnQuadraticBezier(Math.min(1, 1 - length / lastLength), lp[0], lp[1], lp[2], lp[3], lp[4], lp[5]);\n            dx = points[n - 2] - previous.x;\n            dy = points[n - 1] - previous.y;\n        }\n        else {\n            dx = points[n - 2] - points[n - 4];\n            dy = points[n - 1] - points[n - 3];\n        }\n        var radians = (Math.atan2(dy, dx) + PI2) % PI2;\n        var width = this.pointerWidth();\n        if (this.pointerAtEnding()) {\n            ctx.save();\n            ctx.beginPath();\n            ctx.translate(points[n - 2], points[n - 1]);\n            ctx.rotate(radians);\n            ctx.moveTo(0, 0);\n            ctx.lineTo(-length, width / 2);\n            ctx.lineTo(-length, -width / 2);\n            ctx.closePath();\n            ctx.restore();\n            this.__fillStroke(ctx);\n        }\n        if (this.pointerAtBeginning()) {\n            ctx.save();\n            ctx.beginPath();\n            ctx.translate(points[0], points[1]);\n            if (fromTension) {\n                dx = (tp[0] + tp[2]) / 2 - points[0];\n                dy = (tp[1] + tp[3]) / 2 - points[1];\n            }\n            else {\n                dx = points[2] - points[0];\n                dy = points[3] - points[1];\n            }\n            ctx.rotate((Math.atan2(-dy, -dx) + PI2) % PI2);\n            ctx.moveTo(0, 0);\n            ctx.lineTo(-length, width / 2);\n            ctx.lineTo(-length, -width / 2);\n            ctx.closePath();\n            ctx.restore();\n            this.__fillStroke(ctx);\n        }\n    }\n    __fillStroke(ctx) {\n        var isDashEnabled = this.dashEnabled();\n        if (isDashEnabled) {\n            this.attrs.dashEnabled = false;\n            ctx.setLineDash([]);\n        }\n        ctx.fillStrokeShape(this);\n        if (isDashEnabled) {\n            this.attrs.dashEnabled = true;\n        }\n    }\n    getSelfRect() {\n        const lineRect = super.getSelfRect();\n        const offset = this.pointerWidth() / 2;\n        return {\n            x: lineRect.x - offset,\n            y: lineRect.y - offset,\n            width: lineRect.width + offset * 2,\n            height: lineRect.height + offset * 2,\n        };\n    }\n}\nArrow.prototype.className = 'Arrow';\n_registerNode(Arrow);\nFactory.addGetterSetter(Arrow, 'pointerLength', 10, getNumberValidator());\nFactory.addGetterSetter(Arrow, 'pointerWidth', 10, getNumberValidator());\nFactory.addGetterSetter(Arrow, 'pointerAtBeginning', false);\nFactory.addGetterSetter(Arrow, 'pointerAtEnding', true);\n//# sourceMappingURL=Arrow.js.map"]},"metadata":{},"sourceType":"module"}