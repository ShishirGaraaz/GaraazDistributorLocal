{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Work\\\\garaaz-distributor\\\\src\\\\components\\\\EmployeeAddition\\\\AdditionForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport toast from 'react-hot-toast';\nimport { Select } from '@chakra-ui/react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Select as SearchSelect } from 'chakra-react-select';\nimport { publicAxios as axios } from '../../axios';\nimport CustomInput from '../../utils/Input';\nimport { useIntl } from 'react-intl';\nimport messages from './messages';\nimport FormactionButtons from '../../utils/FormactionButtons';\nimport { useHistory } from 'react-router';\nimport { CustomSelect } from '../../utils/Select';\nimport { Box, Center } from '@chakra-ui/react';\nimport InputScaffold from '../../utils/InputScaffold';\nimport { UseOnboardContext } from '../../App';\nimport { selectGlobalState } from '../../globalSlice';\nimport { getEmployeeDesignations } from '../EmployeeList/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdditionForm = () => {\n  _s();\n\n  const hist = useHistory();\n  const [selectedBranch, setSelectedBranch] = useState({});\n  const auth = useSelector(state => state.auth);\n  const [loading, setLoading] = useState(false);\n  const {\n    branches\n  } = useSelector(selectGlobalState);\n  const {\n    updateOnboard\n  } = UseOnboardContext();\n  const [designation, setDesignation] = useState([]);\n  const {\n    register,\n    formState: {\n      errors\n    },\n    handleSubmit,\n    reset,\n    setValue\n  } = useForm({\n    mode: 'onSubmit'\n  });\n  useEffect(() => {\n    setValue('branch', selectedBranch.value);\n\n    (async () => {\n      const designations = await getEmployeeDesignations(auth);\n      setDesignation(Object.values(designations.data));\n    })();\n  }, [selectedBranch]);\n\n  const handleFormSubmit = async Data => {\n    setLoading(true);\n    Data.branchId = selectedBranch.value;\n\n    try {\n      Data.mobileNumber = `91${Data.mobileNumber}`;\n      const {\n        data: employees\n      } = await axios.post(`/employees`, {\n        employees: [Data]\n      }, {\n        headers: {\n          Authorization: auth.authToken\n        }\n      });\n      toast(intl.formatMessage(messages.employeeSuccessUpload));\n\n      if (localStorage.onboard) {\n        hist.push('/workshops');\n        localStorage.onboard = 4;\n        updateOnboard(4);\n      } else {\n        hist.push('/employees');\n      }\n\n      setLoading(false);\n    } catch (err) {\n      setLoading(false);\n\n      if (err.response) {\n        toast(err.response.data.errorMsg);\n      } else {\n        toast(intl.formatMessage(messages.somethingWentWrong));\n      }\n    }\n  };\n\n  const intl = useIntl();\n\n  const onReset = () => {\n    reset({}, {\n      keepDirty: false,\n      keepErrors: false,\n      keepValues: false\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(handleFormSubmit),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        flexWrap: \"wrap\",\n        children: [/*#__PURE__*/_jsxDEV(InputScaffold, {\n          width: \"48%\",\n          label: messages.firstName,\n          inputName: \"firstName\",\n          inputType: \"text\",\n          isRequired: true,\n          errors: errors,\n          requiredLabel: messages.firstNameRequired,\n          register: register\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputScaffold, {\n          width: \"48%\",\n          label: messages.lastName,\n          inputName: \"lastName\",\n          inputType: \"text\",\n          isRequired: true,\n          errors: errors,\n          requiredLabel: messages.lastNameRequired,\n          register: register\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        flexWrap: \"wrap\",\n        my: {\n          base: 0,\n          lg: 6\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputScaffold, {\n          width: \"48%\",\n          label: messages.mobileNumber,\n          inputName: \"mobileNumber\",\n          inputType: \"number\",\n          isRequired: true,\n          errors: errors,\n          requiredLabel: messages.mobileNumberRequired,\n          register: register,\n          errMsg: messages.invalidMobileNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputScaffold, {\n          width: \"48%\",\n          label: messages.reportsTo,\n          inputName: \"reportsTo\",\n          inputType: \"text\",\n          isRequired: false,\n          errors: errors,\n          requiredLabel: messages.reportsToRequired,\n          register: register,\n          errMsg: messages.reportsToRequired\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        flexWrap: \"wrap\",\n        children: [/*#__PURE__*/_jsxDEV(InputScaffold, {\n          width: \"48%\",\n          label: messages.employeeId,\n          inputName: \"employeId\",\n          inputType: \"text\",\n          isRequired: false,\n          errors: errors,\n          requiredLabel: messages.employeeIdRequired,\n          register: register\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          width: {\n            base: '100%',\n            lg: '48%'\n          },\n          mt: {\n            base: 6,\n            lg: 0\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1\",\n            children: intl.formatMessage(messages.designation)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            style: {},\n            ...register('designation'),\n            defaultValue: \"\",\n            placeholder: \"Select Designation\",\n            children: designation.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n              children: item\n            }, item, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        flexWrap: \"wrap\",\n        mt: {\n          base: 0,\n          lg: 6\n        },\n        mb: 6,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          width: {\n            base: '100%',\n            lg: '48%'\n          },\n          mt: {\n            base: 6,\n            lg: 0\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1\",\n            children: intl.formatMessage(messages.branch)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SearchSelect, {\n            style: {\n              width: 320,\n              placeholder: 'Select branch'\n            },\n            ...register('branch', {\n              required: 'true'\n            }),\n            value: selectedBranch,\n            onChange: e => {\n              setSelectedBranch(e);\n            },\n            options: branches.map(branch => {\n              return {\n                value: branch._id,\n                label: `${branch.branchCode}`\n              };\n            }),\n            placeholder: \"Select Branch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), errors && errors.branch && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-youtube-regular text-sm\",\n            children: intl.formatMessage(messages.branchNameRequired)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormactionButtons, {\n        isLoading: loading,\n        saveLabel: messages.saveButtonLabel,\n        onReset: onReset,\n        cancleLabel: messages.cancelButtonLabe\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AdditionForm, \"eIveJ2Z90BQG7NG/djt30rXyFZA=\", false, function () {\n  return [useHistory, useSelector, useSelector, useForm, useIntl];\n});\n\n_c = AdditionForm;\nAdditionForm.propTypes = {\n  setActiveStep: PropTypes.func,\n  setCurrentBranch: PropTypes.func\n};\nexport default AdditionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdditionForm\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/components/EmployeeAddition/AdditionForm.js"],"names":["React","useEffect","useState","PropTypes","useForm","toast","Select","useSelector","useDispatch","SearchSelect","publicAxios","axios","CustomInput","useIntl","messages","FormactionButtons","useHistory","CustomSelect","Box","Center","InputScaffold","UseOnboardContext","selectGlobalState","getEmployeeDesignations","AdditionForm","hist","selectedBranch","setSelectedBranch","auth","state","loading","setLoading","branches","updateOnboard","designation","setDesignation","register","formState","errors","handleSubmit","reset","setValue","mode","value","designations","Object","values","data","handleFormSubmit","Data","branchId","mobileNumber","employees","post","headers","Authorization","authToken","intl","formatMessage","employeeSuccessUpload","localStorage","onboard","push","err","response","errorMsg","somethingWentWrong","onReset","keepDirty","keepErrors","keepValues","firstName","firstNameRequired","lastName","lastNameRequired","base","lg","mobileNumberRequired","invalidMobileNumber","reportsTo","reportsToRequired","employeeId","employeeIdRequired","map","item","branch","width","placeholder","required","e","_id","label","branchCode","branchNameRequired","saveButtonLabel","cancelButtonLabe","propTypes","setActiveStep","func","setCurrentBranch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\nimport toast from 'react-hot-toast';\r\nimport { Select } from '@chakra-ui/react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Select as SearchSelect } from 'chakra-react-select';\r\nimport { publicAxios as axios } from '../../axios';\r\nimport CustomInput from '../../utils/Input';\r\nimport { useIntl } from 'react-intl';\r\nimport messages from './messages';\r\nimport FormactionButtons from '../../utils/FormactionButtons';\r\nimport { useHistory } from 'react-router';\r\nimport { CustomSelect } from '../../utils/Select';\r\nimport { Box, Center } from '@chakra-ui/react';\r\nimport InputScaffold from '../../utils/InputScaffold';\r\nimport { UseOnboardContext } from '../../App';\r\nimport { selectGlobalState } from '../../globalSlice';\r\nimport { getEmployeeDesignations } from '../EmployeeList/actions';\r\n\r\n\r\n\r\nconst AdditionForm = () => {\r\n  const hist = useHistory();\r\n  const [selectedBranch, setSelectedBranch] = useState({});\r\n  const auth = useSelector((state) => state.auth);\r\n  const [loading, setLoading] = useState(false);\r\n  const { branches } = useSelector(selectGlobalState);\r\n  const { updateOnboard } = UseOnboardContext();\r\n  const [designation, setDesignation] = useState([]);\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    handleSubmit,\r\n    reset,\r\n    setValue,\r\n  } = useForm({\r\n    mode: 'onSubmit',\r\n  });\r\n\r\n  useEffect(() => {\r\n    setValue('branch', selectedBranch.value);\r\n    (async () => {\r\n      const designations = await getEmployeeDesignations(auth);\r\n      setDesignation(Object.values(designations.data));\r\n    })()\r\n\r\n  }, [selectedBranch]);\r\n\r\n  const handleFormSubmit = async (Data) => {\r\n    setLoading(true);\r\n    Data.branchId = selectedBranch.value;\r\n    try {\r\n      Data.mobileNumber = `91${Data.mobileNumber}`;\r\n\r\n       const { data: employees } = await axios.post(\r\n        `/employees`,\r\n        {\r\n          employees: [Data],\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: auth.authToken,\r\n          },\r\n        },\r\n      );\r\n      toast(intl.formatMessage(messages.employeeSuccessUpload));\r\n      if(localStorage.onboard){\r\n        hist.push('/workshops');\r\n      localStorage.onboard = 4;\r\n      updateOnboard(4);\r\n      }else{\r\n        hist.push('/employees');\r\n      }\r\n      \r\n      setLoading(false);\r\n    } catch (err) {\r\n      setLoading(false);\r\n      if(err.response){\r\n        toast(err.response.data.errorMsg);\r\n      }else{\r\n        toast(\r\n          intl.formatMessage(\r\n            messages.somethingWentWrong,\r\n          ),\r\n        );\r\n      }\r\n      \r\n       \r\n    }\r\n  };\r\n  const intl = useIntl();\r\n  const onReset = () => {\r\n    reset(\r\n      {},\r\n      {\r\n        keepDirty: false,\r\n        keepErrors: false,\r\n        keepValues: false,\r\n      },\r\n    );\r\n  };\r\n \r\n  return (\r\n    <form onSubmit={handleSubmit(handleFormSubmit)}>\r\n      <div>\r\n        <Box display='flex' justifyContent='space-between' flexWrap='wrap'>\r\n          <InputScaffold\r\n            width='48%'\r\n            label={messages.firstName}\r\n            inputName='firstName'\r\n            inputType='text'\r\n            isRequired={true}\r\n            errors={errors}\r\n            requiredLabel={messages.firstNameRequired}\r\n            register={register}\r\n          />\r\n          <InputScaffold\r\n            width='48%'\r\n            label={messages.lastName}\r\n            inputName='lastName'\r\n            inputType='text'\r\n            isRequired={true}\r\n            errors={errors}\r\n            requiredLabel={messages.lastNameRequired}\r\n            register={register}\r\n          />\r\n        </Box>\r\n        <Box\r\n          display='flex'\r\n          justifyContent='space-between'\r\n          flexWrap='wrap'\r\n          my={{ base: 0, lg: 6 }}\r\n        >\r\n          <InputScaffold\r\n            width='48%'\r\n            label={messages.mobileNumber}\r\n            inputName='mobileNumber'\r\n            inputType='number'\r\n            isRequired={true}\r\n            errors={errors}\r\n            requiredLabel={messages.mobileNumberRequired}\r\n            register={register}\r\n            errMsg={messages.invalidMobileNumber}\r\n          />\r\n          {/* <Box width={{ base: '100%', lg: '48%' }} mt={{base: 6, lg: 0}}>\r\n            <label className='block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1'>\r\n              {intl.formatMessage(messages.reportsTo)}\r\n            </label>\r\n            <Select\r\n              style={{}}\r\n              {...register('reportsTo')}\r\n              defaultValue=''\r\n              placeholder='Select Reports To'\r\n            >\r\n              <option>Sidharth</option>\r\n              <option>Karan</option>\r\n              <option>Pankaj</option>\r\n            </Select>\r\n          </Box> */}\r\n\r\n          <InputScaffold\r\n            width='48%'\r\n            label={messages.reportsTo}\r\n            inputName='reportsTo'\r\n            inputType='text'\r\n            isRequired={false}\r\n            errors={errors}\r\n            requiredLabel={messages.reportsToRequired}\r\n            register={register}\r\n            errMsg={messages.reportsToRequired}\r\n          />\r\n        </Box>\r\n        <Box display='flex' justifyContent='space-between' flexWrap='wrap'>\r\n          {/*  <Box width={{ base: '100%', lg: '48%' }} mt={{base: 6, lg: 0}}>\r\n            <label className='block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1'>\r\n              {intl.formatMessage(messages.deputation)}\r\n            </label>\r\n            <Select\r\n              style={{}}\r\n              {...register('deputation')}\r\n              defaultValue=''\r\n              placeholder='Select Deputation'\r\n            >\r\n              <option>SDE I</option>\r\n              <option>SDE II</option>\r\n              <option>SDE III</option>\r\n            </Select>\r\n          </Box> */}\r\n          <InputScaffold\r\n            width='48%'\r\n            label={messages.employeeId}\r\n            inputName='employeId'\r\n            inputType='text'\r\n            isRequired={false}\r\n            errors={errors}\r\n            requiredLabel={messages.employeeIdRequired}\r\n            register={register}\r\n          />\r\n          <Box width={{ base: '100%', lg: '48%' }} mt={{ base: 6, lg: 0 }}>\r\n            <label className='block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1'>\r\n              {intl.formatMessage(messages.designation)}\r\n            </label>\r\n            <Select\r\n              style={{}}\r\n              {...register('designation')}\r\n              defaultValue=''\r\n              placeholder='Select Designation'\r\n            >\r\n              {designation.map((item) => (\r\n                <option key={item}>{item}</option>\r\n              ))}\r\n            </Select>\r\n          </Box>\r\n        </Box>\r\n        <Box\r\n          display='flex'\r\n          justifyContent='space-between'\r\n          flexWrap='wrap'\r\n          mt={{ base: 0, lg: 6 }}\r\n          mb={6}\r\n        >\r\n          <Box width={{ base: '100%', lg: '48%' }} mt={{ base: 6, lg: 0 }}>\r\n            <label className='block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1'>\r\n              {intl.formatMessage(messages.branch)}\r\n            </label>\r\n            <SearchSelect\r\n              style={{\r\n                width: 320,\r\n                placeholder: 'Select branch',\r\n              }}\r\n              {...register('branch', { required: 'true' })}\r\n              value={selectedBranch}\r\n              onChange={(e) => {\r\n                setSelectedBranch(e);\r\n              }}\r\n              options={branches.map((branch) => {\r\n                return {\r\n                  value: branch._id,\r\n                  label: `${branch.branchCode}`,\r\n                };\r\n              })}\r\n              placeholder='Select Branch'\r\n            />\r\n            {errors && errors.branch && (\r\n              <span className='text-youtube-regular text-sm'>\r\n                {intl.formatMessage(messages.branchNameRequired)}\r\n              </span>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n\r\n        <FormactionButtons\r\n          isLoading={loading}\r\n          saveLabel={messages.saveButtonLabel}\r\n          onReset={onReset}\r\n          cancleLabel={messages.cancelButtonLabe}\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nAdditionForm.propTypes = {\r\n  setActiveStep: PropTypes.func,\r\n  setCurrentBranch: PropTypes.func,\r\n};\r\n\r\nexport default AdditionForm;\r\n"]},"metadata":{},"sourceType":"module"}