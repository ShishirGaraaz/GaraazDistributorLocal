{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Work\\\\garaaz-distributor\\\\src\\\\components\\\\TableTop\\\\ModifiedTableTop.js\",\n    _s = $RefreshSig$(),\n    _this = this;\n\nimport React from 'react';\nimport { InputGroup, Input, InputRightElement, Box, useColorMode } from '@chakra-ui/react';\nimport { Select as MultiSelect } from 'chakra-react-select';\nimport { FiSearch } from 'react-icons/fi';\nimport { useIntl } from 'react-intl';\nimport messages from './messages';\nimport enums from '../../utils/enums';\nimport moment from 'moment';\n/* This is ths structure of the input data */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst inputData = [{\n  title: 'Filter by order no',\n  type: 'text',\n  placeholder: 'Enter order No',\n  name: 'orderNo'\n}, {\n  title: 'Filter by Status',\n  type: 'select',\n  placeholder: 'Enter order No',\n  name: 'status',\n  options: [{\n    value: enums.PENDING,\n    label: 'Pending'\n  }, {\n    value: enums.COMPLETED,\n    label: 'Completed'\n  }, {\n    value: enums.UPDATED,\n    label: 'Updated'\n  }]\n}];\n/* \r\n\r\n const [inputValues, setInputValue] = useState({})\r\n\r\nconst handleTableTopChange = (e, name) => {\r\n  const value = e.hasOwnProperty('target')? e.target.value : e\r\n  setInputValue(prevState => ({...prevState, [name]:value }))\r\n}\r\n\r\n<ModifiedTableTop inputData={inputData} onChange={handleTableTopChange}/>\r\n */\n\nconst ModifiedTableTop = props => {\n  _s();\n\n  const intl = useIntl();\n  const {\n    colorMode\n  } = useColorMode();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    borderTopRightRadius: \"10px\",\n    borderTopLeftRadius: \"10px\",\n    backgroundColor: colorMode === 'dark' ? 'black' : 'white',\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    marginTop: \"-55px\",\n    p: 4,\n    children: [...props.inputData].map(item => generateInput(item, props.onChange))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}; // export const ModefiedTableTop2 = (props) => {\n//   const intl = useIntl();\n//   const { colorMode } = useColorMode();\n//   return (\n//     <Box\n//       borderTopRightRadius='10px'\n//       borderTopLeftRadius='10px'\n//       backgroundColor={colorMode === 'dark' ? 'black' : 'white'}\n//       display='flex'\n//       flexWrap='wrap'\n//       marginTop = \"-100px\"\n//       p={4}\n//     >\n//       {[...props.inputData].map((item) => generateInput(item, props.onChange))}\n//     </Box>\n//   );\n// };\n\n\n_s(ModifiedTableTop, \"l7KdAp9TTd8q4M+BQ58Ors6eY2U=\", false, function () {\n  return [useIntl, useColorMode];\n});\n\n_c = ModifiedTableTop;\n\nconst InputBox = _ref => {\n  let {\n    islarge,\n    children,\n    fullWidth\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    width: {\n      base: '100%',\n      lg: islarge ? '40%' : fullWidth ? '100%' : '15rem'\n    },\n    mr: [0, null, 8],\n    mb: 15,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = InputBox;\nexport const generateInput = function (inputObj, onChange) {\n  let others = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  switch (inputObj.type) {\n    case 'select':\n      return /*#__PURE__*/_jsxDEV(InputBox, {\n        fullWidth: inputObj === null || inputObj === void 0 ? void 0 : inputObj.fullWidth,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          textStyle: \"label\",\n          layerStyle: \"muted\",\n          mb: 1,\n          children: inputObj === null || inputObj === void 0 ? void 0 : inputObj.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(MultiSelect, {\n          isDisabled: inputObj.isDisabled,\n          name: inputObj.name,\n          placeholder: inputObj === null || inputObj === void 0 ? void 0 : inputObj.placeholder //defaultValue={inputObj.defaultValue}\n          ,\n          onChange: e => onChange(e, inputObj.name),\n          isMulti: false,\n          options: inputObj.options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, _this)]\n      }, inputObj.title, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, _this);\n\n    case 'text':\n    case 'email':\n      return /*#__PURE__*/_jsxDEV(InputBox, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          textStyle: \"label\",\n          layerStyle: \"muted\",\n          mb: 1,\n          children: inputObj === null || inputObj === void 0 ? void 0 : inputObj.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(InputGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            type: inputObj.type,\n            name: inputObj.name,\n            placeholder: inputObj === null || inputObj === void 0 ? void 0 : inputObj.placeholder,\n            onChange: e => onChange(e, inputObj.name)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(InputRightElement, {\n            pointerEvents: \"none\",\n            children: /*#__PURE__*/_jsxDEV(FiSearch, {\n              color: \"gray.300\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 25\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, _this)]\n      }, inputObj.title, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, _this);\n\n    case 'date':\n      return /*#__PURE__*/_jsxDEV(InputBox, {\n        islarge: true,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          width: \"100%\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-between\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            width: {\n              base: '100%',\n              md: '48%'\n            },\n            mb: {\n              base: 15,\n              md: 0\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              textStyle: \"label\",\n              layerStyle: \"muted\",\n              mb: 1,\n              children: \"Start Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              name: enums.STARTDATE,\n              type: \"date\",\n              onChange: e => onChange(e, inputObj.name[0]),\n              placeholder: \"Start Date\",\n              defaultValue: inputObj.defaultValue ? inputObj === null || inputObj === void 0 ? void 0 : inputObj.defaultValue[0] : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Box, {\n            width: {\n              base: '100%',\n              md: '48%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              textStyle: \"label\",\n              layerStyle: \"muted\",\n              mb: 1,\n              children: \"End Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"End Date\",\n              name: enums.ENDDATE,\n              type: \"date\",\n              onChange: e => onChange(e, inputObj.name[1]),\n              defaultValue: inputObj.defaultValue ? inputObj === null || inputObj === void 0 ? void 0 : inputObj.defaultValue[1] : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, _this)\n      }, inputObj.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, _this);\n\n    default:\n      return;\n  }\n};\nexport const SingleSelect = _ref2 => {\n  let {\n    inputObj,\n    onChange\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    width: {\n      base: '100%',\n      lg: (inputObj === null || inputObj === void 0 ? void 0 : inputObj.islarge) ? '40%' : (inputObj === null || inputObj === void 0 ? void 0 : inputObj.fullWidth) ? '100%' : '15rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      textStyle: \"label\",\n      layerStyle: \"muted\",\n      mb: 1,\n      children: inputObj === null || inputObj === void 0 ? void 0 : inputObj.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MultiSelect, {\n      isDisabled: inputObj.isDisabled,\n      name: inputObj.name,\n      placeholder: inputObj === null || inputObj === void 0 ? void 0 : inputObj.placeholder,\n      onChange: e => onChange(e, inputObj.name),\n      isMulti: false,\n      options: inputObj.options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 7\n  }, this);\n};\n_c3 = SingleSelect;\nexport const SingleInput = _ref3 => {\n  let {\n    inputObj,\n    onChange\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(InputBox, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      textStyle: \"label\",\n      layerStyle: \"muted\",\n      mb: 1,\n      children: inputObj === null || inputObj === void 0 ? void 0 : inputObj.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: inputObj.type,\n        name: inputObj.name,\n        placeholder: inputObj === null || inputObj === void 0 ? void 0 : inputObj.placeholder,\n        onChange: e => onChange(e, inputObj.name)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(InputRightElement, {\n        pointerEvents: \"none\",\n        children: /*#__PURE__*/_jsxDEV(FiSearch, {\n          color: \"gray.300\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 5\n    }, this)]\n  }, inputObj.title, true, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 5\n  }, this);\n};\n_c4 = SingleInput;\nexport default ModifiedTableTop;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ModifiedTableTop\");\n$RefreshReg$(_c2, \"InputBox\");\n$RefreshReg$(_c3, \"SingleSelect\");\n$RefreshReg$(_c4, \"SingleInput\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/components/TableTop/ModifiedTableTop.js"],"names":["React","InputGroup","Input","InputRightElement","Box","useColorMode","Select","MultiSelect","FiSearch","useIntl","messages","enums","moment","inputData","title","type","placeholder","name","options","value","PENDING","label","COMPLETED","UPDATED","ModifiedTableTop","props","intl","colorMode","map","item","generateInput","onChange","InputBox","islarge","children","fullWidth","base","lg","inputObj","others","isDisabled","e","md","STARTDATE","defaultValue","ENDDATE","SingleSelect","SingleInput"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  InputGroup,\r\n  Input,\r\n  InputRightElement,\r\n  Box,\r\n  useColorMode,\r\n} from '@chakra-ui/react';\r\nimport { Select as MultiSelect } from 'chakra-react-select';\r\nimport { FiSearch } from 'react-icons/fi';\r\nimport { useIntl } from 'react-intl';\r\nimport messages from './messages';\r\nimport enums from '../../utils/enums';\r\nimport moment from 'moment';\r\n\r\n/* This is ths structure of the input data */\r\nconst inputData = [\r\n  {\r\n    title: 'Filter by order no',\r\n    type: 'text',\r\n    placeholder: 'Enter order No',\r\n    name: 'orderNo',\r\n  },\r\n  {\r\n    title: 'Filter by Status',\r\n    type: 'select',\r\n    placeholder: 'Enter order No',\r\n    name: 'status',\r\n    options: [\r\n      {\r\n        value: enums.PENDING,\r\n        label: 'Pending',\r\n      },\r\n      {\r\n        value: enums.COMPLETED,\r\n        label: 'Completed',\r\n      },\r\n      {\r\n        value: enums.UPDATED,\r\n        label: 'Updated',\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n/* \r\n\r\n const [inputValues, setInputValue] = useState({})\r\n\r\nconst handleTableTopChange = (e, name) => {\r\n  const value = e.hasOwnProperty('target')? e.target.value : e\r\n  setInputValue(prevState => ({...prevState, [name]:value }))\r\n}\r\n\r\n<ModifiedTableTop inputData={inputData} onChange={handleTableTopChange}/>\r\n */\r\n\r\nconst ModifiedTableTop = (props) => {\r\n  const intl = useIntl();\r\n  const { colorMode } = useColorMode();\r\n\r\n  return (\r\n    <Box\r\n      borderTopRightRadius='10px'\r\n      borderTopLeftRadius='10px'\r\n      backgroundColor={colorMode === 'dark' ? 'black' : 'white'}\r\n      display='flex'\r\n      flexWrap='wrap'\r\n      marginTop = \"-55px\"\r\n      p={4}\r\n    >\r\n      {[...props.inputData].map((item) => generateInput(item, props.onChange))}\r\n    </Box>\r\n  );\r\n};\r\n// export const ModefiedTableTop2 = (props) => {\r\n//   const intl = useIntl();\r\n//   const { colorMode } = useColorMode();\r\n\r\n//   return (\r\n//     <Box\r\n//       borderTopRightRadius='10px'\r\n//       borderTopLeftRadius='10px'\r\n//       backgroundColor={colorMode === 'dark' ? 'black' : 'white'}\r\n//       display='flex'\r\n//       flexWrap='wrap'\r\n//       marginTop = \"-100px\"\r\n//       p={4}\r\n//     >\r\n//       {[...props.inputData].map((item) => generateInput(item, props.onChange))}\r\n//     </Box>\r\n//   );\r\n// };\r\n\r\n\r\nconst InputBox = ({ islarge, children, fullWidth }) => {\r\n  return (\r\n    <Box\r\n      width={{\r\n        base: '100%',\r\n        lg: islarge ? '40%' : fullWidth ? '100%' : '15rem',\r\n      }}\r\n      mr={[0, null, 8]}\r\n      mb={15}\r\n    >\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const generateInput = (inputObj, onChange, others = {}) => {\r\n  switch (inputObj.type) {\r\n    case 'select':\r\n      return (\r\n        <InputBox key={inputObj.title} fullWidth={inputObj?.fullWidth}>\r\n          <Box textStyle='label' layerStyle='muted' mb={1}>\r\n            {inputObj?.title}\r\n          </Box>\r\n          <MultiSelect\r\n            isDisabled={inputObj.isDisabled}\r\n            name={inputObj.name}\r\n            placeholder={inputObj?.placeholder}\r\n            //defaultValue={inputObj.defaultValue}\r\n            onChange={(e) => onChange(e, inputObj.name)}\r\n            isMulti={false}\r\n            options={inputObj.options}\r\n          />\r\n        </InputBox>\r\n      );\r\n\r\n    case 'text':\r\n    case 'email':\r\n      return (\r\n        <InputBox key={inputObj.title}>\r\n          <Box textStyle='label' layerStyle='muted' mb={1}>\r\n            {inputObj?.title}\r\n          </Box>\r\n          <InputGroup>\r\n            <Input\r\n              type={inputObj.type}\r\n              name={inputObj.name}\r\n              placeholder={inputObj?.placeholder}\r\n              onChange={(e) => onChange(e, inputObj.name)}\r\n            />\r\n            <InputRightElement\r\n              pointerEvents='none'\r\n              children={<FiSearch color='gray.300' />}\r\n            />\r\n          </InputGroup>\r\n        </InputBox>\r\n      );\r\n    case 'date':\r\n      return (\r\n        <InputBox islarge key={inputObj.name}>\r\n          <Box\r\n            display='flex'\r\n            width='100%'\r\n            flexWrap='wrap'\r\n            justifyContent='space-between'\r\n          >\r\n            <Box width={{ base: '100%', md: '48%' }} mb={{ base: 15, md: 0 }}>\r\n              <Box textStyle='label' layerStyle='muted' mb={1}>\r\n                Start Date\r\n              </Box>\r\n              <Input\r\n                name={enums.STARTDATE}\r\n                type='date'\r\n                onChange={(e) => onChange(e, inputObj.name[0])}\r\n                placeholder='Start Date'\r\n                defaultValue={\r\n                  inputObj.defaultValue ? inputObj?.defaultValue[0] : ''\r\n                }\r\n              />\r\n            </Box>\r\n\r\n            <Box width={{ base: '100%', md: '48%' }}>\r\n              <Box textStyle='label' layerStyle='muted' mb={1}>\r\n                End Date\r\n              </Box>\r\n              <Input\r\n              \r\n                placeholder='End Date'\r\n                name={enums.ENDDATE}\r\n                type='date'\r\n                onChange={(e) => onChange(e, inputObj.name[1])}\r\n                defaultValue={\r\n                  inputObj.defaultValue ? inputObj?.defaultValue[1] : ''\r\n                }\r\n              />\r\n            </Box>\r\n          </Box>\r\n        </InputBox>\r\n      );\r\n\r\n    default:\r\n      return;\r\n  }\r\n};\r\n\r\nexport const SingleSelect = ({ inputObj, onChange }) => {\r\n  return (\r\n      <Box width={{\r\n        base: '100%',\r\n        lg: inputObj?.islarge ? '40%' : inputObj?.fullWidth ? '100%' : '15rem',\r\n      }}>\r\n      <Box textStyle='label' layerStyle='muted' mb={1}>\r\n        {inputObj?.title}\r\n      </Box>\r\n      <MultiSelect\r\n        isDisabled={inputObj.isDisabled}\r\n        name={inputObj.name}\r\n        placeholder={inputObj?.placeholder}\r\n        onChange={(e) => onChange(e, inputObj.name)}\r\n        isMulti={false}\r\n        options={inputObj.options}\r\n      />\r\n      </Box>\r\n  );\r\n};\r\n\r\n\r\nexport const SingleInput = ({ inputObj, onChange }) => {\r\n  return (\r\n    <InputBox key={inputObj.title}>\r\n    <Box textStyle='label' layerStyle='muted' mb={1}>\r\n      {inputObj?.title}\r\n    </Box>\r\n    <InputGroup>\r\n      <Input\r\n        type={inputObj.type}\r\n        name={inputObj.name}\r\n        placeholder={inputObj?.placeholder}\r\n        onChange={(e) => onChange(e, inputObj.name)}\r\n      />\r\n      <InputRightElement\r\n        pointerEvents='none'\r\n        children={<FiSearch color='gray.300' />}\r\n      />\r\n    </InputGroup>\r\n  </InputBox>\r\n  )\r\n}\r\nexport default ModifiedTableTop;\r\n\r\n"]},"metadata":{},"sourceType":"module"}