{"ast":null,"code":"import { defineMessages } from 'react-intl';\nexport const scope = 'app.containers.inventory';\nexport default defineMessages({\n  sNo: {\n    id: `${scope}.sNo`,\n    defaultMessage: 'S. No'\n  },\n  date: {\n    id: `${scope}.date`,\n    defaultMessage: 'Date'\n  },\n  groupBy: {\n    id: `${scope}.groupBy`,\n    defaultMessage: 'Group by'\n  },\n  partNo: {\n    id: `${scope}.partNo`,\n    defaultMessage: 'Part Number'\n  },\n  batchCode: {\n    id: `${scope}.batchCode`,\n    defaultMessage: 'Batch Code'\n  },\n  locCode: {\n    id: `${scope}.locCode`,\n    defaultMessage: 'Branch Code'\n  },\n  quantity: {\n    id: `${scope}.quantity`,\n    defaultMessage: 'Quantity'\n  },\n  price: {\n    id: `${scope}.price`,\n    defaultMessage: 'Price'\n  },\n  binLocation: {\n    id: `${scope}.binLocation`,\n    defaultMessage: 'Bin Location'\n  },\n  stockValue: {\n    id: `${scope}.stockValue`,\n    defaultMessage: 'Stock Value'\n  },\n  inventoryDetailSearch: {\n    id: `${scope}.inventoryDetailSearch`,\n    defaultMessage: 'Inventory detail search'\n  },\n  tryAgain: {\n    id: `${scope}.tryAgain`,\n    defaultMessage: 'Please try again later'\n  },\n  stockHasBeenAdded: {\n    id: `${scope}.stockHasBeenAdded`,\n    defaultMessage: 'Stock has been added to'\n  },\n  fieldValueMessage: {\n    id: `${scope}.fieldValueMessage`,\n    defaultMessage: 'Fields must not have the same value'\n  },\n  filterByBranch: {\n    id: `${scope}.filterByBranch`,\n    defaultMessage: 'Filter by branch'\n  },\n  selectBranch: {\n    id: `${scope}.selectBranch`,\n    defaultMessage: 'Select Branch'\n  },\n  mapFields: {\n    id: `${scope}.mapFields`,\n    defaultMessage: 'Map Fields'\n  },\n  stockData: {\n    id: `${scope}.stockData`,\n    defaultMessage: 'Stock Data'\n  },\n  importStock: {\n    id: `${scope}.importStock`,\n    defaultMessage: 'Import stock data'\n  },\n  next: {\n    id: `${scope}.next`,\n    defaultMessage: 'Next'\n  },\n  uploadStock: {\n    id: `${scope}.uploadStock`,\n    defaultMessage: 'Upload stock'\n  },\n  bulkUpload: {\n    id: `${scope}.bulkUpload`,\n    defaultMessage: 'Bulk Upload'\n  }\n});","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/containers/Inventory/messages.js"],"names":["defineMessages","scope","sNo","id","defaultMessage","date","groupBy","partNo","batchCode","locCode","quantity","price","binLocation","stockValue","inventoryDetailSearch","tryAgain","stockHasBeenAdded","fieldValueMessage","filterByBranch","selectBranch","mapFields","stockData","importStock","next","uploadStock","bulkUpload"],"mappings":"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","sourcesContent":["import { defineMessages } from 'react-intl';\r\n\r\nexport const scope = 'app.containers.inventory';\r\n\r\nexport default defineMessages({\r\n  sNo: {\r\n    id: `${scope}.sNo`,\r\n    defaultMessage: 'S. No',\r\n  },\r\n  date: {\r\n    id: `${scope}.date`,\r\n    defaultMessage: 'Date',\r\n  },\r\n  groupBy: {\r\n    id: `${scope}.groupBy`,\r\n    defaultMessage: 'Group by',\r\n  },\r\n  partNo: {\r\n    id: `${scope}.partNo`,\r\n    defaultMessage: 'Part Number',\r\n  },\r\n  batchCode: {\r\n    id: `${scope}.batchCode`,\r\n    defaultMessage: 'Batch Code',\r\n  },\r\n  locCode: {\r\n    id: `${scope}.locCode`,\r\n    defaultMessage: 'Branch Code',\r\n  },\r\n  quantity: {\r\n    id: `${scope}.quantity`,\r\n    defaultMessage: 'Quantity',\r\n  },\r\n  price: {\r\n    id: `${scope}.price`,\r\n    defaultMessage: 'Price',\r\n  },\r\n  binLocation: {\r\n    id: `${scope}.binLocation`,\r\n    defaultMessage: 'Bin Location',\r\n  },\r\n  stockValue: {\r\n    id: `${scope}.stockValue`,\r\n    defaultMessage: 'Stock Value',\r\n  },\r\n  inventoryDetailSearch: {\r\n    id: `${scope}.inventoryDetailSearch`,\r\n    defaultMessage: 'Inventory detail search',\r\n  },\r\n  tryAgain: {\r\n    id: `${scope}.tryAgain`,\r\n    defaultMessage:  'Please try again later'\r\n  },\r\n  stockHasBeenAdded: {\r\n    id: `${scope}.stockHasBeenAdded`,\r\n    defaultMessage:  'Stock has been added to'\r\n  },\r\n  fieldValueMessage: {\r\n    id: `${scope}.fieldValueMessage`,\r\n    defaultMessage:  'Fields must not have the same value'\r\n  },\r\n  filterByBranch: {\r\n    id: `${scope}.filterByBranch`,\r\n    defaultMessage:  'Filter by branch'\r\n  },\r\n  selectBranch: {\r\n    id: `${scope}.selectBranch`,\r\n    defaultMessage:  'Select Branch'\r\n  },\r\n  mapFields: {\r\n    id: `${scope}.mapFields`,\r\n    defaultMessage:  'Map Fields'\r\n  },\r\n  stockData: {\r\n    id: `${scope}.stockData`,\r\n    defaultMessage:  'Stock Data'\r\n  },\r\n  importStock: {\r\n    id: `${scope}.importStock`,\r\n    defaultMessage:  'Import stock data'\r\n  },\r\n  next: {\r\n    id: `${scope}.next`,\r\n    defaultMessage:  'Next'\r\n  },\r\n  uploadStock: {\r\n    id: `${scope}.uploadStock`,\r\n    defaultMessage:  'Upload stock'\r\n  },\r\n  bulkUpload: {\r\n    id: `${scope}.bulkUpload`,\r\n    defaultMessage:  'Bulk Upload'\r\n  },\r\n \r\n});\r\n"]},"metadata":{},"sourceType":"module"}