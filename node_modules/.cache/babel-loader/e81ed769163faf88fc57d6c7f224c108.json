{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Work\\\\garaaz-distributor\\\\src\\\\components\\\\EmployeeList\\\\EmployeeTable.js\",\n    _s = $RefreshSig$();\n\nimport { Table, Thead, Tbody, Tfoot, Tr, Th, Td, Flex, useDisclosure, Button, toast } from \"@chakra-ui/react\";\nimport PropTypes from 'prop-types';\nimport { useState } from \"react\";\nimport ActionPop from \"./ActionPop\";\nimport EditEmployee from \"./EditEmployee\";\nimport Employee from \"./Employee\";\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EmployeeTable = _ref => {\n  _s();\n\n  let {\n    employees = []\n  } = _ref;\n  const [openActionPop, setOpenActionPop] = useState(false);\n  const [position, setPosition] = useState();\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const [selectedEmployee, setSelectedEmployee] = useState({});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      overflow: \"auto\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      variant: \"simple\",\n      className: \"emp-table\",\n      style: {\n        width: \"\",\n        overflow: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Thead, {\n        children: /*#__PURE__*/_jsxDEV(Tr, {\n          children: [/*#__PURE__*/_jsxDEV(Th, {\n            children: \" Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Th, {\n            children: \"Employee Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Th, {\n            children: \"Mobile Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Th, {\n            children: \"Branch Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Th, {\n            children: \"Branch Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Th, {\n            children: \"Designation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Th, {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tbody, {\n        children: employees.map(employee => {\n          return /*#__PURE__*/_jsxDEV(Employee, {\n            setSelectedEmployee: setSelectedEmployee,\n            onOpen: onOpen,\n            employee: employee,\n            employees: employees,\n            setPosition: setPosition,\n            setOpenActionPop: setOpenActionPop\n          }, employee._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tfoot, {\n        children: /*#__PURE__*/_jsxDEV(Tr, {\n          children: /*#__PURE__*/_jsxDEV(Td, {\n            children: [employees.length + (employees.length > 1 ? \" Employees\" : \" Employee\"), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActionPop, {\n        position: position,\n        openActionPop: openActionPop,\n        setOpenActionPop: setOpenActionPop,\n        onOpen: onOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditEmployee, {\n        isOpen: isOpen,\n        employees: employees,\n        selectedEmployee: selectedEmployee,\n        onClose: onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EmployeeTable, \"gKapUFGI//c/bJ8AAtnWz2YnYu4=\", false, function () {\n  return [useDisclosure];\n});\n\n_c = EmployeeTable;\nEmployeeTable.propTypes = {\n  employees: PropTypes.array\n};\nexport default EmployeeTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeTable\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/components/EmployeeList/EmployeeTable.js"],"names":["Table","Thead","Tbody","Tfoot","Tr","Th","Td","Flex","useDisclosure","Button","toast","PropTypes","useState","ActionPop","EditEmployee","Employee","EmployeeTable","employees","openActionPop","setOpenActionPop","position","setPosition","isOpen","onOpen","onClose","selectedEmployee","setSelectedEmployee","width","overflow","map","employee","_id","length","propTypes","array"],"mappings":"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","sourcesContent":["import {\r\n  Table, Thead, Tbody, Tfoot, Tr, Th, Td, Flex, useDisclosure, Button, toast\r\n} from \"@chakra-ui/react\"\r\nimport PropTypes from 'prop-types';\r\nimport { useState } from \"react\";\r\nimport ActionPop from \"./ActionPop\";\r\nimport EditEmployee from \"./EditEmployee\";\r\nimport Employee from \"./Employee\";\r\nimport './style.css'\r\nconst EmployeeTable = ({ employees = [] }) => {\r\n  const [openActionPop, setOpenActionPop] = useState(false)\r\n  const [position, setPosition] = useState()\r\n  const { isOpen, onOpen, onClose } = useDisclosure()\r\n  const [selectedEmployee, setSelectedEmployee] = useState({})\r\n  return (\r\n    <div style={{ width: \"100%\", overflow: \"auto\" }}>\r\n      <Table variant=\"simple\" className=\"emp-table\" style={{ width: \"\", overflow: \"auto\" }} >\r\n        <Thead >\r\n          <Tr >\r\n            <Th > Status</Th>\r\n            <Th>Employee Name</Th>\r\n            <Th>Mobile Number</Th>\r\n            <Th>Branch Code</Th>\r\n            <Th>Branch Name</Th>\r\n            <Th>Designation</Th>\r\n            <Th>Actions</Th>\r\n          </Tr>\r\n        </Thead>\r\n        <Tbody>\r\n          {employees.map((employee) => {\r\n            return (\r\n              <Employee\r\n                key={employee._id}\r\n                setSelectedEmployee={setSelectedEmployee}\r\n                onOpen={onOpen}\r\n                employee={employee}\r\n                employees={employees}\r\n                setPosition={setPosition}\r\n                setOpenActionPop={setOpenActionPop}\r\n              />\r\n            )\r\n          })}\r\n        </Tbody>\r\n        <Tfoot>\r\n          <Tr>\r\n            <Td>{employees.length + (employees.length > 1 ? \" Employees\" : \" Employee\")} </Td>\r\n          </Tr>\r\n        </Tfoot>\r\n        <ActionPop position={position} openActionPop={openActionPop} setOpenActionPop={setOpenActionPop} onOpen={onOpen} />\r\n        <EditEmployee\r\n          isOpen={isOpen}\r\n          employees={employees}\r\n          selectedEmployee={selectedEmployee}\r\n          onClose={onClose}\r\n        />\r\n      </Table>\r\n    </div >\r\n  );\r\n}\r\nEmployeeTable.propTypes = {\r\n  employees: PropTypes.array\r\n};\r\nexport default EmployeeTable;"]},"metadata":{},"sourceType":"module"}