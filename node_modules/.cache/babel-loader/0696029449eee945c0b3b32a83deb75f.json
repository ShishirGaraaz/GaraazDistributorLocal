{"ast":null,"code":"\"use strict\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MagnifyContainer = void 0;\n\nconst jsx_runtime_1 = require(\"react/jsx-runtime\");\n\nconst react_1 = require(\"react\");\n\nconst imageCoordinates_1 = require(\"./lib/imageCoordinates\");\n\nconst utils_1 = require(\"./utils\");\n\nconst styles_1 = require(\"./lib/styles\");\n\nconst MagnifyContainer = props => {\n  const {\n    containerDimensions,\n    cursorOffset,\n    fadeDurationInMs = 0,\n    imageComponent: ImageComponent = 'img',\n    imageProps,\n    isActive,\n    isLazyLoaded = true,\n    inPlaceMode,\n    isPortalRendered,\n    isPositionOutside,\n    position,\n    sourceImageDimensions,\n    style\n  } = props,\n        rest = __rest(props, [\"containerDimensions\", \"cursorOffset\", \"fadeDurationInMs\", \"imageComponent\", \"imageProps\", \"isActive\", \"isLazyLoaded\", \"inPlaceMode\", \"isPortalRendered\", \"isPositionOutside\", \"position\", \"sourceImageDimensions\", \"style\"]);\n\n  const timersRef = (0, react_1.useRef)([]);\n  const [isTransitionEntering, setIsTransitionEntering] = (0, react_1.useState)(false);\n  const [isTransitionActive, setIsTransitionActive] = (0, react_1.useState)(false);\n  const [isTransitionLeaving, setIsTransitionLeaving] = (0, react_1.useState)(false);\n  const [, setIsTransitionDone] = (0, react_1.useState)(false);\n  const isVisible = !isLazyLoaded || isLazyLoaded && (isTransitionEntering || isTransitionActive || isTransitionLeaving);\n  const imageCoordinates = inPlaceMode ? (0, imageCoordinates_1.getInPlaceMagnifiedImageCoordinates)(containerDimensions, imageProps, position) : (0, imageCoordinates_1.getLensModeMagnifiedImageCoordinates)(containerDimensions, cursorOffset, imageProps, position, sourceImageDimensions);\n  (0, react_1.useEffect)(() => () => {\n    var _a;\n\n    return (_a = timersRef.current) === null || _a === void 0 ? void 0 : _a.forEach(timerId => {\n      clearTimeout(timerId);\n    });\n  }, []);\n  (0, react_1.useEffect)(() => {\n    if (isActive && !isPositionOutside) {\n      setIsTransitionDone(false);\n      setIsTransitionEntering(true);\n      timersRef.current.push(window.setTimeout(() => {\n        setIsTransitionEntering(false);\n        setIsTransitionActive(true);\n      }, 0));\n    } else {\n      setIsTransitionLeaving(true);\n      setIsTransitionActive(false);\n      timersRef.current.push(window.setTimeout(() => {\n        setIsTransitionDone(true);\n        setIsTransitionLeaving(false);\n      }, fadeDurationInMs));\n    }\n  }, [fadeDurationInMs, isActive, isPositionOutside]);\n  const enlargedImageStyle = (0, react_1.useMemo)(() => (0, styles_1.getMagnifiedImageStyle)(imageProps), [imageProps]);\n  const computedContainerStyle = Object.assign(Object.assign({\n    overflow: 'hidden'\n  }, (0, styles_1.getMagnifyContainerStyle)(containerDimensions, style, fadeDurationInMs)), (0, styles_1.getTransitionActiveStyle)(isTransitionActive));\n  const computedImageStyle = Object.assign(Object.assign({}, enlargedImageStyle), (0, styles_1.getMagnifiedImageTranslationStyle)(imageCoordinates));\n  return (0, jsx_runtime_1.jsx)(jsx_runtime_1.Fragment, {\n    children: isVisible && (0, jsx_runtime_1.jsx)(\"div\", Object.assign({}, rest, {\n      style: computedContainerStyle\n    }, {\n      children: (0, jsx_runtime_1.jsx)(ImageComponent, Object.assign({}, imageProps, {\n        alt: imageProps.alt || '',\n        style: computedImageStyle,\n        onLoad: imageProps.onLoad || utils_1.noop,\n        onError: imageProps.onError || utils_1.noop\n      }), void 0)\n    }), void 0)\n  }, void 0);\n};\n\nexports.MagnifyContainer = MagnifyContainer;","map":{"version":3,"sources":["../../src/MaginfyContainer.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n    ComponentType,\n    HTMLProps,\n    useEffect,\n    useMemo,\n    useRef,\n    useState,\n} from 'react';\n\nimport {\n    getLensModeMagnifiedImageCoordinates,\n    getInPlaceMagnifiedImageCoordinates,\n} from 'src/lib/imageCoordinates';\nimport { noop } from 'src/utils';\nimport {\n    getMagnifyContainerStyle,\n    getMagnifiedImageStyle,\n    getMagnifiedImageTranslationStyle,\n    getTransitionActiveStyle,\n} from 'src/lib/styles';\nimport {\n    MagnifiedImageProps, Point, ContainerDimensions,\n} from 'src/types';\n\nexport interface PropTypes extends Omit<HTMLProps<HTMLDivElement>, 'ref'> {\n    containerDimensions: ContainerDimensions;\n    cursorOffset: Point;\n    fadeDurationInMs?: number;\n    imageComponent?: ComponentType<HTMLProps<HTMLImageElement>>;\n    imageProps: MagnifiedImageProps;\n    isActive?: boolean;\n    isLazyLoaded?: boolean;\n    isPortalRendered?: boolean;\n    inPlaceMode?: boolean;\n    isPositionOutside?: boolean;\n    position: Point;\n    sourceImageDimensions: ContainerDimensions;\n}\n\nexport const MagnifyContainer = (props: PropTypes): JSX.Element => {\n    const {\n        containerDimensions,\n        cursorOffset,\n        fadeDurationInMs = 0,\n        imageComponent: ImageComponent = 'img',\n        imageProps,\n        isActive,\n        isLazyLoaded = true,\n        inPlaceMode,\n        isPortalRendered,\n        isPositionOutside,\n        position,\n        sourceImageDimensions,\n        style,\n        ...rest\n    } = props;\n    const timersRef = useRef<number[]>([]);\n    const [isTransitionEntering, setIsTransitionEntering] = useState(false);\n    const [isTransitionActive, setIsTransitionActive] = useState(false);\n    const [isTransitionLeaving, setIsTransitionLeaving] = useState(false);\n    const [, setIsTransitionDone] = useState(false);\n\n    const isVisible = !isLazyLoaded || (\n        isLazyLoaded && (isTransitionEntering || isTransitionActive || isTransitionLeaving)\n    );\n\n    const imageCoordinates = inPlaceMode\n        ? getInPlaceMagnifiedImageCoordinates(\n            containerDimensions,\n            imageProps,\n            position,\n        )\n        : getLensModeMagnifiedImageCoordinates(\n            containerDimensions,\n            cursorOffset,\n            imageProps,\n            position,\n            sourceImageDimensions,\n        );\n\n    useEffect(() => (): void => timersRef.current?.forEach((timerId) => {\n        clearTimeout(timerId);\n    }), []);\n\n    useEffect(() => {\n        if (isActive && !isPositionOutside) {\n            setIsTransitionDone(false);\n            setIsTransitionEntering(true);\n\n            timersRef.current.push(window.setTimeout(() => {\n                setIsTransitionEntering(false);\n                setIsTransitionActive(true);\n            }, 0));\n        } else {\n            setIsTransitionLeaving(true);\n            setIsTransitionActive(false);\n\n            timersRef.current.push(window.setTimeout(() => {\n                setIsTransitionDone(true);\n                setIsTransitionLeaving(false);\n            }, fadeDurationInMs));\n        }\n    }, [fadeDurationInMs, isActive, isPositionOutside]);\n\n    const enlargedImageStyle = useMemo(() => getMagnifiedImageStyle(imageProps), [imageProps]);\n\n    const computedContainerStyle = {\n        overflow: 'hidden',\n        ...getMagnifyContainerStyle(\n            containerDimensions,\n            style,\n            fadeDurationInMs,\n        ),\n        ...getTransitionActiveStyle(isTransitionActive),\n    };\n\n    const computedImageStyle = {\n        ...enlargedImageStyle,\n        ...getMagnifiedImageTranslationStyle(imageCoordinates),\n    };\n\n    return (\n        <>\n            {isVisible && (\n                <div\n                    {...rest}\n                    style={computedContainerStyle}\n                >\n                    <ImageComponent\n                        {...imageProps}\n                        alt={imageProps.alt || ''}\n                        style={computedImageStyle}\n                        onLoad={imageProps.onLoad || noop}\n                        onError={imageProps.onError || noop}\n                    />\n                </div>\n            )}\n        </>\n    );\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}