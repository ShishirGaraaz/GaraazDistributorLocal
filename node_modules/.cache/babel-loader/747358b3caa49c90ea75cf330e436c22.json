{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Work\\\\garaaz-distributor\\\\src\\\\components\\\\IndividualProfileForm\\\\index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { Select } from '@chakra-ui/react';\nimport { useIntl } from 'react-intl';\nimport toast from 'react-hot-toast';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\nimport { useSelector } from 'react-redux';\nimport { publicAxios as axios } from '../../axios';\nimport messages from './messages';\nimport { setDistributorInfo } from '../../containers/DistributerInfo/actions';\nimport { useDropzone } from 'react-dropzone';\nimport { DropZoneStyle } from '../../utils/theme/DropZoneStyle';\nimport CustomInput from '../../utils/Input';\nimport FormactionButtons from '../../utils/FormactionButtons';\nimport { Box, useColorMode } from '@chakra-ui/react';\nimport InputScaffold from '../../utils/InputScaffold';\nimport { Document, Page } from 'react-pdf/dist/esm/entry.webpack';\nimport withToast from '../../HOCs/withToast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst IndividualProfileForm = _ref => {\n  _s();\n\n  let {\n    setActiveStep,\n    distributor,\n    distributorData,\n    notification\n  } = _ref;\n  const [loading, setLoading] = useState(false);\n  const {\n    colorMode\n  } = useColorMode();\n  const [individualProfile, setIndividualProfile] = useState({});\n  const [submitted, setSubmitted] = useState(false);\n  const dispatch = useDispatch();\n  const [distributorId, setDistributorId] = useState('');\n  const auth = useSelector(state => state.auth);\n  const intl = useIntl();\n  const {\n    register,\n    formState: {\n      errors\n    },\n    handleSubmit,\n    reset,\n    setError,\n    setValue\n  } = useForm({\n    mode: 'onSubmit'\n  });\n  const [files, setFiles] = useState([]);\n  useEffect(() => {\n    getDistributorData();\n  }, []);\n  const onDrop = useCallback(acceptedFiles => {\n    setFiles(acceptedFiles.map(file => Object.assign(file, {\n      preview: URL.createObjectURL(file)\n    })));\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject,\n    isSubmitted,\n    acceptedFiles\n  } = useDropzone({\n    accept: 'image/*',\n    maxFiles: 1,\n    noKeyboard: true,\n    maxSize: 5242880,\n    onDrop\n  });\n  const style = useMemo(() => ({ ...DropZoneStyle.baseStyle,\n    ...(isDragActive ? DropZoneStyle.activeStyle : {}),\n    ...(isDragAccept ? DropZoneStyle.acceptStyle : {}),\n    ...(isDragReject ? DropZoneStyle.rejectStyle : {})\n  }), [isDragActive, isDragReject, isDragAccept]);\n  {\n    /* <div style={DropZoneStyle.thumb} key={file.name || index}>\r\n      <div style={DropZoneStyle.thumbInner}>\r\n        <img\r\n          src={file.preview}\r\n          style={DropZoneStyle.img}\r\n        />\r\n      </div>\r\n    </div> */\n  }\n  const images = files.map((file, index) => {\n    /*  if (file.name === 'Document Id') { */\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: DropZoneStyle.thumb,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: DropZoneStyle.thumbInner,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: file.preview,\n          style: DropZoneStyle.img,\n          alt: \"documents\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)\n    }, file.name || index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this);\n    /*  } else {\r\n       return <PDFReviewer file={files[0]} />;\r\n     } */\n  });\n\n  const getDistributorData = async () => {\n    const data = await distributorData();\n    setDistributorId(data._id);\n\n    if (!isEmpty(data.individual.document)) {\n      var _data$individual;\n\n      setIndividualProfile(data.individual);\n\n      if ((_data$individual = data.individual) !== null && _data$individual !== void 0 && _data$individual.document[0]) {\n        var _data$individual2;\n\n        setFiles([{\n          preview: (_data$individual2 = data.individual) === null || _data$individual2 === void 0 ? void 0 : _data$individual2.document[0].path,\n          name: 'Document Id'\n        }]);\n      }\n\n      dispatch(setDistributorInfo({ ...distributor,\n        individual: true\n      }));\n    }\n  };\n\n  useEffect(() => {\n    if (!isEmpty(individualProfile)) {\n      setValue('userIdCardNumber', get(individualProfile, 'userIdCardNumber', ''));\n      setValue('userIdCardType', get(individualProfile, 'userIdCardType', ''));\n      setValue('userStatus', get(individualProfile, 'userStatus', ''));\n    }\n  }, [individualProfile]);\n  useEffect(() => () => {\n    // Make sure to revoke the data uris to avoid memory leaks\n    files.forEach(file => URL.revokeObjectURL(file.preview));\n  }, [files]);\n\n  const isDataUpdated = data => {\n    return individualProfile.userIdCardNumber !== data.userIdCardNumber || individualProfile.userIdCardType !== data.userIdCardType || individualProfile.userStatus !== data.userStatus;\n  };\n\n  const handleFormSubmit = async data => {\n    setLoading(true);\n    const formData = new FormData();\n\n    if (acceptedFiles.length < 1 && !isDataUpdated(data)) {\n      setSubmitted(true);\n      setLoading(false);\n      setActiveStep(3);\n    } else {\n      try {\n        let docData;\n\n        if (acceptedFiles.length < 1 && files.length < 1) {\n          setError('idCardDocument', {\n            type: 'required',\n            message: 'Please upload document'\n          });\n          notification({\n            status: 'error',\n            title: 'Invalid Document',\n            description: 'Please upload a valid document'\n          });\n          setLoading(false);\n          return;\n        } else if (acceptedFiles.length > 0) {\n          formData.append('media', files[0], files[0].name);\n          const {\n            data\n          } = await axios.post('/media', formData, {\n            headers: {\n              Authorization: auth.authToken\n            }\n          });\n          docData = data;\n        }\n\n        const api = `/distributors/${distributorId}/individuals`;\n\n        if (!isEmpty(individualProfile.document)) {\n          await axios.patch(api, { ...data,\n            userIdCardDocumentId: docData ? docData[0]._id : individualProfile === null || individualProfile === void 0 ? void 0 : individualProfile.userIdCardDocumentId\n          }, {\n            headers: {\n              Authorization: auth.authToken\n            }\n          });\n        } else {\n          await axios.post(api, { ...data,\n            userIdCardDocumentId: docData ? docData[0]._id : individualProfile === null || individualProfile === void 0 ? void 0 : individualProfile.userIdCardDocumentId\n          }, {\n            headers: {\n              Authorization: auth.authToken\n            }\n          });\n          dispatch(setDistributorInfo({ ...distributor,\n            individual: true\n          }));\n        }\n\n        setActiveStep(3);\n        toast(intl.formatMessage(messages.individualProfileSaveSuccess));\n        setLoading(false);\n      } catch (err) {\n        setLoading(false);\n        toast(intl.formatMessage(messages.somethingWentWrong));\n      }\n    }\n  };\n\n  const onReset = () => {\n    setFiles([]);\n    reset({}, {\n      keepDirty: false,\n      keepErrors: false,\n      keepValues: false\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(handleFormSubmit),\n    style: {\n      height: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"mt-6 mb-2 font-bold\",\n        children: intl.formatMessage(messages.individualProfile)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"mb-6 border-b-1 border-blueGray-200\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        flexWrap: \"wrap\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          width: {\n            base: '100%',\n            lg: '48%'\n          },\n          mt: {\n            base: 6,\n            lg: 0\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1\",\n            children: intl.formatMessage(messages.idCardType)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, { ...register('userIdCardType', {\n              required: true\n            }),\n            placeholder: \"Select Document Type\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              name: \"PAN_CARD\",\n              value: \"PAN_CARD\",\n              children: \"Pan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              name: \"AADHAR_CARD\",\n              value: \"AADHAR_CARD\",\n              children: \"Aadhaar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), errors && errors.userIdCardType && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-youtube-regular text-sm\",\n            children: intl.formatMessage(messages.idCardTypeRequired)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputScaffold, {\n          width: \"48%\",\n          label: messages.idCardNumber,\n          inputName: \"userIdCardNumber\",\n          inputType: \"textarea\",\n          isRequired: true,\n          errors: errors,\n          length: {\n            min: 10,\n            max: 12\n          },\n          requiredLabel: messages.idCardNumberRequired,\n          errMsg: messages.invalidCard,\n          register: register\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 6,\n        mb: 6,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1\",\n          children: intl.formatMessage(messages.idCardDocument)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          backgroundColor: colorMode === 'dark' ? 'gray.900' : 'white',\n          ...getRootProps({\n            style,\n            className: 'dropzone'\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            backgroundColor: colorMode === 'dark' ? 'gray.900' : 'white',\n            style: DropZoneStyle.thumbsContainer,\n            children: images\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this), isDragActive && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: intl.formatMessage(messages.dropFilesHere)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this), !acceptedFiles || acceptedFiles.length === 0 && !isDragActive && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: intl.formatMessage(messages.dragAndDropMessage)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 17\n          }, this), acceptedFiles && acceptedFiles.length > 0 && !isDragActive && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"far fa-file fa-2x\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: acceptedFiles[0].path\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), (!acceptedFiles && submitted || files.length === 0 && submitted) && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-youtube-regular text-sm mb-3\",\n            children: intl.formatMessage(messages.idCardDocumentRequired)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        ml: \"auto\",\n        children: /*#__PURE__*/_jsxDEV(FormactionButtons, {\n          isLoading: loading,\n          saveLabel: messages.saveButton,\n          onReset: onReset,\n          cancleLabel: messages.cancelButtonLabe\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 5\n  }, this);\n};\n\n_s(IndividualProfileForm, \"FXuPjzjER3trvHaWfSC9SUMbOWs=\", false, function () {\n  return [useColorMode, useDispatch, useSelector, useIntl, useForm, useDropzone];\n});\n\n_c = IndividualProfileForm;\nconst options = {\n  cMapUrl: 'cmaps/',\n  cMapPacked: true\n};\n\nfunction PDFReviewer(_ref2) {\n  _s2();\n\n  let {\n    file\n  } = _ref2;\n  const [numPages, setNumPages] = useState(null);\n\n  function onDocumentLoadSuccess(_ref3) {\n    let {\n      numPages: nextNumPages\n    } = _ref3;\n    setNumPages(nextNumPages);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Document, {\n    file: file,\n    onLoadSuccess: onDocumentLoadSuccess,\n    options: options,\n    children: Array.from(new Array(numPages), (el, index) => /*#__PURE__*/_jsxDEV(Page, {\n      pageNumber: index + 1\n    }, `page_${index + 1}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 362,\n    columnNumber: 7\n  }, this);\n}\n\n_s2(PDFReviewer, \"AwOvOa2rmCCPJU+WISEfnKBF6Zg=\");\n\n_c2 = PDFReviewer;\nIndividualProfileForm.propTypes = {\n  setActiveStep: PropTypes.func,\n  distributor: PropTypes.object,\n  distributorData: PropTypes.func\n};\nexport default _c3 = withToast(IndividualProfileForm);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"IndividualProfileForm\");\n$RefreshReg$(_c2, \"PDFReviewer\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/components/IndividualProfileForm/index.js"],"names":["React","useCallback","useEffect","useMemo","useState","PropTypes","useDispatch","useForm","Select","useIntl","toast","get","isEmpty","useSelector","publicAxios","axios","messages","setDistributorInfo","useDropzone","DropZoneStyle","CustomInput","FormactionButtons","Box","useColorMode","InputScaffold","Document","Page","withToast","IndividualProfileForm","setActiveStep","distributor","distributorData","notification","loading","setLoading","colorMode","individualProfile","setIndividualProfile","submitted","setSubmitted","dispatch","distributorId","setDistributorId","auth","state","intl","register","formState","errors","handleSubmit","reset","setError","setValue","mode","files","setFiles","getDistributorData","onDrop","acceptedFiles","map","file","Object","assign","preview","URL","createObjectURL","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","isSubmitted","accept","maxFiles","noKeyboard","maxSize","style","baseStyle","activeStyle","acceptStyle","rejectStyle","images","index","thumb","thumbInner","img","name","data","_id","individual","document","path","forEach","revokeObjectURL","isDataUpdated","userIdCardNumber","userIdCardType","userStatus","handleFormSubmit","formData","FormData","length","docData","type","message","status","title","description","append","post","headers","Authorization","authToken","api","patch","userIdCardDocumentId","formatMessage","individualProfileSaveSuccess","err","somethingWentWrong","onReset","keepDirty","keepErrors","keepValues","height","base","lg","idCardType","required","idCardTypeRequired","idCardNumber","min","max","idCardNumberRequired","invalidCard","idCardDocument","className","thumbsContainer","dropFilesHere","dragAndDropMessage","idCardDocumentRequired","saveButton","cancelButtonLabe","options","cMapUrl","cMapPacked","PDFReviewer","numPages","setNumPages","onDocumentLoadSuccess","nextNumPages","Array","from","el","propTypes","func","object"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Select } from '@chakra-ui/react';\r\nimport { useIntl } from 'react-intl';\r\nimport toast from 'react-hot-toast';\r\nimport get from 'lodash/get';\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport { useSelector } from 'react-redux';\r\nimport { publicAxios as axios } from '../../axios';\r\nimport messages from './messages';\r\nimport { setDistributorInfo } from '../../containers/DistributerInfo/actions';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { DropZoneStyle } from '../../utils/theme/DropZoneStyle';\r\nimport CustomInput from '../../utils/Input';\r\nimport FormactionButtons from '../../utils/FormactionButtons';\r\nimport { Box, useColorMode } from '@chakra-ui/react';\r\nimport InputScaffold from '../../utils/InputScaffold';\r\nimport { Document, Page } from 'react-pdf/dist/esm/entry.webpack';\r\nimport withToast from '../../HOCs/withToast';\r\n\r\nconst IndividualProfileForm = ({\r\n  setActiveStep,\r\n  distributor,\r\n  distributorData,\r\n  notification\r\n}) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const { colorMode } = useColorMode();\r\n  const [individualProfile, setIndividualProfile] = useState({});\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const [distributorId, setDistributorId] = useState('');\r\n  const auth = useSelector((state) => state.auth);\r\n  const intl = useIntl();\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    handleSubmit,\r\n    reset,\r\n    setError,\r\n    setValue,\r\n  } = useForm({ mode: 'onSubmit' });\r\n  const [files, setFiles] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getDistributorData();\r\n  }, []);\r\n\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    setFiles(\r\n      acceptedFiles.map((file) =>\r\n        Object.assign(file, {\r\n          preview: URL.createObjectURL(file),\r\n        }),\r\n      ),\r\n    );\r\n  }, []);\r\n\r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive,\r\n    isDragAccept,\r\n    isDragReject,\r\n    isSubmitted,\r\n    acceptedFiles,\r\n  } = useDropzone({\r\n    accept: 'image/*',\r\n    maxFiles: 1,\r\n    noKeyboard: true,\r\n    maxSize: 5242880,\r\n    onDrop,\r\n  });\r\n\r\n  const style = useMemo(\r\n    () => ({\r\n      ...DropZoneStyle.baseStyle,\r\n      ...(isDragActive ? DropZoneStyle.activeStyle : {}),\r\n      ...(isDragAccept ? DropZoneStyle.acceptStyle : {}),\r\n      ...(isDragReject ? DropZoneStyle.rejectStyle : {}),\r\n    }),\r\n    [isDragActive, isDragReject, isDragAccept],\r\n  );\r\n\r\n  {\r\n    /* <div style={DropZoneStyle.thumb} key={file.name || index}>\r\n      <div style={DropZoneStyle.thumbInner}>\r\n        <img\r\n          src={file.preview}\r\n          style={DropZoneStyle.img}\r\n        />\r\n      </div>\r\n    </div> */\r\n  }\r\n\r\n  \r\n\r\n\r\n\r\n  const images = files.map((file, index) => {\r\n   /*  if (file.name === 'Document Id') { */\r\n      return (\r\n        <div style={DropZoneStyle.thumb} key={file.name || index}>\r\n          <div style={DropZoneStyle.thumbInner}>\r\n            <img src={file.preview} style={DropZoneStyle.img} alt='documents' />\r\n          </div>\r\n        </div>\r\n      );\r\n   /*  } else {\r\n      return <PDFReviewer file={files[0]} />;\r\n    } */\r\n  });\r\n\r\n  const getDistributorData = async () => {\r\n    const data = await distributorData();\r\n    setDistributorId(data._id);\r\n    if (!isEmpty(data.individual.document)) {\r\n      setIndividualProfile(data.individual);\r\n      if (data.individual?.document[0]) {\r\n        setFiles([\r\n          { preview: data.individual?.document[0].path, name: 'Document Id' },\r\n        ]);\r\n      }\r\n      dispatch(setDistributorInfo({ ...distributor, individual: true }));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isEmpty(individualProfile)) {\r\n      setValue(\r\n        'userIdCardNumber',\r\n        get(individualProfile, 'userIdCardNumber', ''),\r\n      );\r\n      setValue('userIdCardType', get(individualProfile, 'userIdCardType', ''));\r\n      setValue('userStatus', get(individualProfile, 'userStatus', ''));\r\n    }\r\n  }, [individualProfile]);\r\n\r\n  useEffect(\r\n    () => () => {\r\n      // Make sure to revoke the data uris to avoid memory leaks\r\n      files.forEach((file) => URL.revokeObjectURL(file.preview));\r\n    },\r\n    [files],\r\n  );\r\n\r\n  const isDataUpdated = (data) => {\r\n    return (\r\n      individualProfile.userIdCardNumber !== data.userIdCardNumber ||\r\n      individualProfile.userIdCardType !== data.userIdCardType ||\r\n      individualProfile.userStatus !== data.userStatus\r\n    );\r\n  };\r\n\r\n  const handleFormSubmit = async (data) => {\r\n    setLoading(true);\r\n    const formData = new FormData();\r\n    if (acceptedFiles.length < 1 && !isDataUpdated(data)) {\r\n      setSubmitted(true);\r\n      setLoading(false);\r\n      setActiveStep(3);\r\n    } else {\r\n      try {\r\n        let docData;\r\n\r\n        if (acceptedFiles.length < 1 && files.length < 1) {\r\n\r\n          setError('idCardDocument', {\r\n            type: 'required',\r\n            message: 'Please upload document',\r\n          });\r\n          notification({status:'error', title:'Invalid Document', description: 'Please upload a valid document'});\r\n          setLoading(false);\r\n            return;\r\n\r\n        } else if (acceptedFiles.length > 0) {\r\n          formData.append('media', files[0], files[0].name);\r\n          const { data } = await axios.post('/media', formData, {\r\n            headers: {\r\n              Authorization: auth.authToken,\r\n            },\r\n          });\r\n\r\n          docData = data;\r\n        }\r\n\r\n        const api = `/distributors/${distributorId}/individuals`;\r\n        if (!isEmpty(individualProfile.document)) {\r\n          await axios.patch(\r\n            api,\r\n            {\r\n              ...data,\r\n              userIdCardDocumentId: docData\r\n                ? docData[0]._id\r\n                : individualProfile?.userIdCardDocumentId,\r\n            },\r\n            {\r\n              headers: {\r\n                Authorization: auth.authToken,\r\n              },\r\n            },\r\n          );\r\n        } else {\r\n          await axios.post(\r\n            api,\r\n            {\r\n              ...data,\r\n              userIdCardDocumentId: docData\r\n                ? docData[0]._id\r\n                : individualProfile?.userIdCardDocumentId,\r\n            },\r\n            {\r\n              headers: {\r\n                Authorization: auth.authToken,\r\n              },\r\n            },\r\n          );\r\n          dispatch(setDistributorInfo({ ...distributor, individual: true }));\r\n        }\r\n        setActiveStep(3);\r\n        toast(intl.formatMessage(messages.individualProfileSaveSuccess));\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setLoading(false);\r\n        toast(intl.formatMessage(messages.somethingWentWrong));\r\n      }\r\n    }\r\n  };\r\n  const onReset = () => {\r\n    setFiles([]);\r\n    reset(\r\n      {},\r\n      {\r\n        keepDirty: false,\r\n        keepErrors: false,\r\n        keepValues: false,\r\n      },\r\n    );\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit(handleFormSubmit)} style={{ height: '100%' }}>\r\n      <div style={{ height: '100%' }}>\r\n        <h6 className='mt-6 mb-2 font-bold'>\r\n          {intl.formatMessage(messages.individualProfile)}\r\n        </h6>\r\n        <hr className='mb-6 border-b-1 border-blueGray-200' />\r\n        <Box display='flex' justifyContent='space-between' flexWrap='wrap'>\r\n          <Box width={{ base: '100%', lg: '48%' }} mt={{ base: 6, lg: 0 }}>\r\n            <label className='block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1'>\r\n              {intl.formatMessage(messages.idCardType)}\r\n            </label>\r\n            <Select\r\n              {...register('userIdCardType', {\r\n                required: true,\r\n              })}\r\n              placeholder='Select Document Type'\r\n            >\r\n              {/* AADHAAR_CARD */}\r\n              <option name='PAN_CARD' value='PAN_CARD'>\r\n                Pan\r\n              </option>\r\n              <option name='AADHAR_CARD' value='AADHAR_CARD'>\r\n                Aadhaar\r\n              </option>\r\n            </Select>\r\n            {errors && errors.userIdCardType && (\r\n              <span className='text-youtube-regular text-sm'>\r\n                {intl.formatMessage(messages.idCardTypeRequired)}\r\n              </span>\r\n            )}\r\n          </Box>\r\n          <InputScaffold\r\n            width='48%'\r\n            label={messages.idCardNumber}\r\n            inputName='userIdCardNumber'\r\n            inputType='textarea'\r\n            isRequired={true}\r\n            errors={errors}\r\n            length={{ min: 10, max: 12 }}\r\n            requiredLabel={messages.idCardNumberRequired}\r\n            errMsg={messages.invalidCard}\r\n            register={register}\r\n          />\r\n          {/* <InputScaffold\r\n            width='32%'\r\n            label={messages.status}\r\n            inputName='userStatus'\r\n            inputType='text'\r\n            isRequired={false}\r\n            errors={errors}\r\n            isReadOnly={true}\r\n            requiredLabel={messages.statusRequired}\r\n            register={register}\r\n          /> */}\r\n        </Box>\r\n        <Box mt={6} mb={6}>\r\n          <label className='block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1'>\r\n            {intl.formatMessage(messages.idCardDocument)}\r\n          </label>\r\n          <Box\r\n            backgroundColor={colorMode === 'dark' ? 'gray.900' : 'white'}\r\n            {...getRootProps({ style, className: 'dropzone' })}\r\n          >\r\n            <input {...getInputProps()} />\r\n            <Box\r\n              backgroundColor={colorMode === 'dark' ? 'gray.900' : 'white'}\r\n              style={DropZoneStyle.thumbsContainer}\r\n            >\r\n              {images}\r\n            </Box>\r\n            {isDragActive && (\r\n              <p>{intl.formatMessage(messages.dropFilesHere)}</p>\r\n            )}\r\n            {!acceptedFiles ||\r\n              (acceptedFiles.length === 0 && !isDragActive && (\r\n                <p>{intl.formatMessage(messages.dragAndDropMessage)}</p>\r\n              ))}\r\n            {acceptedFiles && acceptedFiles.length > 0 && !isDragActive && (\r\n              <>\r\n                <p>\r\n                  <i className='far fa-file fa-2x' />\r\n                </p>\r\n                <p>{acceptedFiles[0].path}</p>\r\n              </>\r\n            )}\r\n            {((!acceptedFiles && submitted) ||\r\n              (files.length === 0 && submitted)) && (\r\n              <p className='text-youtube-regular text-sm mb-3'>\r\n                {intl.formatMessage(messages.idCardDocumentRequired)}\r\n              </p>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n        <Box ml='auto'>\r\n          <FormactionButtons\r\n            isLoading={loading}\r\n            saveLabel={messages.saveButton}\r\n            onReset={onReset}\r\n            cancleLabel={messages.cancelButtonLabe}\r\n          />\r\n        </Box>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst options = {\r\n  cMapUrl: 'cmaps/',\r\n  cMapPacked: true,\r\n};\r\n\r\nfunction PDFReviewer({ file }) {\r\n  const [numPages, setNumPages] = useState(null);\r\n\r\n  function onDocumentLoadSuccess({ numPages: nextNumPages }) {\r\n    setNumPages(nextNumPages);\r\n  }\r\n\r\n  return (\r\n      <Document\r\n        file={file}\r\n        onLoadSuccess={onDocumentLoadSuccess}\r\n        options={options}\r\n      >\r\n        {Array.from(new Array(numPages), (el, index) => (\r\n          <Page key={`page_${index + 1}`} pageNumber={index + 1} />\r\n        ))}\r\n      </Document>\r\n  );\r\n}\r\n\r\nIndividualProfileForm.propTypes = {\r\n  setActiveStep: PropTypes.func,\r\n  distributor: PropTypes.object,\r\n  distributorData: PropTypes.func,\r\n};\r\n\r\nexport default withToast(IndividualProfileForm);\r\n"]},"metadata":{},"sourceType":"module"}