{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Work\\\\garaaz-distributor\\\\src\\\\containers\\\\OutstandingAccount\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState, useEffect } from 'react';\nimport Layout from '../Layout';\nimport DynamicTable from '../../components/DynamicTable';\nimport { useIntl } from 'react-intl';\nimport { Box, Menu, MenuButton, Center, MenuList, Button, MenuItem, Link } from '@chakra-ui/react';\nimport ModifiedTableTop from '../../components/TableTop/ModifiedTableTop';\nimport enums from '../../utils/enums';\nimport { FiMoreVertical } from 'react-icons/fi';\nimport { fetchAllOutstanding, selectOutsandingAcct } from './slice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useRouteMatch, Link as ReactLink, Switch, Route } from 'react-router-dom';\nimport moment from 'moment';\nimport messages from './message';\nimport WorkshopOutstandingAcct from './WorkshopOutstandingAcct';\nimport getMoneyFormat from '../../utils/getMoneyFormat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OutstandingAcct = props => {\n  _s();\n\n  const [inputValues, setInputValue] = useState({\n    start: moment().startOf('month').format('YYYY-MM-DD'),\n    end: moment().add(1, 'days').format('YYYY-MM-DD')\n  });\n  const intl = useIntl();\n  const [isLoading, setIsLoading] = useState(false);\n  const auth = useSelector(state => state.auth);\n  const {\n    outstandingAcctList\n  } = useSelector(selectOutsandingAcct);\n  const dispatcher = useDispatch();\n  const {\n    url,\n    path\n  } = useRouteMatch();\n  const [tableLoading, setTableLoading] = useState(false);\n  useEffect(() => {\n    (async () => {\n      setTableLoading(true);\n      await dispatcher(fetchAllOutstanding({\n        auth,\n        params: {}\n      }));\n      setTableLoading(false);\n    })();\n  }, []);\n  const inputData = useMemo(() => [{\n    title: intl.formatMessage(messages.accountDetailSearch),\n    type: 'text',\n    placeholder: '',\n    name: 'searchAccount'\n  }, {\n    title: intl.formatMessage(messages.groupBy),\n    type: 'select',\n    placeholder: 'Select option',\n    name: 'groupBy',\n    options: [{\n      value: 'none',\n      label: 'None'\n    }, {\n      value: 'branch',\n      label: intl.formatMessage(messages.branch)\n    }, {\n      value: 'salesRep',\n      label: intl.formatMessage(messages.salesRep)\n    }, {\n      value: 'workshopType',\n      label: intl.formatMessage(messages.workshopType)\n    }]\n  }, {\n    title: intl.formatMessage(messages.date),\n    type: 'date',\n    placeholder: 'Enter order No',\n    name: ['start', 'end'],\n    defaultValue: [moment().startOf('month').format('YYYY-MM-DD'), moment().format('YYYY-MM-DD')]\n  }], []);\n  const columns = useMemo(() => [{\n    Header: intl.formatMessage(messages.sNo),\n    accessor: 'sno',\n    Cell: allData => {\n      var _allData$row;\n\n      return /*#__PURE__*/_jsxDEV(Box, {\n        children: (allData === null || allData === void 0 ? void 0 : (_allData$row = allData.row) === null || _allData$row === void 0 ? void 0 : _allData$row.index) + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 18\n      }, this);\n    }\n  }, {\n    Header: intl.formatMessage(messages.workshopName),\n    accessor: 'workshopName',\n    Cell: allData => {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        as: ReactLink,\n        to: `${url}/${allData.row.original.workshopId}/outstandings`,\n        children: allData.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this);\n    }\n  }, {\n    Header: 'Workshop Code',\n    accessor: 'code'\n  }, {\n    Header: intl.formatMessage(messages.workshopType),\n    accessor: 'workshopType'\n  }, {\n    Header: intl.formatMessage(messages.branch),\n    accessor: 'branch'\n  }, {\n    Header: intl.formatMessage(messages.salesRep),\n    accessor: 'salesRep'\n  }, {\n    Header: intl.formatMessage(messages.outstandingDays),\n    accessor: 'outstandingDays'\n  }, {\n    Header: intl.formatMessage(messages.totalOutstanding),\n    accessor: 'totalOutstanding',\n    Cell: _ref => {\n      let {\n        value\n      } = _ref;\n      return getMoneyFormat(value);\n    }\n  }, {\n    Header: intl.formatMessage(messages.creditLimit),\n    accessor: 'creditLimit',\n    Cell: _ref2 => {\n      let {\n        value\n      } = _ref2;\n      return getMoneyFormat(value);\n    }\n  }, {\n    Header: intl.formatMessage(messages.criticalOutstanding),\n    accessor: 'criticalOutstanding',\n    Cell: _ref3 => {\n      let {\n        value\n      } = _ref3;\n      return getMoneyFormat(value);\n    }\n  }], []);\n  const groupedByBranchColumn = useMemo(() => [{\n    Header: intl.formatMessage(messages.sNo),\n    accessor: 'sno',\n    Cell: allData => {\n      var _allData$row2;\n\n      return /*#__PURE__*/_jsxDEV(Box, {\n        children: (allData === null || allData === void 0 ? void 0 : (_allData$row2 = allData.row) === null || _allData$row2 === void 0 ? void 0 : _allData$row2.index) + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 18\n      }, this);\n    }\n  }, {\n    Header: intl.formatMessage(messages.branchName),\n    accessor: 'branchName'\n  }, {\n    Header: intl.formatMessage(messages.totalCustomer),\n    accessor: 'customers',\n    Cell: _ref4 => {\n      let {\n        value\n      } = _ref4;\n      return /*#__PURE__*/_jsxDEV(Box, {\n        children: value === null || value === void 0 ? void 0 : value.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 18\n      }, this);\n    }\n  }, {\n    Header: intl.formatMessage(messages.totalOutstanding),\n    accessor: 'totalOutstanding',\n    Cell: _ref5 => {\n      let {\n        value\n      } = _ref5;\n      return getMoneyFormat(value);\n    }\n  }, {\n    Header: intl.formatMessage(messages.creditLimit),\n    accessor: 'creditLimit',\n    Cell: _ref6 => {\n      let {\n        value\n      } = _ref6;\n      return getMoneyFormat(value);\n    }\n  }, {\n    Header: intl.formatMessage(messages.criticalOutstanding),\n    accessor: 'criticalOutstanding',\n    Cell: _ref7 => {\n      let {\n        value\n      } = _ref7;\n      return getMoneyFormat(value);\n    }\n  }], []);\n  const groupedBySalesColumn = useMemo(() => [{\n    Header: intl.formatMessage(messages.sNo),\n    accessor: 'sno',\n    Cell: allData => {\n      var _allData$row3;\n\n      return /*#__PURE__*/_jsxDEV(Box, {\n        children: (allData === null || allData === void 0 ? void 0 : (_allData$row3 = allData.row) === null || _allData$row3 === void 0 ? void 0 : _allData$row3.index) + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 18\n      }, this);\n    }\n  }, {\n    Header: intl.formatMessage(messages.salesRep),\n    accessor: 'salesRep'\n  }, {\n    Header: intl.formatMessage(messages.totalCustomer),\n    accessor: 'customers',\n    Cell: _ref8 => {\n      let {\n        value\n      } = _ref8;\n      return /*#__PURE__*/_jsxDEV(Box, {\n        children: value === null || value === void 0 ? void 0 : value.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 18\n      }, this);\n    }\n  }, {\n    Header: intl.formatMessage(messages.totalOutstanding),\n    accessor: 'totalOutstanding',\n    Cell: _ref9 => {\n      let {\n        value\n      } = _ref9;\n      return getMoneyFormat(value);\n    }\n  }, {\n    Header: intl.formatMessage(messages.creditLimit),\n    accessor: 'creditLimit',\n    Cell: _ref10 => {\n      let {\n        value\n      } = _ref10;\n      return getMoneyFormat(value);\n    }\n  }, {\n    Header: intl.formatMessage(messages.criticalOutstanding),\n    accessor: 'criticalOutstanding',\n    Cell: _ref11 => {\n      let {\n        value\n      } = _ref11;\n      return getMoneyFormat(value);\n    }\n  }], []);\n  const groupedByCustomerColumn = useMemo(() => [{\n    Header: intl.formatMessage(messages.sNo),\n    accessor: 'sno',\n    Cell: allData => {\n      var _allData$row4;\n\n      return /*#__PURE__*/_jsxDEV(Box, {\n        children: (allData === null || allData === void 0 ? void 0 : (_allData$row4 = allData.row) === null || _allData$row4 === void 0 ? void 0 : _allData$row4.index) + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 18\n      }, this);\n    }\n  }, {\n    Header: intl.formatMessage(messages.workshopType),\n    accessor: 'workshopType'\n  }, {\n    Header: intl.formatMessage(messages.totalCustomer),\n    accessor: 'customers',\n    Cell: _ref12 => {\n      let {\n        value\n      } = _ref12;\n      return /*#__PURE__*/_jsxDEV(Box, {\n        children: value === null || value === void 0 ? void 0 : value.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 18\n      }, this);\n    }\n  }, {\n    Header: intl.formatMessage(messages.totalOutstanding),\n    accessor: 'totalOutstanding',\n    Cell: _ref13 => {\n      let {\n        value\n      } = _ref13;\n      return getMoneyFormat(value);\n    }\n  }, {\n    Header: intl.formatMessage(messages.creditLimit),\n    accessor: 'creditLimit',\n    Cell: _ref14 => {\n      let {\n        value\n      } = _ref14;\n      return getMoneyFormat(value);\n    }\n  }, {\n    Header: intl.formatMessage(messages.criticalOutstanding),\n    accessor: 'criticalOutstanding',\n    Cell: _ref15 => {\n      let {\n        value\n      } = _ref15;\n      return getMoneyFormat(value);\n    }\n  }], []);\n\n  const handleTableTopChange = async (e, name) => {\n    setTableLoading(true);\n    let value = e.hasOwnProperty('target') ? e.target.value : e;\n\n    if (name === 'start') {\n      value = moment(value).format('YYYY-MM-DD');\n    } else if (name === 'end') {\n      value = moment(value).add(1, 'days').format('YYYY-MM-DD');\n    }\n\n    setInputValue(prevState => ({ ...prevState,\n      [name]: typeof value !== 'object' ? value : value.value === 'none' ? '' : value.value\n    }));\n\n    try {\n      await dispatcher(fetchAllOutstanding({\n        auth,\n        params: { ...inputValues,\n          [name]: typeof value !== 'object' ? value : value.value === 'none' ? '' : value.value\n        }\n      }));\n      setTableLoading(false);\n    } catch (error) {\n      setTableLoading(false);\n    }\n  };\n\n  const activeColumn = useMemo(() => {\n    return (inputValues === null || inputValues === void 0 ? void 0 : inputValues.groupBy) === 'branch' ? groupedByBranchColumn : (inputValues === null || inputValues === void 0 ? void 0 : inputValues.groupBy) === 'salesRep' ? groupedBySalesColumn : (inputValues === null || inputValues === void 0 ? void 0 : inputValues.groupBy) === 'workshopType' ? groupedByCustomerColumn : columns;\n  }, [inputValues === null || inputValues === void 0 ? void 0 : inputValues.groupBy]);\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: path,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        minHeight: \"80vh\",\n        children: [/*#__PURE__*/_jsxDEV(ModifiedTableTop, {\n          inputData: inputData,\n          onChange: handleTableTopChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DynamicTable, {\n          columns: activeColumn,\n          data: outstandingAcctList,\n          fetchData: () => console.log('...fetching'),\n          skipPageReset: true,\n          loading: tableLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${path}/:id/outstandings`,\n      children: /*#__PURE__*/_jsxDEV(WorkshopOutstandingAcct, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 330,\n    columnNumber: 5\n  }, this);\n};\n/* const EmptyRating = () => (\r\n  <div style={{width: '1.3vw', height: '1.3vw', borderRadius: '50%', backgroundColor: 'white'}}/>   \r\n)\r\n\r\nconst FilledRating = () =>  (\r\n  <div style={{width: '1.3vw', height: '1.3vw', borderRadius: '50%', backgroundColor: 'purple'}}/>   \r\n)\r\n\r\nconst RatingComp = () => {\r\n  \r\n  const getRating = (rate) => {\r\n      const emptyRatingList = [];\r\n\r\n      while(emptyRatingList.length < 5){\r\n          emptyRatingList.push(<EmptyRating/>)\r\n      }\r\n\r\n      return emptyRatingList.fill(<FilledRating/>,0, rate);\r\n  }\r\n\r\n  return (\r\n      <div style={{backgroundColor: 'black', display:'flex'}}>\r\n          {getRating(4)}\r\n      </div>\r\n  )\r\n} */\n\n\n_s(OutstandingAcct, \"FA68pj5Sx2QHYI79y+ISKdwzvdU=\", false, function () {\n  return [useIntl, useSelector, useSelector, useDispatch, useRouteMatch];\n});\n\n_c = OutstandingAcct;\nexport default OutstandingAcct;\n\nvar _c;\n\n$RefreshReg$(_c, \"OutstandingAcct\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/containers/OutstandingAccount/index.js"],"names":["React","useMemo","useState","useEffect","Layout","DynamicTable","useIntl","Box","Menu","MenuButton","Center","MenuList","Button","MenuItem","Link","ModifiedTableTop","enums","FiMoreVertical","fetchAllOutstanding","selectOutsandingAcct","useSelector","useDispatch","useRouteMatch","ReactLink","Switch","Route","moment","messages","WorkshopOutstandingAcct","getMoneyFormat","OutstandingAcct","props","inputValues","setInputValue","start","startOf","format","end","add","intl","isLoading","setIsLoading","auth","state","outstandingAcctList","dispatcher","url","path","tableLoading","setTableLoading","params","inputData","title","formatMessage","accountDetailSearch","type","placeholder","name","groupBy","options","value","label","branch","salesRep","workshopType","date","defaultValue","columns","Header","sNo","accessor","Cell","allData","row","index","workshopName","original","workshopId","outstandingDays","totalOutstanding","creditLimit","criticalOutstanding","groupedByBranchColumn","branchName","totalCustomer","length","groupedBySalesColumn","groupedByCustomerColumn","handleTableTopChange","e","hasOwnProperty","target","prevState","error","activeColumn","console","log"],"mappings":"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","sourcesContent":["import React, { useMemo, useState, useEffect } from 'react';\r\nimport Layout from '../Layout';\r\nimport DynamicTable from '../../components/DynamicTable';\r\nimport { useIntl } from 'react-intl';\r\nimport {\r\n  Box,\r\n  Menu,\r\n  MenuButton,\r\n  Center,\r\n  MenuList,\r\n  Button,\r\n  MenuItem,\r\n  Link,\r\n} from '@chakra-ui/react';\r\nimport ModifiedTableTop from '../../components/TableTop/ModifiedTableTop';\r\nimport enums from '../../utils/enums';\r\nimport { FiMoreVertical } from 'react-icons/fi';\r\nimport { fetchAllOutstanding, selectOutsandingAcct } from './slice';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  useRouteMatch,\r\n  Link as ReactLink,\r\n  Switch,\r\n  Route,\r\n} from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport messages from './message';\r\nimport WorkshopOutstandingAcct from './WorkshopOutstandingAcct';\r\nimport getMoneyFormat from '../../utils/getMoneyFormat';\r\n\r\n\r\nconst OutstandingAcct = (props) => {\r\n  const [inputValues, setInputValue] = useState({\r\n    start: moment().startOf('month').format('YYYY-MM-DD'),\r\n    end: moment().add(1, 'days').format('YYYY-MM-DD'),\r\n  });\r\n  const intl = useIntl();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const auth = useSelector((state) => state.auth);\r\n  const { outstandingAcctList } = useSelector(selectOutsandingAcct);\r\n  const dispatcher = useDispatch();\r\n  const { url, path } = useRouteMatch();\r\n  const [tableLoading, setTableLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setTableLoading(true);\r\n      await dispatcher(\r\n        fetchAllOutstanding({ auth, params: { } }),\r\n      );\r\n      setTableLoading(false);\r\n    })();\r\n  }, []);\r\n\r\n  const inputData = useMemo(\r\n    () => [\r\n      {\r\n        title: intl.formatMessage(messages.accountDetailSearch),\r\n        type: 'text',\r\n        placeholder: '',\r\n        name: 'searchAccount',\r\n      },\r\n      {\r\n        title: intl.formatMessage(messages.groupBy),\r\n        type: 'select',\r\n        placeholder: 'Select option',\r\n        name: 'groupBy',\r\n        options: [\r\n          {\r\n            value: 'none',\r\n            label: 'None',\r\n          },\r\n          {\r\n            value: 'branch',\r\n            label: intl.formatMessage(messages.branch),\r\n          },\r\n          {\r\n            value: 'salesRep',\r\n            label: intl.formatMessage(messages.salesRep),\r\n          },\r\n          {\r\n            value: 'workshopType',\r\n            label: intl.formatMessage(messages.workshopType),\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        title: intl.formatMessage(messages.date),\r\n        type: 'date',\r\n        placeholder: 'Enter order No',\r\n        name: ['start', 'end'],\r\n        defaultValue: [moment().startOf('month').format('YYYY-MM-DD'), moment().format('YYYY-MM-DD')]\r\n      },\r\n    ],\r\n    [],\r\n  );\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: intl.formatMessage(messages.sNo),\r\n        accessor: 'sno',\r\n        Cell: (allData) => {\r\n          return <Box>{allData?.row?.index + 1}</Box>;\r\n        },\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.workshopName),\r\n        accessor: 'workshopName',\r\n        Cell: (allData) => {\r\n          return (\r\n            <Link\r\n              as={ReactLink}\r\n              to={`${url}/${allData.row.original.workshopId}/outstandings`}\r\n            >\r\n              {allData.value}\r\n            </Link>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        Header: 'Workshop Code',\r\n        accessor: 'code',\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.workshopType),\r\n        accessor: 'workshopType',\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.branch),\r\n        accessor: 'branch',\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.salesRep),\r\n        accessor: 'salesRep',\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.outstandingDays),\r\n        accessor: 'outstandingDays',\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.totalOutstanding),\r\n        accessor: 'totalOutstanding',\r\n        Cell: ({value}) => getMoneyFormat(value)\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.creditLimit),\r\n        accessor: 'creditLimit',\r\n        Cell: ({value}) => getMoneyFormat(value)\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.criticalOutstanding),\r\n        accessor: 'criticalOutstanding',\r\n        Cell: ({value}) => getMoneyFormat(value)\r\n      },\r\n    ],\r\n    [],\r\n  );\r\n\r\n  const groupedByBranchColumn = useMemo(\r\n    () => [\r\n      {\r\n        Header: intl.formatMessage(messages.sNo),\r\n        accessor: 'sno',\r\n        Cell: (allData) => {\r\n          return <Box>{allData?.row?.index + 1}</Box>;\r\n        },\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.branchName),\r\n        accessor: 'branchName',\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.totalCustomer),\r\n        accessor: 'customers',\r\n        Cell: ({ value }) => {\r\n          return <Box>{value?.length}</Box>;\r\n        },\r\n      },\r\n\r\n      {\r\n        Header: intl.formatMessage(messages.totalOutstanding),\r\n        accessor: 'totalOutstanding',\r\n        Cell: ({value}) => getMoneyFormat(value)\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.creditLimit),\r\n        accessor: 'creditLimit',\r\n        Cell: ({value}) => getMoneyFormat(value)\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.criticalOutstanding),\r\n        accessor: 'criticalOutstanding',\r\n        Cell: ({value}) => getMoneyFormat(value)\r\n      }\r\n    ],\r\n    [],\r\n  );\r\n\r\n  const groupedBySalesColumn = useMemo(\r\n    () => [\r\n      {\r\n        Header: intl.formatMessage(messages.sNo),\r\n        accessor: 'sno',\r\n        Cell: (allData) => {\r\n          return <Box>{allData?.row?.index + 1}</Box>;\r\n        },\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.salesRep),\r\n        accessor: 'salesRep',\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.totalCustomer),\r\n        accessor: 'customers',\r\n        Cell: ({ value }) => {\r\n          return <Box>{value?.length}</Box>;\r\n        },\r\n      },\r\n\r\n      {\r\n        Header: intl.formatMessage(messages.totalOutstanding),\r\n        accessor: 'totalOutstanding',\r\n        Cell: ({value}) => getMoneyFormat(value)\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.creditLimit),\r\n        accessor: 'creditLimit',\r\n        Cell: ({value}) => getMoneyFormat(value)\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.criticalOutstanding),\r\n        accessor: 'criticalOutstanding',\r\n        Cell: ({value}) => getMoneyFormat(value)\r\n      },\r\n    ],\r\n    [],\r\n  );\r\n  const groupedByCustomerColumn = useMemo(\r\n    () => [\r\n      {\r\n        Header: intl.formatMessage(messages.sNo),\r\n        accessor: 'sno',\r\n        Cell: (allData) => {\r\n          return <Box>{allData?.row?.index + 1}</Box>;\r\n        },\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.workshopType),\r\n        accessor: 'workshopType',\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.totalCustomer),\r\n        accessor: 'customers',\r\n        Cell: ({ value }) => {\r\n          return <Box>{value?.length}</Box>;\r\n        },\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.totalOutstanding),\r\n        accessor: 'totalOutstanding',\r\n        Cell: ({value}) => getMoneyFormat(value)\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.creditLimit),\r\n        accessor: 'creditLimit',\r\n        Cell: ({value}) => getMoneyFormat(value)\r\n      },\r\n      {\r\n        Header: intl.formatMessage(messages.criticalOutstanding),\r\n        accessor: 'criticalOutstanding',\r\n        Cell: ({value}) => getMoneyFormat(value)\r\n      },\r\n    ],\r\n    [],\r\n  );\r\n\r\n  const handleTableTopChange = async (e, name) => {\r\n    setTableLoading(true);\r\n    let value = e.hasOwnProperty('target') ? e.target.value : e;\r\n    if (name === 'start') {\r\n      value = moment(value).format('YYYY-MM-DD');\r\n    }else if (name === 'end'){\r\n      value = moment(value).add(1, 'days').format('YYYY-MM-DD');\r\n    }\r\n\r\n    setInputValue((prevState) => ({\r\n      ...prevState,\r\n      [name]:\r\n        typeof value !== 'object'\r\n          ? value\r\n          : value.value === 'none'\r\n          ? ''\r\n          : value.value,\r\n    }));\r\n\r\n    try {\r\n      await dispatcher(\r\n        fetchAllOutstanding({\r\n          auth,\r\n          params: {\r\n            ...inputValues,\r\n            [name]:\r\n              typeof value !== 'object'\r\n                ? value\r\n                : value.value === 'none'\r\n                ? ''\r\n                : value.value,\r\n          },\r\n        }),\r\n      );\r\n\r\n      setTableLoading(false);\r\n    } catch (error) {\r\n      setTableLoading(false);\r\n    }\r\n  };\r\n\r\n  const activeColumn = useMemo(() => {\r\n    return inputValues?.groupBy === 'branch'\r\n      ? groupedByBranchColumn\r\n      : inputValues?.groupBy === 'salesRep'\r\n      ? groupedBySalesColumn\r\n      : inputValues?.groupBy === 'workshopType'\r\n      ? groupedByCustomerColumn\r\n      : columns;\r\n  }, [inputValues?.groupBy]);\r\n\r\n  return (\r\n    <Switch>\r\n      <Route exact path={path}>\r\n        <Box minHeight='80vh'>\r\n          <ModifiedTableTop\r\n            inputData={inputData}\r\n            onChange={handleTableTopChange}\r\n          />\r\n          <DynamicTable\r\n            columns={activeColumn}\r\n            data={outstandingAcctList}\r\n            fetchData={() => console.log('...fetching')}\r\n            skipPageReset={true}\r\n            loading={tableLoading}\r\n          />\r\n        </Box>\r\n      </Route>\r\n      <Route exact path={`${path}/:id/outstandings`}>\r\n        <WorkshopOutstandingAcct />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\n/* const EmptyRating = () => (\r\n  <div style={{width: '1.3vw', height: '1.3vw', borderRadius: '50%', backgroundColor: 'white'}}/>   \r\n)\r\n\r\nconst FilledRating = () =>  (\r\n  <div style={{width: '1.3vw', height: '1.3vw', borderRadius: '50%', backgroundColor: 'purple'}}/>   \r\n)\r\n\r\nconst RatingComp = () => {\r\n  \r\n  const getRating = (rate) => {\r\n      const emptyRatingList = [];\r\n\r\n      while(emptyRatingList.length < 5){\r\n          emptyRatingList.push(<EmptyRating/>)\r\n      }\r\n\r\n      return emptyRatingList.fill(<FilledRating/>,0, rate);\r\n  }\r\n\r\n  return (\r\n      <div style={{backgroundColor: 'black', display:'flex'}}>\r\n          {getRating(4)}\r\n      </div>\r\n  )\r\n} */\r\n\r\nexport default OutstandingAcct;\r\n"]},"metadata":{},"sourceType":"module"}