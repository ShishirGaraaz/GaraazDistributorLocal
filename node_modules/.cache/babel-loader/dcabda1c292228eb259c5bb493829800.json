{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Work\\\\garaaz-distributor\\\\src\\\\containers\\\\PartAddition\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { useIntl } from 'react-intl';\nimport { Stepper, Step } from 'react-form-stepper';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport { Button, Box } from '@chakra-ui/react';\nimport { useHistory } from 'react-router-dom';\nimport Layout from '../Layout';\nimport { isEmpty, isUndefined } from 'lodash';\nimport CategoryDetailsForm from '../../components/CategoryDetailsForm';\nimport PartDetailsForm from '../../components/PartDetailsForm/index';\nimport PackDetailsForm from '../../components/PackDetailsForm';\nimport ManufacturingDetailsForm from '../../components/ManufacturingDetailsForm';\nimport messages from './messages';\nimport { getPart } from './action';\nimport { useDropzone } from 'react-dropzone';\nimport { DropZoneStyle } from '../../utils/theme/DropZoneStyle';\nimport { publicAxios as axios } from '../../axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PartUpload = () => {\n  _s();\n\n  const [isEdit, setIsEdit] = useState(false);\n  const history = useHistory();\n  const {\n    partId: partid\n  } = useParams();\n  const intl = useIntl();\n  const [activeStep, setActiveStep] = useState(1);\n  const [currentPart, setCurrentPart] = useState({});\n  const auth = useSelector(state => state.auth);\n  const [incomplete, setIncomplete] = useState({\n    manufacturingDetails: false,\n    categoryDetails: false,\n    partDetails: false,\n    packDetails: false\n  });\n  const {\n    media,\n    status,\n    saleStatus,\n    origin,\n    _id,\n    manufacturerId,\n    category,\n    partNumber,\n    partName,\n    manufacturer,\n    description,\n    mrp,\n    sellingPrice,\n    hsnCode,\n    taxSlab\n  } = currentPart;\n  useEffect(() => {\n    if (isEmpty(manufacturer) && activeStep > 1) {\n      setIncomplete({ ...incomplete,\n        manufacturingDetails: true\n      });\n    }\n\n    if (isEmpty(category) && activeStep > 2) {\n      setIncomplete({ ...incomplete,\n        categoryDetails: true\n      });\n    }\n\n    if (isEmpty(partName) && activeStep > 3) {\n      setIncomplete({ ...incomplete,\n        partDetails: true\n      });\n    }\n  }, [activeStep]);\n\n  const fetchPart = async () => {\n    const {\n      pathname\n    } = history.location;\n\n    if (pathname !== '/part/add') {\n      setIsEdit(true);\n\n      try {\n        const response = await getPart(auth, partid);\n        response.category = Array.isArray(response.category) ? response.category.join(' ') : response.category;\n        setCurrentPart(response);\n      } catch (error) {\n        toast('Something went wrong, while getting part details!');\n      }\n    }\n  };\n\n  useEffect(() => {\n    fetchPart();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-0 p-6 pb-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center flex\",\n        style: {\n          height: '12.5%'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            alignSelf: 'flex-end',\n            display: activeStep === 1 ? 'block' : 'none',\n            marginLeft: 'auto'\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"bulkAdd\",\n            size: \"md\",\n            onClick: () => history.push('/part/add/bulk'),\n            children: intl.formatMessage(messages.bulkUpload)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full mb-0\",\n        children: /*#__PURE__*/_jsxDEV(Stepper, {\n          activeStep: activeStep,\n          styleConfig: {\n            completedBgColor: '#008000',\n            activeBgColor: '#1e293b'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Step, {\n            label: intl.formatMessage(messages.manufacturingDetails),\n            onClick: () => setActiveStep(1),\n            completed: !isEdit && !isUndefined(currentPart === null || currentPart === void 0 ? void 0 : currentPart.brand) || isEdit && !isUndefined(currentPart === null || currentPart === void 0 ? void 0 : currentPart.partmaster)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Step, {\n            label: intl.formatMessage(messages.categoryDetails),\n            onClick: () => (!isEdit && activeStep > 1 || isEdit) && setActiveStep(2),\n            completed: !isEdit && !isUndefined(currentPart === null || currentPart === void 0 ? void 0 : currentPart.partNumber) && !isUndefined(currentPart === null || currentPart === void 0 ? void 0 : currentPart.partName) && !isUndefined(currentPart === null || currentPart === void 0 ? void 0 : currentPart.mrp) && !isUndefined(currentPart === null || currentPart === void 0 ? void 0 : currentPart.taxSlab) && !isUndefined(currentPart === null || currentPart === void 0 ? void 0 : currentPart.hsnCode) || isEdit && !isUndefined(currentPart === null || currentPart === void 0 ? void 0 : currentPart.partmaster)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Step, {\n            label: intl.formatMessage(messages.packDetails),\n            onClick: () => (!isEdit && activeStep > 2 || isEdit) && setActiveStep(3),\n            completed: !isEdit && !isUndefined(currentPart === null || currentPart === void 0 ? void 0 : currentPart.origin) || isEdit && !isUndefined(currentPart === null || currentPart === void 0 ? void 0 : currentPart.partmaster)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), !isEdit && /*#__PURE__*/_jsxDEV(Step, {\n            label: intl.formatMessage(messages.partMedia),\n            onClick: () => isEdit && setActiveStep(4),\n            completed: isEdit && !isUndefined(currentPart === null || currentPart === void 0 ? void 0 : currentPart.partmaster)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-auto px-6 pb-6 pt-0\",\n        children: [activeStep === 1 && /*#__PURE__*/_jsxDEV(ManufacturingDetailsForm, {\n          setActiveStep: setActiveStep,\n          currentPart: currentPart,\n          setCurrentPart: setCurrentPart,\n          isEdit: isEdit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), activeStep === 2 && /*#__PURE__*/_jsxDEV(CategoryDetailsForm, {\n          setActiveStep: setActiveStep,\n          currentPart: currentPart,\n          setCurrentPart: setCurrentPart,\n          isEdit: isEdit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), activeStep === 3 && /*#__PURE__*/_jsxDEV(PackDetailsForm, {\n          setActiveStep: setActiveStep,\n          currentPart: currentPart,\n          setCurrentPart: setCurrentPart,\n          isEdit: isEdit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this), activeStep === 4 && /*#__PURE__*/_jsxDEV(PartDetailsForm, {\n          setActiveStep: setActiveStep,\n          currentPart: currentPart,\n          setCurrentPart: setCurrentPart,\n          isEdit: isEdit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(PartUpload, \"jpWeKdxQf8+At7DfT8LRy9xTENs=\", false, function () {\n  return [useHistory, useParams, useIntl, useSelector];\n});\n\n_c = PartUpload;\nexport default PartUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"PartUpload\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/containers/PartAddition/index.js"],"names":["React","useState","useEffect","useCallback","useMemo","useIntl","Stepper","Step","useSelector","useParams","toast","Button","Box","useHistory","Layout","isEmpty","isUndefined","CategoryDetailsForm","PartDetailsForm","PackDetailsForm","ManufacturingDetailsForm","messages","getPart","useDropzone","DropZoneStyle","publicAxios","axios","PartUpload","isEdit","setIsEdit","history","partId","partid","intl","activeStep","setActiveStep","currentPart","setCurrentPart","auth","state","incomplete","setIncomplete","manufacturingDetails","categoryDetails","partDetails","packDetails","media","status","saleStatus","origin","_id","manufacturerId","category","partNumber","partName","manufacturer","description","mrp","sellingPrice","hsnCode","taxSlab","fetchPart","pathname","location","response","Array","isArray","join","error","height","alignSelf","display","marginLeft","push","formatMessage","bulkUpload","completedBgColor","activeBgColor","brand","partmaster","partMedia"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport { Stepper, Step } from 'react-form-stepper';\r\nimport { useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport toast from 'react-hot-toast';\r\nimport { Button, Box } from '@chakra-ui/react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Layout from '../Layout';\r\nimport { isEmpty, isUndefined } from 'lodash';\r\nimport CategoryDetailsForm from '../../components/CategoryDetailsForm';\r\nimport PartDetailsForm from '../../components/PartDetailsForm/index';\r\nimport PackDetailsForm from '../../components/PackDetailsForm';\r\nimport ManufacturingDetailsForm from '../../components/ManufacturingDetailsForm';\r\nimport messages from './messages';\r\nimport { getPart } from './action';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { DropZoneStyle } from '../../utils/theme/DropZoneStyle';\r\nimport { publicAxios as axios } from '../../axios';\r\n\r\nconst PartUpload = () => {\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const history = useHistory();\r\n  const { partId: partid } = useParams();\r\n  const intl = useIntl();\r\n  const [activeStep, setActiveStep] = useState(1);\r\n  const [currentPart, setCurrentPart] = useState({});\r\n  const auth = useSelector((state) => state.auth);\r\n  const [incomplete, setIncomplete] = useState({\r\n    manufacturingDetails: false,\r\n    categoryDetails: false,\r\n    partDetails: false,\r\n    packDetails: false,\r\n  });\r\n\r\n\r\n  const {\r\n    media,\r\n    status,\r\n    saleStatus,\r\n    origin,\r\n    _id,\r\n    manufacturerId,\r\n    category,\r\n    partNumber,\r\n    partName,\r\n    manufacturer,\r\n    description,\r\n    mrp,\r\n    sellingPrice,\r\n    hsnCode,\r\n    taxSlab,\r\n  } = currentPart;\r\n\r\n  useEffect(() => {\r\n    if (isEmpty(manufacturer) && activeStep > 1) {\r\n      setIncomplete({ ...incomplete, manufacturingDetails: true });\r\n    }\r\n    if (isEmpty(category) && activeStep > 2) {\r\n      setIncomplete({ ...incomplete, categoryDetails: true });\r\n    }\r\n    if (isEmpty(partName) && activeStep > 3) {\r\n      setIncomplete({ ...incomplete, partDetails: true });\r\n    }\r\n  }, [activeStep]);\r\n\r\n  const fetchPart = async () => {\r\n    const { pathname } = history.location;\r\n    if (pathname !== '/part/add') {\r\n      setIsEdit(true);\r\n      try {\r\n        const response = await getPart(auth, partid);\r\n        response.category = Array.isArray(response.category)\r\n          ? response.category.join(' ')\r\n          : response.category;\r\n        setCurrentPart(response);\r\n      } catch (error) {\r\n        toast('Something went wrong, while getting part details!');\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchPart();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className='mb-0 p-6 pb-0'>\r\n        <div className='text-center flex' style={{ height: '12.5%' }}>\r\n          <div\r\n            style={{\r\n              alignSelf: 'flex-end',\r\n              display: activeStep === 1 ? 'block' : 'none',\r\n              marginLeft: 'auto',\r\n            }}\r\n          >\r\n            <Button\r\n              variant='bulkAdd'\r\n              size='md'\r\n              onClick={() => history.push('/part/add/bulk')}\r\n            >\r\n              {intl.formatMessage(messages.bulkUpload)}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='w-full mb-0'>\r\n          <Stepper\r\n            activeStep={activeStep}\r\n            styleConfig={{\r\n              completedBgColor: '#008000',\r\n              activeBgColor: '#1e293b',\r\n            }}\r\n          >\r\n            <Step\r\n              label={intl.formatMessage(messages.manufacturingDetails)}\r\n              onClick={() => setActiveStep(1)}\r\n              completed={\r\n                (!isEdit && !isUndefined(currentPart?.brand)) ||\r\n                (isEdit && !isUndefined(currentPart?.partmaster))\r\n              }\r\n            />\r\n            <Step\r\n              label={intl.formatMessage(messages.categoryDetails)}\r\n              onClick={() =>\r\n                ((!isEdit && activeStep > 1) || isEdit) && setActiveStep(2)\r\n              }\r\n              completed={\r\n                (!isEdit &&\r\n                  !isUndefined(currentPart?.partNumber) &&\r\n                  !isUndefined(currentPart?.partName) &&\r\n                  !isUndefined(currentPart?.mrp) &&\r\n                  !isUndefined(currentPart?.taxSlab) &&\r\n                  !isUndefined(currentPart?.hsnCode)) ||\r\n                (isEdit && !isUndefined(currentPart?.partmaster))\r\n              }\r\n            />\r\n\r\n            <Step\r\n              label={intl.formatMessage(messages.packDetails)}\r\n              onClick={() =>\r\n                ((!isEdit && activeStep > 2) || isEdit) && setActiveStep(3)\r\n              }\r\n              completed={\r\n                (!isEdit && !isUndefined(currentPart?.origin)) ||\r\n                (isEdit && !isUndefined(currentPart?.partmaster))\r\n              }\r\n            />\r\n            {!isEdit && (\r\n              <Step\r\n                label={intl.formatMessage(messages.partMedia)}\r\n                onClick={() => isEdit && setActiveStep(4)}\r\n                completed={isEdit && !isUndefined(currentPart?.partmaster)}\r\n              />\r\n            )}\r\n          </Stepper>\r\n        </div>\r\n        <div className='flex-auto px-6 pb-6 pt-0'>\r\n          {activeStep === 1 && (\r\n            <ManufacturingDetailsForm\r\n              setActiveStep={setActiveStep}\r\n              currentPart={currentPart}\r\n              setCurrentPart={setCurrentPart}\r\n              isEdit={isEdit}\r\n            />\r\n          )}\r\n          {activeStep === 2 && (\r\n            <CategoryDetailsForm\r\n              setActiveStep={setActiveStep}\r\n              currentPart={currentPart}\r\n              setCurrentPart={setCurrentPart}\r\n              isEdit={isEdit}\r\n            />\r\n          )}\r\n          {activeStep === 3 && (\r\n            <PackDetailsForm\r\n              setActiveStep={setActiveStep}\r\n              currentPart={currentPart}\r\n              setCurrentPart={setCurrentPart}\r\n              isEdit={isEdit}\r\n            />\r\n          )}\r\n          {activeStep === 4 && (\r\n            <PartDetailsForm\r\n              setActiveStep={setActiveStep}\r\n              currentPart={currentPart}\r\n              setCurrentPart={setCurrentPart}\r\n              isEdit={isEdit}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PartUpload;\r\n"]},"metadata":{},"sourceType":"module"}