{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Work\\\\garaaz-distributor\\\\src\\\\components\\\\SalesBulk\\\\salesUpload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState, useEffect, useCallback } from 'react';\nimport { Button, Select, Alert, AlertIcon, AlertTitle, AlertDescription, Box, Spinner, Flex } from '@chakra-ui/react';\nimport { useForm } from 'react-hook-form';\nimport { useDropzone } from 'react-dropzone';\nimport { useIntl } from 'react-intl';\nimport { Stepper, Step } from 'react-form-stepper';\nimport XLSX from 'xlsx';\nimport { useSelector, useDispatch } from 'react-redux';\nimport toast from 'react-hot-toast';\nimport messages from './messages';\nimport { publicAxios as axios } from '../../axios';\nimport _ from 'lodash';\nimport { sheetValidation, requiredFields } from './helper';\nimport { useHistory } from 'react-router';\nimport withToast from '../../HOCs/withToast';\nimport { uploadBulkSales, getAllSales, addSingleQueue } from '../../containers/Sales/slice';\nimport { uploadSalesMedia, AddToQueue } from '../../containers/Sales/service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst baseStyle = {\n  flex: 1,\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  padding: '20px',\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: '#eeeeee',\n  borderStyle: 'dashed',\n  backgroundColor: '#fafafa',\n  color: '#bdbdbd',\n  outline: 'none',\n  transition: 'border .24s ease-in-out',\n  cursor: 'pointer'\n};\nconst activeStyle = {\n  borderColor: '#2196f3'\n};\nconst acceptStyle = {\n  borderColor: '#00e676'\n};\nconst rejectStyle = {\n  borderColor: '#ff1744'\n};\n\nconst SalesBulk = _ref => {\n  _s();\n\n  let {\n    notification\n  } = _ref;\n  const auth = useSelector(state => state.auth);\n  const [errorMessage, setErrorMessage] = useState('');\n  const dispatcher = useDispatch();\n  const [loading, setLoading] = useState(false);\n  const [importedFile, setImportedFile] = useState(null);\n  const [importing, setImporting] = useState(false);\n  const [uploading, setUploading] = useState(false);\n  const [activeStep, setActiveStep] = useState(1);\n  const acceptedSalesOnboardHeaders = useSelector(state => state.app.acceptedSalesOnboardHeaders);\n  const {\n    register,\n    formState: {\n      errors\n    },\n    handleSubmit,\n    reset\n  } = useForm({\n    mode: 'onSubmit'\n  });\n  const history = useHistory();\n  const intl = useIntl();\n  const onDrop = useCallback(acceptedFiles => {\n    try {\n      if (acceptedFiles.length > 0) {\n        setImporting(true);\n        const reader = new FileReader();\n\n        reader.onload = evt => {\n          const bstr = evt.target.result;\n          const wb = XLSX.read(bstr, {\n            type: 'binary',\n            sheetRows: 1\n          });\n          const wsname = wb.SheetNames[0];\n          const ws = wb.Sheets[wsname];\n          const jsonData = XLSX.utils.sheet_to_json(ws, {\n            header: 1,\n            defval: '',\n            blankrows: true\n          });\n\n          if (!jsonData.length) {\n            return Promise.reject('Either sheets is empty or the sheet is corrupted.');\n          } else {\n            setImportedFile(jsonData);\n          }\n\n          setImporting(false);\n        };\n\n        reader.readAsBinaryString(acceptedFiles[0]);\n      }\n    } catch (error) {\n      console.log(error);\n      notification({\n        status: 'error',\n        title: 'Import Error',\n        description: error !== null && error !== void 0 ? error : 'Unable to import file'\n      });\n    }\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject,\n    acceptedFiles,\n    inputRef\n  } = useDropzone({\n    accept: 'text/csv,application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n    maxFiles: 1,\n    noKeyboard: true,\n    onDrop\n  });\n  useEffect(() => {\n    if (errorMessage) {\n      toast(errorMessage);\n    }\n  }, [errorMessage]);\n  const style = useMemo(() => ({ ...baseStyle,\n    ...(isDragActive ? activeStyle : {}),\n    ...(isDragAccept ? acceptStyle : {}),\n    ...(isDragReject ? rejectStyle : {})\n  }), [isDragActive, isDragReject, isDragAccept]);\n\n  const handleUpload = async data => {\n    if (activeStep === 1) {\n      setActiveStep(2);\n      return;\n    }\n    /*   event.preventDefault(); */\n\n    /* const data = event.target.value */\n\n\n    try {\n      const newJsonData = Object.fromEntries(Object.entries(data).map((_ref2, index) => {\n        let [key, value] = _ref2;\n\n        if (value) {\n          return [[value], index];\n        } else {\n          return [[key], index];\n        }\n      }));\n\n      if (importedFile) {\n        setUploading(true);\n        const newJsonData = importedFile[0].map((item, index) => ({\n          [item]: index\n        }));\n        const formData = new FormData();\n        acceptedFiles.forEach(file => formData.append('media', file, file.name));\n        const mediaResult = await uploadSalesMedia({\n          data: formData,\n          auth\n        });\n        const data = {\n          mediaId: mediaResult === null || mediaResult === void 0 ? void 0 : mediaResult.data[0]._id,\n          headers: newJsonData,\n          module: 'SALE'\n        };\n        const response = await AddToQueue({\n          data,\n          auth\n        });\n        dispatcher(addSingleQueue(response.data));\n        notification({\n          status: 'success',\n          title: 'File Uploaded Successfully',\n          description: 'File was successfully uploaded and presently undergoing processing'\n        });\n        history.push('/sales');\n        setUploading(false);\n      }\n    } catch (error) {\n      setUploading(false);\n      notification({\n        status: 'error',\n        title: 'File upload failed',\n        description: error.response ? error.response.data : 'Unable to upload file, please try again'\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full mb-3\",\n      children: /*#__PURE__*/_jsxDEV(Stepper, {\n        styleConfig: {\n          completedBgColor: '#1e293b',\n          activeBgColor: '#da0032'\n        },\n        activeStep: activeStep,\n        children: [/*#__PURE__*/_jsxDEV(Step, {\n          label: \"File Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Step, {\n          label: \"Field Mappings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 6\n    }, this), activeStep === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full px-4 lg:w-full mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        w: \"100%\",\n        mb: 10,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          status: \"info\",\n          children: [/*#__PURE__*/_jsxDEV(AlertIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AlertDescription, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Download a sample file from here \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              style: {\n                fontWeight: 'bold'\n              },\n              href: 'https://docs.google.com/uc?id=16S3A9MCgWbhPWaSA-ZH5bvyumi31waGI&export=download',\n              download: \"Accounts sample File\",\n              children: \"Download File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1\",\n          children: \"Sales Detail Document\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"center\",\n          children: [(importing || uploading) && /*#__PURE__*/_jsxDEV(Spinner, {\n            size: \"sm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 42\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            ml: \"2\",\n            children: importing ? 'Importing file' : uploading ? 'Uploading file' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative w-full\",\n        ...getRootProps({\n          style,\n          className: 'dropzone'\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), isDragActive && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: intl.formatMessage(messages.dropFileHere)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 28\n        }, this), !acceptedFiles || acceptedFiles.length === 0 && !isDragActive && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: intl.formatMessage(messages.dragAndDropMessage)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 15\n        }, this), acceptedFiles && acceptedFiles.length > 0 && !isDragActive && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"far fa-file fa-2x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: acceptedFiles[0].path\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 29\n    }, this), activeStep === 2 && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(handleUpload),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"space-between\",\n        children: acceptedSalesOnboardHeaders.map(header => {\n          var _importedFile$0$find;\n\n          return /*#__PURE__*/_jsxDEV(Box, {\n            width: \"48%\",\n            mb: 5,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative w-full mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1\",\n                children: header\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, { ...register(`${header}`, {\n                  required: requiredFields.includes(header)\n                }),\n                defaultValue: (_importedFile$0$find = importedFile[0].find(actualHeader => `${actualHeader}`.toLowerCase().indexOf(`${header}`.toLowerCase()) !== -1)) !== null && _importedFile$0$find !== void 0 ? _importedFile$0$find : 'No value',\n                placeholder: \"Select a value\",\n                children: importedFile[0].map(actualHeader => /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: actualHeader\n                }, actualHeader, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 19\n              }, this), errors && errors[header] && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-youtube-regular text-sm\",\n                children: header\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 17\n            }, this)\n          }, header, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bulkButtonsContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        isLoading: uploading,\n        onClick: handleSubmit(handleUpload),\n        style: {\n          backgroundColor: '#1e293b',\n          color: '#ffffff',\n          marginLeft: '10px'\n        },\n        isDisabled: !importedFile,\n        loadingText: \"Uploading\",\n        children: activeStep === 1 ? 'Next' : 'Submit'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"clrBtn\",\n        type: \"reset\",\n        onClick: () => {\n          acceptedFiles.length = 0;\n          acceptedFiles.splice(0, acceptedFiles.length);\n          setImportedFile(null);\n          setActiveStep(1);\n          reset({}, {\n            keepDirty: false,\n            keepErrors: false,\n            keepValues: false\n          });\n        },\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SalesBulk, \"bhnAKyiGpiyV2/U044wXzsKbXBY=\", false, function () {\n  return [useSelector, useDispatch, useSelector, useForm, useHistory, useIntl, useDropzone];\n});\n\n_c = SalesBulk;\nexport default _c2 = withToast(SalesBulk);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SalesBulk\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/components/SalesBulk/salesUpload.js"],"names":["React","useMemo","useState","useEffect","useCallback","Button","Select","Alert","AlertIcon","AlertTitle","AlertDescription","Box","Spinner","Flex","useForm","useDropzone","useIntl","Stepper","Step","XLSX","useSelector","useDispatch","toast","messages","publicAxios","axios","_","sheetValidation","requiredFields","useHistory","withToast","uploadBulkSales","getAllSales","addSingleQueue","uploadSalesMedia","AddToQueue","baseStyle","flex","display","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","color","outline","transition","cursor","activeStyle","acceptStyle","rejectStyle","SalesBulk","notification","auth","state","errorMessage","setErrorMessage","dispatcher","loading","setLoading","importedFile","setImportedFile","importing","setImporting","uploading","setUploading","activeStep","setActiveStep","acceptedSalesOnboardHeaders","app","register","formState","errors","handleSubmit","reset","mode","history","intl","onDrop","acceptedFiles","length","reader","FileReader","onload","evt","bstr","target","result","wb","read","type","sheetRows","wsname","SheetNames","ws","Sheets","jsonData","utils","sheet_to_json","header","defval","blankrows","Promise","reject","readAsBinaryString","error","console","log","status","title","description","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","inputRef","accept","maxFiles","noKeyboard","style","handleUpload","data","newJsonData","Object","fromEntries","entries","map","index","key","value","item","formData","FormData","forEach","file","append","name","mediaResult","mediaId","_id","headers","module","response","push","completedBgColor","activeBgColor","fontWeight","className","formatMessage","dropFileHere","dragAndDropMessage","path","required","includes","find","actualHeader","toLowerCase","indexOf","marginLeft","splice","keepDirty","keepErrors","keepValues"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,EAAyBC,QAAzB,EAAmCC,SAAnC,EAA8CC,WAA9C,QAAiE,OAAjE;AACA,SACEC,MADF,EAEEC,MAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,UALF,EAMEC,gBANF,EAOEC,GAPF,EAQEC,OARF,EASEC,IATF,QAUO,kBAVP;AAWA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,OAAT,EAAkBC,IAAlB,QAA8B,oBAA9B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,WAAW,IAAIC,KAAxB,QAAqC,aAArC;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,eAAT,EAA0BC,cAA1B,QAAgD,UAAhD;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,SACEC,eADF,EAEEC,WAFF,EAGEC,cAHF,QAIO,8BAJP;AAKA,SAASC,gBAAT,EAA2BC,UAA3B,QAA6C,gCAA7C;;;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,IAAI,EAAE,CADU;AAEhBC,EAAAA,OAAO,EAAE,MAFO;AAGhBC,EAAAA,aAAa,EAAE,QAHC;AAIhBC,EAAAA,UAAU,EAAE,QAJI;AAKhBC,EAAAA,OAAO,EAAE,MALO;AAMhBC,EAAAA,WAAW,EAAE,CANG;AAOhBC,EAAAA,YAAY,EAAE,CAPE;AAQhBC,EAAAA,WAAW,EAAE,SARG;AAShBC,EAAAA,WAAW,EAAE,QATG;AAUhBC,EAAAA,eAAe,EAAE,SAVD;AAWhBC,EAAAA,KAAK,EAAE,SAXS;AAYhBC,EAAAA,OAAO,EAAE,MAZO;AAahBC,EAAAA,UAAU,EAAE,yBAbI;AAchBC,EAAAA,MAAM,EAAE;AAdQ,CAAlB;AAiBA,MAAMC,WAAW,GAAG;AAClBP,EAAAA,WAAW,EAAE;AADK,CAApB;AAIA,MAAMQ,WAAW,GAAG;AAClBR,EAAAA,WAAW,EAAE;AADK,CAApB;AAIA,MAAMS,WAAW,GAAG;AAClBT,EAAAA,WAAW,EAAE;AADK,CAApB;;AAIA,MAAMU,SAAS,GAAG,QAAsB;AAAA;;AAAA,MAArB;AAAEC,IAAAA;AAAF,GAAqB;AACtC,QAAMC,IAAI,GAAGpC,WAAW,CAAEqC,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB;AACA,QAAM,CAACE,YAAD,EAAeC,eAAf,IAAkCzD,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM0D,UAAU,GAAGvC,WAAW,EAA9B;AACA,QAAM,CAACwC,OAAD,EAAUC,UAAV,IAAwB5D,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAAC6D,YAAD,EAAeC,eAAf,IAAkC9D,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAAC+D,SAAD,EAAYC,YAAZ,IAA4BhE,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACiE,SAAD,EAAYC,YAAZ,IAA4BlE,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACmE,UAAD,EAAaC,aAAb,IAA8BpE,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAMqE,2BAA2B,GAAGnD,WAAW,CAC5CqC,KAAD,IAAWA,KAAK,CAACe,GAAN,CAAUD,2BADwB,CAA/C;AAIA,QAAM;AACJE,IAAAA,QADI;AAEJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF,KAFP;AAGJC,IAAAA,YAHI;AAIJC,IAAAA;AAJI,MAKF/D,OAAO,CAAC;AACVgE,IAAAA,IAAI,EAAE;AADI,GAAD,CALX;AAQA,QAAMC,OAAO,GAAGlD,UAAU,EAA1B;AACA,QAAMmD,IAAI,GAAGhE,OAAO,EAApB;AAEA,QAAMiE,MAAM,GAAG7E,WAAW,CAAE8E,aAAD,IAAmB;AAC5C,QAAI;AACF,UAAIA,aAAa,CAACC,MAAd,GAAuB,CAA3B,EAA8B;AAC5BjB,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,cAAMkB,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,QAAAA,MAAM,CAACE,MAAP,GAAiBC,GAAD,IAAS;AACvB,gBAAMC,IAAI,GAAGD,GAAG,CAACE,MAAJ,CAAWC,MAAxB;AACA,gBAAMC,EAAE,GAAGxE,IAAI,CAACyE,IAAL,CAAUJ,IAAV,EAAgB;AAAEK,YAAAA,IAAI,EAAE,QAAR;AAAkBC,YAAAA,SAAS,EAAE;AAA7B,WAAhB,CAAX;AACA,gBAAMC,MAAM,GAAGJ,EAAE,CAACK,UAAH,CAAc,CAAd,CAAf;AACA,gBAAMC,EAAE,GAAGN,EAAE,CAACO,MAAH,CAAUH,MAAV,CAAX;AACA,gBAAMI,QAAQ,GAAGhF,IAAI,CAACiF,KAAL,CAAWC,aAAX,CAAyBJ,EAAzB,EAA6B;AAC5CK,YAAAA,MAAM,EAAE,CADoC;AAE5CC,YAAAA,MAAM,EAAE,EAFoC;AAG5CC,YAAAA,SAAS,EAAE;AAHiC,WAA7B,CAAjB;;AAMA,cAAI,CAACL,QAAQ,CAAChB,MAAd,EAAsB;AACpB,mBAAOsB,OAAO,CAACC,MAAR,CACL,mDADK,CAAP;AAGD,WAJD,MAIO;AACL1C,YAAAA,eAAe,CAACmC,QAAD,CAAf;AACD;;AAEDjC,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,SApBD;;AAqBAkB,QAAAA,MAAM,CAACuB,kBAAP,CAA0BzB,aAAa,CAAC,CAAD,CAAvC;AACD;AACF,KA3BD,CA2BE,OAAO0B,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACArD,MAAAA,YAAY,CAAC;AACXwD,QAAAA,MAAM,EAAE,OADG;AAEXC,QAAAA,KAAK,EAAE,cAFI;AAGXC,QAAAA,WAAW,EAAEL,KAAF,aAAEA,KAAF,cAAEA,KAAF,GAAW;AAHX,OAAD,CAAZ;AAKD;AACF,GApCyB,EAoCvB,EApCuB,CAA1B;AAsCA,QAAM;AACJM,IAAAA,YADI;AAEJC,IAAAA,aAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA,YAJI;AAKJC,IAAAA,YALI;AAMJpC,IAAAA,aANI;AAOJqC,IAAAA;AAPI,MAQFxG,WAAW,CAAC;AACdyG,IAAAA,MAAM,EACJ,qGAFY;AAGdC,IAAAA,QAAQ,EAAE,CAHI;AAIdC,IAAAA,UAAU,EAAE,IAJE;AAKdzC,IAAAA;AALc,GAAD,CARf;AAgBA9E,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIuD,YAAJ,EAAkB;AAChBpC,MAAAA,KAAK,CAACoC,YAAD,CAAL;AACD;AACF,GAJQ,EAIN,CAACA,YAAD,CAJM,CAAT;AAMA,QAAMiE,KAAK,GAAG1H,OAAO,CACnB,OAAO,EACL,GAAGmC,SADE;AAEL,QAAIgF,YAAY,GAAGjE,WAAH,GAAiB,EAAjC,CAFK;AAGL,QAAIkE,YAAY,GAAGjE,WAAH,GAAiB,EAAjC,CAHK;AAIL,QAAIkE,YAAY,GAAGjE,WAAH,GAAiB,EAAjC;AAJK,GAAP,CADmB,EAOnB,CAAC+D,YAAD,EAAeE,YAAf,EAA6BD,YAA7B,CAPmB,CAArB;;AAUA,QAAMO,YAAY,GAAG,MAAOC,IAAP,IAAgB;AACjC,QAAGxD,UAAU,KAAK,CAAlB,EAAoB;AAChBC,MAAAA,aAAa,CAAC,CAAD,CAAb;AACA;AACH;AAEH;;AAEE;;;AACF,QAAI;AACA,YAAMwD,WAAW,GAAGC,MAAM,CAACC,WAAP,CAAmBD,MAAM,CAACE,OAAP,CAAeJ,IAAf,EAAqBK,GAArB,CAAyB,QAAeC,KAAf,KAAyB;AAAA,YAAxB,CAACC,GAAD,EAAMC,KAAN,CAAwB;;AACrF,YAAGA,KAAH,EAAS;AACL,iBAAO,CAAC,CAACA,KAAD,CAAD,EAAUF,KAAV,CAAP;AACH,SAFD,MAEK;AACD,iBAAQ,CAAC,CAACC,GAAD,CAAD,EAAQD,KAAR,CAAR;AACH;AACJ,OANsC,CAAnB,CAApB;;AAQF,UAAIpE,YAAJ,EAAkB;AAChBK,QAAAA,YAAY,CAAC,IAAD,CAAZ;AAEA,cAAM0D,WAAW,GAAG/D,YAAY,CAAC,CAAD,CAAZ,CAAgBmE,GAAhB,CAAoB,CAACI,IAAD,EAAOH,KAAP,MAAkB;AACxD,WAACG,IAAD,GAAQH;AADgD,SAAlB,CAApB,CAApB;AAIA,cAAMI,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AAEAtD,QAAAA,aAAa,CAACuD,OAAd,CAAuBC,IAAD,IACpBH,QAAQ,CAACI,MAAT,CAAgB,OAAhB,EAAyBD,IAAzB,EAA+BA,IAAI,CAACE,IAApC,CADF;AAGA,cAAMC,WAAW,GAAG,MAAM3G,gBAAgB,CAAC;AACzC2F,UAAAA,IAAI,EAAEU,QADmC;AAEzC/E,UAAAA;AAFyC,SAAD,CAA1C;AAMA,cAAMqE,IAAI,GAAG;AACXiB,UAAAA,OAAO,EAAED,WAAF,aAAEA,WAAF,uBAAEA,WAAW,CAAEhB,IAAb,CAAkB,CAAlB,EAAqBkB,GADnB;AAEXC,UAAAA,OAAO,EAAElB,WAFE;AAGXmB,UAAAA,MAAM,EAAE;AAHG,SAAb;AAMA,cAAMC,QAAQ,GAAG,MAAM/G,UAAU,CAAC;AAAE0F,UAAAA,IAAF;AAAQrE,UAAAA;AAAR,SAAD,CAAjC;AAEAI,QAAAA,UAAU,CAAC3B,cAAc,CAACiH,QAAQ,CAACrB,IAAV,CAAf,CAAV;AAEAtE,QAAAA,YAAY,CAAC;AACXwD,UAAAA,MAAM,EAAE,SADG;AAEXC,UAAAA,KAAK,EAAE,4BAFI;AAGXC,UAAAA,WAAW,EACT;AAJS,SAAD,CAAZ;AAOAlC,QAAAA,OAAO,CAACoE,IAAR,CAAa,QAAb;AACA/E,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,KA/CD,CA+CE,OAAOwC,KAAP,EAAc;AACdxC,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAb,MAAAA,YAAY,CAAC;AACXwD,QAAAA,MAAM,EAAE,OADG;AAEXC,QAAAA,KAAK,EAAE,oBAFI;AAGXC,QAAAA,WAAW,EAAEL,KAAK,CAACsC,QAAN,GACTtC,KAAK,CAACsC,QAAN,CAAerB,IADN,GAET;AALO,OAAD,CAAZ;AAOD;AACF,GAlED;;AAoEA,sBACE;AAAA,4BACC;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACG,QAAC,OAAD;AACE,QAAA,WAAW,EAAE;AACXuB,UAAAA,gBAAgB,EAAE,SADP;AAEXC,UAAAA,aAAa,EAAE;AAFJ,SADf;AAKE,QAAA,UAAU,EAAEhF,UALd;AAAA,gCAOE,QAAC,IAAD;AAAM,UAAA,KAAK,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE,QAAC,IAAD;AAAM,UAAA,KAAK,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YADD,EAaGA,UAAU,KAAK,CAAf,iBAAqB;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA,8BACpB,QAAC,GAAD;AAAK,QAAA,CAAC,EAAC,MAAP;AAAc,QAAA,EAAE,EAAE,EAAlB;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,MAAM,EAAC,MAAd;AAAA,kCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,gBAAD;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AACE,cAAA,KAAK,EAAE;AAAEiF,gBAAAA,UAAU,EAAE;AAAd,eADT;AAEE,cAAA,IAAI,EACF,iFAHJ;AAKE,cAAA,QAAQ,EAAC,sBALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADoB,eAkBpB,QAAC,IAAD;AAAM,QAAA,UAAU,EAAC,QAAjB;AAA0B,QAAA,cAAc,EAAC,eAAzC;AAAA,gCACE;AAAO,UAAA,SAAS,EAAC,+DAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,IAAD;AAAM,UAAA,UAAU,EAAC,QAAjB;AAAA,qBACG,CAACrF,SAAS,IAAIE,SAAd,kBAA4B,QAAC,OAAD;AAAS,YAAA,IAAI,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,kBAD/B,eAEE,QAAC,GAAD;AAAK,YAAA,EAAE,EAAC,GAAR;AAAA,sBACGF,SAAS,GAAG,gBAAH,GAAsBE,SAAS,GAAG,gBAAH,GAAsB;AADjE;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBoB,eA8BpB;AACE,QAAA,SAAS,EAAC,iBADZ;AAAA,WAEM+C,YAAY,CAAC;AAAES,UAAAA,KAAF;AAAS4B,UAAAA,SAAS,EAAE;AAApB,SAAD,CAFlB;AAAA,gCAIE,sBAAWpC,aAAa;AAAxB;AAAA;AAAA;AAAA;AAAA,gBAJF,EAKGC,YAAY,iBAAI;AAAA,oBAAIpC,IAAI,CAACwE,aAAL,CAAmBjI,QAAQ,CAACkI,YAA5B;AAAJ;AAAA;AAAA;AAAA;AAAA,gBALnB,EAMG,CAACvE,aAAD,IACEA,aAAa,CAACC,MAAd,KAAyB,CAAzB,IAA8B,CAACiC,YAA/B,iBACC;AAAA,oBAAIpC,IAAI,CAACwE,aAAL,CAAmBjI,QAAQ,CAACmI,kBAA5B;AAAJ;AAAA;AAAA;AAAA;AAAA,gBARN,EAUGxE,aAAa,IAAIA,aAAa,CAACC,MAAd,GAAuB,CAAxC,IAA6C,CAACiC,YAA9C,iBACC;AAAA,kCACE;AAAA,mCACE;AAAG,cAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAA,sBAAIlC,aAAa,CAAC,CAAD,CAAb,CAAiByE;AAArB;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA,wBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,cA9BoB;AAAA;AAAA;AAAA;AAAA;AAAA,YAbxB,EA+DGtF,UAAU,KAAK,CAAf,iBACC;AAAM,MAAA,QAAQ,EAAEO,YAAY,CAACgD,YAAD,CAA5B;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,OAAO,EAAC,MAAb;AAAoB,QAAA,QAAQ,EAAC,MAA7B;AAAoC,QAAA,cAAc,EAAC,eAAnD;AAAA,kBACGrD,2BAA2B,CAAC2D,GAA5B,CAAiC5B,MAAD;AAAA;;AAAA,8BAC/B,QAAC,GAAD;AAAkB,YAAA,KAAK,EAAC,KAAxB;AAA8B,YAAA,EAAE,EAAE,CAAlC;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,sBAAf;AAAA,sCACE;AAAO,gBAAA,SAAS,EAAC,+DAAjB;AAAA,0BACGA;AADH;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE,QAAC,MAAD,OACM7B,QAAQ,CAAE,GAAE6B,MAAO,EAAX,EAAc;AACxBsD,kBAAAA,QAAQ,EAAEhI,cAAc,CAACiI,QAAf,CAAwBvD,MAAxB;AADc,iBAAd,CADd;AAIE,gBAAA,YAAY,0BACRvC,YAAY,CAAC,CAAD,CAAZ,CAAgB+F,IAAhB,CACCC,YAAD,IACG,GAAEA,YAAa,EAAhB,CACGC,WADH,GAEGC,OAFH,CAEY,GAAE3D,MAAO,EAAV,CAAY0D,WAAZ,EAFX,MAE0C,CAAC,CAJ7C,CADQ,uEAML,UAVT;AAYE,gBAAA,WAAW,EAAC,gBAZd;AAAA,0BAcGjG,YAAY,CAAC,CAAD,CAAZ,CAAgBmE,GAAhB,CAAqB6B,YAAD,iBACnB;AAAA,4BAA4BA;AAA5B,mBAAaA,YAAb;AAAA;AAAA;AAAA;AAAA,wBADD;AAdH;AAAA;AAAA;AAAA;AAAA,sBAJF,EAsBGpF,MAAM,IAAIA,MAAM,CAAC2B,MAAD,CAAhB,iBACC;AAAM,gBAAA,SAAS,EAAC,8BAAhB;AAAA,0BACGA;AADH;AAAA;AAAA;AAAA;AAAA,sBAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,aAAUA,MAAV;AAAA;AAAA;AAAA;AAAA,kBAD+B;AAAA,SAAhC;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAhEJ,eAsGE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,8BACE,QAAC,MAAD;AACE,QAAA,SAAS,EAAEnC,SADb;AAEE,QAAA,OAAO,EAAES,YAAY,CAACgD,YAAD,CAFvB;AAGE,QAAA,KAAK,EAAE;AACL9E,UAAAA,eAAe,EAAE,SADZ;AAELC,UAAAA,KAAK,EAAE,SAFF;AAGLmH,UAAAA,UAAU,EAAE;AAHP,SAHT;AAQE,QAAA,UAAU,EAAE,CAACnG,YARf;AASE,QAAA,WAAW,EAAC,WATd;AAAA,kBAWEM,UAAU,KAAK,CAAf,GAAmB,MAAnB,GAA4B;AAX9B;AAAA;AAAA;AAAA;AAAA,cADF,eAeE,QAAC,MAAD;AACE,QAAA,OAAO,EAAC,QADV;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,OAAO,EAAE,MAAM;AACba,UAAAA,aAAa,CAACC,MAAd,GAAuB,CAAvB;AACAD,UAAAA,aAAa,CAACiF,MAAd,CAAqB,CAArB,EAAwBjF,aAAa,CAACC,MAAtC;AACAnB,UAAAA,eAAe,CAAC,IAAD,CAAf;AACAM,UAAAA,aAAa,CAAC,CAAD,CAAb;AACAO,UAAAA,KAAK,CACH,EADG,EAEH;AACEuF,YAAAA,SAAS,EAAE,KADb;AAEEC,YAAAA,UAAU,EAAE,KAFd;AAGEC,YAAAA,UAAU,EAAE;AAHd,WAFG,CAAL;AAQD,SAhBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YAtGF;AAAA,kBADF;AA8ID,CAhTD;;GAAMhH,S;UACSlC,W,EAEMC,W,EAMiBD,W,EAShCN,O,EAGYe,U,EACHb,O,EAgDTD,W;;;KAtEAuC,S;AAkTN,qBAAexB,SAAS,CAACwB,SAAD,CAAxB","sourcesContent":["import React, { useMemo, useState, useEffect, useCallback } from 'react';\r\nimport {\r\n  Button,\r\n  Select,\r\n  Alert,\r\n  AlertIcon,\r\n  AlertTitle,\r\n  AlertDescription,\r\n  Box,\r\n  Spinner,\r\n  Flex,\r\n} from '@chakra-ui/react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { useIntl } from 'react-intl';\r\nimport { Stepper, Step } from 'react-form-stepper';\r\nimport XLSX from 'xlsx';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport toast from 'react-hot-toast';\r\nimport messages from './messages';\r\nimport { publicAxios as axios } from '../../axios';\r\nimport _ from 'lodash';\r\nimport { sheetValidation, requiredFields } from './helper';\r\nimport { useHistory } from 'react-router';\r\nimport withToast from '../../HOCs/withToast';\r\nimport {\r\n  uploadBulkSales,\r\n  getAllSales,\r\n  addSingleQueue,\r\n} from '../../containers/Sales/slice';\r\nimport { uploadSalesMedia, AddToQueue } from '../../containers/Sales/service';\r\n\r\nconst baseStyle = {\r\n  flex: 1,\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  padding: '20px',\r\n  borderWidth: 2,\r\n  borderRadius: 2,\r\n  borderColor: '#eeeeee',\r\n  borderStyle: 'dashed',\r\n  backgroundColor: '#fafafa',\r\n  color: '#bdbdbd',\r\n  outline: 'none',\r\n  transition: 'border .24s ease-in-out',\r\n  cursor: 'pointer',\r\n};\r\n\r\nconst activeStyle = {\r\n  borderColor: '#2196f3',\r\n};\r\n\r\nconst acceptStyle = {\r\n  borderColor: '#00e676',\r\n};\r\n\r\nconst rejectStyle = {\r\n  borderColor: '#ff1744',\r\n};\r\n\r\nconst SalesBulk = ({ notification }) => {\r\n  const auth = useSelector((state) => state.auth);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const dispatcher = useDispatch();\r\n  const [loading, setLoading] = useState(false);\r\n  const [importedFile, setImportedFile] = useState(null);\r\n  const [importing, setImporting] = useState(false);\r\n  const [uploading, setUploading] = useState(false);\r\n  const [activeStep, setActiveStep] = useState(1);\r\n  const acceptedSalesOnboardHeaders = useSelector(\r\n    (state) => state.app.acceptedSalesOnboardHeaders,\r\n  );\r\n\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    handleSubmit,\r\n    reset,\r\n  } = useForm({\r\n    mode: 'onSubmit',\r\n  });\r\n  const history = useHistory();\r\n  const intl = useIntl();\r\n\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    try {\r\n      if (acceptedFiles.length > 0) {\r\n        setImporting(true);\r\n        const reader = new FileReader();\r\n        reader.onload = (evt) => {\r\n          const bstr = evt.target.result;\r\n          const wb = XLSX.read(bstr, { type: 'binary', sheetRows: 1 });\r\n          const wsname = wb.SheetNames[0];\r\n          const ws = wb.Sheets[wsname];\r\n          const jsonData = XLSX.utils.sheet_to_json(ws, {\r\n            header: 1,\r\n            defval: '',\r\n            blankrows: true,\r\n          });\r\n\r\n          if (!jsonData.length) {\r\n            return Promise.reject(\r\n              'Either sheets is empty or the sheet is corrupted.',\r\n            );\r\n          } else {\r\n            setImportedFile(jsonData);\r\n          }\r\n\r\n          setImporting(false);\r\n        };\r\n        reader.readAsBinaryString(acceptedFiles[0]);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      notification({\r\n        status: 'error',\r\n        title: 'Import Error',\r\n        description: error ?? 'Unable to import file',\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive,\r\n    isDragAccept,\r\n    isDragReject,\r\n    acceptedFiles,\r\n    inputRef,\r\n  } = useDropzone({\r\n    accept:\r\n      'text/csv,application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n    maxFiles: 1,\r\n    noKeyboard: true,\r\n    onDrop,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (errorMessage) {\r\n      toast(errorMessage);\r\n    }\r\n  }, [errorMessage]);\r\n\r\n  const style = useMemo(\r\n    () => ({\r\n      ...baseStyle,\r\n      ...(isDragActive ? activeStyle : {}),\r\n      ...(isDragAccept ? acceptStyle : {}),\r\n      ...(isDragReject ? rejectStyle : {}),\r\n    }),\r\n    [isDragActive, isDragReject, isDragAccept],\r\n  );\r\n\r\n  const handleUpload = async (data) => {\r\n      if(activeStep === 1){\r\n          setActiveStep(2);\r\n          return;\r\n      }\r\n\r\n    /*   event.preventDefault(); */\r\n\r\n      /* const data = event.target.value */\r\n    try {\r\n        const newJsonData = Object.fromEntries(Object.entries(data).map(([key, value], index) => {\r\n            if(value){\r\n                return([[value], index]);\r\n            }else{\r\n                return ([[key], index]);\r\n            }\r\n        }))\r\n\r\n      if (importedFile) {\r\n        setUploading(true);\r\n\r\n        const newJsonData = importedFile[0].map((item, index) => ({\r\n          [item]: index,\r\n        }));\r\n\r\n        const formData = new FormData();\r\n\r\n        acceptedFiles.forEach((file) =>\r\n          formData.append('media', file, file.name),\r\n        );\r\n        const mediaResult = await uploadSalesMedia({\r\n          data: formData,\r\n          auth,\r\n        });\r\n\r\n\r\n        const data = {\r\n          mediaId: mediaResult?.data[0]._id,\r\n          headers: newJsonData,\r\n          module: 'SALE',\r\n        };\r\n\r\n        const response = await AddToQueue({ data, auth });\r\n\r\n        dispatcher(addSingleQueue(response.data));\r\n\r\n        notification({\r\n          status: 'success',\r\n          title: 'File Uploaded Successfully',\r\n          description:\r\n            'File was successfully uploaded and presently undergoing processing',\r\n        });\r\n\r\n        history.push('/sales');\r\n        setUploading(false);\r\n      }\r\n    } catch (error) {\r\n      setUploading(false);\r\n      notification({\r\n        status: 'error',\r\n        title: 'File upload failed',\r\n        description: error.response\r\n          ? error.response.data\r\n          : 'Unable to upload file, please try again',\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n     <div className='w-full mb-3'>\r\n        <Stepper\r\n          styleConfig={{\r\n            completedBgColor: '#1e293b',\r\n            activeBgColor: '#da0032',\r\n          }}\r\n          activeStep={activeStep}\r\n        >\r\n          <Step label='File Upload' />\r\n          <Step label='Field Mappings' />\r\n        </Stepper>\r\n      </div>\r\n      {activeStep === 1 && (<div className='w-full px-4 lg:w-full mb-3'>\r\n        <Box w='100%' mb={10}>\r\n          <Alert status='info'>\r\n            <AlertIcon />\r\n            <AlertDescription>\r\n              <label>Download a sample file from here </label>\r\n              <a\r\n                style={{ fontWeight: 'bold' }}\r\n                href={\r\n                  'https://docs.google.com/uc?id=16S3A9MCgWbhPWaSA-ZH5bvyumi31waGI&export=download'\r\n                }\r\n                download='Accounts sample File'\r\n              >\r\n                Download File\r\n              </a>\r\n            </AlertDescription>\r\n          </Alert>\r\n        </Box>\r\n        <Flex alignItems='center' justifyContent='space-between'>\r\n          <label className='block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1'>\r\n            Sales Detail Document\r\n          </label>\r\n          <Flex alignItems='center' >\r\n            {(importing || uploading) && <Spinner size='sm' />}\r\n            <Box ml='2'>\r\n              {importing ? 'Importing file' : uploading ? 'Uploading file' : ''}\r\n            </Box>\r\n          </Flex>\r\n        </Flex>\r\n\r\n        <div\r\n          className='relative w-full'\r\n          {...getRootProps({ style, className: 'dropzone' })}\r\n        >\r\n          <input {...getInputProps()} />\r\n          {isDragActive && <p>{intl.formatMessage(messages.dropFileHere)}</p>}\r\n          {!acceptedFiles ||\r\n            (acceptedFiles.length === 0 && !isDragActive && (\r\n              <p>{intl.formatMessage(messages.dragAndDropMessage)}</p>\r\n            ))}\r\n          {acceptedFiles && acceptedFiles.length > 0 && !isDragActive && (\r\n            <>\r\n              <p>\r\n                <i className='far fa-file fa-2x' />\r\n              </p>\r\n              <p>{acceptedFiles[0].path}</p>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>)}\r\n      {activeStep === 2 && (\r\n        <form onSubmit={handleSubmit(handleUpload)}> \r\n          <Box display='flex' flexWrap='wrap' justifyContent='space-between'>\r\n            {acceptedSalesOnboardHeaders.map((header) => (\r\n              <Box key={header} width='48%' mb={5}>\r\n                <div className='relative w-full mb-3'>\r\n                  <label className='block uppercase text-blueGray-500 text-xs font-bold mb-2 ml-1'>\r\n                    {header}\r\n                  </label>\r\n                  <Select\r\n                    {...register(`${header}`, {\r\n                      required: requiredFields.includes(header),\r\n                    })}\r\n                    defaultValue={\r\n                        importedFile[0].find(\r\n                        (actualHeader) =>\r\n                          `${actualHeader}`\r\n                            .toLowerCase()\r\n                            .indexOf(`${header}`.toLowerCase()) !== -1,\r\n                      ) ?? 'No value'\r\n                    }\r\n                    placeholder='Select a value'\r\n                  >\r\n                    {importedFile[0].map((actualHeader) => (\r\n                      <option key={actualHeader}>{actualHeader}</option>\r\n                    ))}\r\n                  </Select>\r\n                  {errors && errors[header] && (\r\n                    <span className='text-youtube-regular text-sm'>\r\n                      {header}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </Box>\r\n            ))}\r\n          </Box>\r\n        </form>\r\n      )}\r\n\r\n      <div className='bulkButtonsContainer'>\r\n        <Button\r\n          isLoading={uploading}\r\n          onClick={handleSubmit(handleUpload)}\r\n          style={{\r\n            backgroundColor: '#1e293b',\r\n            color: '#ffffff',\r\n            marginLeft: '10px',\r\n          }}\r\n          isDisabled={!importedFile}\r\n          loadingText='Uploading'\r\n        >\r\n         {activeStep === 1?  'Next' : 'Submit'}\r\n        </Button>\r\n\r\n        <Button\r\n          variant='clrBtn'\r\n          type='reset'\r\n          onClick={() => {\r\n            acceptedFiles.length = 0;\r\n            acceptedFiles.splice(0, acceptedFiles.length);\r\n            setImportedFile(null)\r\n            setActiveStep(1);\r\n            reset(\r\n              {},\r\n              {\r\n                keepDirty: false,\r\n                keepErrors: false,\r\n                keepValues: false,\r\n              },\r\n            );\r\n          }}\r\n        >\r\n          Clear\r\n        </Button>\r\n      </div>\r\n      {/*     </div> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withToast(SalesBulk);\r\n"]},"metadata":{},"sourceType":"module"}