{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport Services from './globalServices';\nexport const globalSlice = createSlice({\n  name: 'globalSlice',\n  initialState: {\n    branches: [],\n    workshops: [],\n    distributor: {\n      banking: false,\n      location: false,\n      business: false,\n      individual: false\n    },\n    isDistributor: false\n  },\n  reducers: {\n    addBranches: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      state.branches = payload;\n    },\n    addWorkshops: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      state.workshops = payload;\n    },\n    addDistributor: (state, _ref3) => {\n      let {\n        payload\n      } = _ref3;\n      state.distributor = payload;\n    },\n    setIsDistributor: (state, _ref4) => {\n      let {\n        payload\n      } = _ref4;\n      state.isDistributor = payload;\n    }\n  }\n});\nexport const {\n  addBranches,\n  addWorkshops,\n  addDistributor,\n  setIsDistributor\n} = globalSlice.actions;\nexport const getBranches = payload => dispatcher => {\n  return Services.getBranches(payload).then(response => {\n    dispatcher(addBranches(response.data));\n  }, error => {\n    if (error.response) {\n      var _error$response$data;\n\n      return Promise.reject((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.errMsg);\n    }\n  });\n};\nexport const getWorkshops = payload => dispatcher => {\n  return Services.getWorkshops(payload).then(response => {\n    dispatcher(addWorkshops(response.data));\n  }, error => {\n    if (error.response) {\n      var _error$response$data2;\n\n      return Promise.reject((_error$response$data2 = error.response.data) === null || _error$response$data2 === void 0 ? void 0 : _error$response$data2.errMsg);\n    }\n  });\n};\nexport const getDistributorInfo = payload => dispatcher => {\n  return Services.getDistributorInfo(payload).then(response => {\n    dispatcher(addDistributor(response.data[0]));\n  }, error => {\n    if (error.response) {\n      var _error$response$data3;\n\n      return Promise.reject((_error$response$data3 = error.response.data) === null || _error$response$data3 === void 0 ? void 0 : _error$response$data3.errMsg);\n    }\n  });\n};\nexport const selectGlobalState = state => state.globalStateReducer;\nexport default globalSlice.reducer;","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/globalSlice.js"],"names":["createSlice","Services","globalSlice","name","initialState","branches","workshops","distributor","banking","location","business","individual","isDistributor","reducers","addBranches","state","payload","addWorkshops","addDistributor","setIsDistributor","actions","getBranches","dispatcher","then","response","data","error","Promise","reject","errMsg","getWorkshops","getDistributorInfo","selectGlobalState","globalStateReducer","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport Services from './globalServices';\r\n\r\nexport const globalSlice = createSlice({\r\n    name: 'globalSlice',\r\n    initialState: {\r\n        branches: [],\r\n        workshops: [],\r\n        distributor: {\r\n            banking: false, location: false, business: false, individual: false\r\n          },\r\n        isDistributor: false,\r\n    },\r\n    reducers: {\r\n        addBranches: (state, {payload}) => {\r\n            state.branches = payload;\r\n        },\r\n        addWorkshops: (state, {payload}) => {\r\n            state.workshops = payload;\r\n        },\r\n        addDistributor:  (state, {payload}) => {\r\n            state.distributor = payload;\r\n        },\r\n        setIsDistributor: (state, { payload })=> {\r\n            state.isDistributor = payload;\r\n        }\r\n    }\r\n});\r\n\r\n\r\n\r\n\r\nexport const { addBranches, addWorkshops, addDistributor, setIsDistributor } = globalSlice.actions;\r\n\r\n\r\nexport const getBranches = payload => dispatcher => {\r\n    return Services.getBranches(payload).then(\r\n        response => {\r\n            dispatcher(addBranches(response.data))\r\n        },\r\n        error => {\r\n            if(error.response){\r\n                return Promise.reject(error.response.data?.errMsg)\r\n            }\r\n        }\r\n    )\r\n}\r\n\r\nexport const getWorkshops =  payload => dispatcher => {\r\n    return Services.getWorkshops(payload).then(\r\n        response => {\r\n            dispatcher(addWorkshops(response.data))\r\n        },\r\n        error => {\r\n            if(error.response){\r\n                return Promise.reject(error.response.data?.errMsg)\r\n            }\r\n        }\r\n    )\r\n}\r\n\r\nexport const getDistributorInfo =  payload => dispatcher => {\r\n    return Services.getDistributorInfo(payload).then(\r\n        response => {\r\n            dispatcher(addDistributor(response.data[0]));\r\n        },\r\n        error => {\r\n            if(error.response){\r\n                return Promise.reject(error.response.data?.errMsg)\r\n            }\r\n        }\r\n    )\r\n}\r\n\r\n\r\nexport const selectGlobalState = state => state.globalStateReducer\r\n\r\n\r\n export default globalSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}