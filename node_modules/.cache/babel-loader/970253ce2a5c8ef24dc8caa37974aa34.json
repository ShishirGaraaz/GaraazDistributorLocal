{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Work\\\\garaaz-distributor\\\\src\\\\components\\\\TableTop\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { InputGroup, Input, InputRightElement, Box, useColorMode } from '@chakra-ui/react';\nimport { Select as MultiSelect } from 'chakra-react-select';\nimport { FiSearch } from 'react-icons/fi';\nimport { useIntl } from 'react-intl';\nimport messages from './messages';\nimport enums from '../../utils/enums';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst customStyles = {\n  input: (provided, state) => ({ ...provided,\n    border: '1px solid red'\n  })\n  /* control: () => ({\r\n    // none of react-select's styles are passed to <Control />\r\n    width: 200,\r\n  }),\r\n  singleValue: (provided, state) => {\r\n    const opacity = state.isDisabled ? 0.5 : 1;\r\n    const transition = 'opacity 300ms';\r\n      return { ...provided, opacity, transition };\r\n  } */\n\n};\n\nconst Index = props => {\n  _s();\n\n  const intl = useIntl();\n  const {\n    colorMode\n  } = useColorMode();\n  const statusOption = [{\n    value: enums.PENDING,\n    label: intl.formatMessage(messages.pending)\n  }, {\n    value: enums.COMPLETED,\n    label: intl.formatMessage(messages.completed)\n  }, {\n    value: enums.UPDATED,\n    label: intl.formatMessage(messages.updated)\n  }, {\n    value: enums.CBO,\n    label: intl.formatMessage(messages.CBO)\n  }, {\n    value: enums.STOCK_TRANSFER_COMPLETED,\n    label: intl.formatMessage(messages.stockTransferCompleted)\n  }, {\n    value: enums.STOCK_TRANSFER_PLACED,\n    label: intl.formatMessage(messages.stockTransferPlaced)\n  }, {\n    value: enums.LOST_SALE,\n    label: intl.formatMessage(messages.lostSale)\n  }];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    borderTopRightRadius: \"10px\",\n    borderTopLeftRadius: \"10px\",\n    backgroundColor: colorMode === 'dark' ? 'black' : 'white',\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    p: 4,\n    children: [/*#__PURE__*/_jsxDEV(InputBox, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        textStyle: \"label\",\n        layerStyle: \"muted\",\n        mb: 1,\n        children: intl.formatMessage(messages.searchByOrderId)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          placeholder: intl.formatMessage(messages.searchOrders),\n          onChange: props.onSearchOrderChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputRightElement, {\n          pointerEvents: \"none\",\n          children: /*#__PURE__*/_jsxDEV(FiSearch, {\n            color: \"gray.300\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        textStyle: \"label\",\n        layerStyle: \"muted\",\n        mb: 1,\n        children: intl.formatMessage(messages.filterByOrderStatus)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MultiSelect, {\n        isMulti: true,\n        focusBorderColor: \"purple\",\n        placeholder: intl.formatMessage(messages.orderStatusFilter),\n        value: props.orderStatus,\n        onChange: value => props.onSelectChange(value, enums.STATUS),\n        colorScheme: \"purple\",\n        options: statusOption // styles={{ borderColor: 'black' }}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        textStyle: \"label\",\n        layerStyle: \"muted\",\n        mb: 1,\n        children: intl.formatMessage(messages.filterByBranch)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MultiSelect, {\n        placeholder: intl.formatMessage(messages.selectBranch),\n        value: props.branchValue,\n        onChange: value => props.onSelectChange(value, enums.BRANCH),\n        isMulti: true,\n        options: props.branchOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        textStyle: \"label\",\n        layerStyle: \"muted\",\n        mb: 1,\n        children: intl.formatMessage(messages.filterByWorkshop)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MultiSelect, {\n        placeholder: intl.formatMessage(messages.selectWorkshop),\n        value: props.workshopValue,\n        onChange: value => props.onSelectChange(value, enums.WORKSHOP),\n        isMulti: true,\n        options: props.workshopOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n      islarge: true,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        width: \"100%\",\n        flexWrap: \"wrap\",\n        justifyContent: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          width: {\n            base: '100%',\n            md: '48%'\n          },\n          mb: {\n            base: 15,\n            md: 0\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            textStyle: \"label\",\n            layerStyle: \"muted\",\n            mb: 1,\n            children: intl.formatMessage(messages.startDate)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: enums.STARTDATE,\n            type: \"date\",\n            onChange: props.onDateChange,\n            placeholder: intl.formatMessage(messages.startDate)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          width: {\n            base: '100%',\n            md: '48%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            textStyle: \"label\",\n            layerStyle: \"muted\",\n            mb: 1,\n            children: intl.formatMessage(messages.endDate)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: enums.ENDDATE,\n            type: \"date\",\n            onChange: props.onDateChange\n            /* placeholder={intl.formatMessage(messages.endDate)} */\n            ,\n            placeholder: \"DD/MM/YYYY\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Index, \"l7KdAp9TTd8q4M+BQ58Ors6eY2U=\", false, function () {\n  return [useIntl, useColorMode];\n});\n\n_c = Index;\n\nconst InputBox = _ref => {\n  let {\n    islarge,\n    children\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    width: {\n      base: '100%',\n      lg: islarge ? '30rem' : '15rem'\n    },\n    mr: [0, null, 8],\n    mb: 15,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = InputBox;\nexport default Index;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Index\");\n$RefreshReg$(_c2, \"InputBox\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/components/TableTop/index.js"],"names":["React","InputGroup","Input","InputRightElement","Box","useColorMode","Select","MultiSelect","FiSearch","useIntl","messages","enums","customStyles","input","provided","state","border","Index","props","intl","colorMode","statusOption","value","PENDING","label","formatMessage","pending","COMPLETED","completed","UPDATED","updated","CBO","STOCK_TRANSFER_COMPLETED","stockTransferCompleted","STOCK_TRANSFER_PLACED","stockTransferPlaced","LOST_SALE","lostSale","searchByOrderId","searchOrders","onSearchOrderChange","filterByOrderStatus","orderStatusFilter","orderStatus","onSelectChange","STATUS","filterByBranch","selectBranch","branchValue","BRANCH","branchOptions","filterByWorkshop","selectWorkshop","workshopValue","WORKSHOP","workshopOptions","base","md","startDate","STARTDATE","onDateChange","endDate","ENDDATE","InputBox","islarge","children","lg"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  InputGroup,\r\n  Input,\r\n  InputRightElement,\r\n  Box,\r\n  useColorMode,\r\n} from '@chakra-ui/react';\r\nimport { Select as MultiSelect } from 'chakra-react-select';\r\nimport { FiSearch } from 'react-icons/fi';\r\nimport { useIntl } from 'react-intl';\r\nimport messages from './messages';\r\nimport enums from '../../utils/enums';\r\n\r\nconst customStyles = {\r\n  input: (provided, state) => ({\r\n    ...provided,\r\n    border: '1px solid red',\r\n  }),\r\n  /* control: () => ({\r\n    // none of react-select's styles are passed to <Control />\r\n    width: 200,\r\n  }),\r\n  singleValue: (provided, state) => {\r\n    const opacity = state.isDisabled ? 0.5 : 1;\r\n    const transition = 'opacity 300ms';\r\n\r\n    return { ...provided, opacity, transition };\r\n  } */\r\n};\r\n\r\nconst Index = (props) => {\r\n  const intl = useIntl();\r\n  const { colorMode } = useColorMode();\r\n\r\n  const statusOption = [\r\n    {\r\n      value: enums.PENDING,\r\n      label: intl.formatMessage(messages.pending),\r\n    },\r\n    {\r\n      value: enums.COMPLETED,\r\n      label: intl.formatMessage(messages.completed),\r\n    },\r\n    {\r\n      value: enums.UPDATED,\r\n      label: intl.formatMessage(messages.updated),\r\n    },\r\n    {\r\n      value: enums.CBO,\r\n      label: intl.formatMessage(messages.CBO),\r\n    },\r\n    {\r\n      value: enums.STOCK_TRANSFER_COMPLETED,\r\n      label: intl.formatMessage(messages.stockTransferCompleted),\r\n    },\r\n    {\r\n      value: enums.STOCK_TRANSFER_PLACED,\r\n      label: intl.formatMessage(messages.stockTransferPlaced),\r\n    },\r\n    {\r\n      value: enums.LOST_SALE,\r\n      label: intl.formatMessage(messages.lostSale),\r\n    },\r\n  ];\r\n  return (\r\n    <Box\r\n      borderTopRightRadius='10px'\r\n      borderTopLeftRadius='10px'\r\n      backgroundColor={colorMode === 'dark' ? 'black' : 'white'}\r\n      display='flex'\r\n      flexWrap='wrap'\r\n      p={4}\r\n    >\r\n      <InputBox>\r\n        <Box textStyle='label' layerStyle='muted' mb={1}>\r\n          {intl.formatMessage(messages.searchByOrderId)}\r\n        </Box>\r\n        <InputGroup>\r\n          <Input\r\n            type='text'\r\n            placeholder={intl.formatMessage(messages.searchOrders)}\r\n            onChange={props.onSearchOrderChange}\r\n          />\r\n          <InputRightElement\r\n            pointerEvents='none'\r\n            children={<FiSearch color='gray.300' />}\r\n          />\r\n        </InputGroup>\r\n      </InputBox>\r\n\r\n      <InputBox>\r\n        <Box textStyle='label' layerStyle='muted' mb={1}>\r\n          {intl.formatMessage(messages.filterByOrderStatus)}\r\n        </Box>\r\n        <MultiSelect\r\n          isMulti\r\n          focusBorderColor=\"purple\"\r\n          placeholder={intl.formatMessage(messages.orderStatusFilter)}\r\n          value={props.orderStatus}\r\n          onChange={(value) => props.onSelectChange(value, enums.STATUS)}\r\n          colorScheme=\"purple\"\r\n          \r\n          options={statusOption}\r\n          // styles={{ borderColor: 'black' }}\r\n        />\r\n      </InputBox>\r\n\r\n      <InputBox>\r\n        <Box textStyle='label' layerStyle='muted' mb={1}>\r\n          {intl.formatMessage(messages.filterByBranch)}\r\n        </Box>\r\n        <MultiSelect\r\n          placeholder={intl.formatMessage(messages.selectBranch)}\r\n          value={props.branchValue}\r\n          onChange={(value) => props.onSelectChange(value, enums.BRANCH)}\r\n          isMulti\r\n          options={props.branchOptions}\r\n        />\r\n      </InputBox>\r\n\r\n      <InputBox>\r\n        <Box textStyle='label' layerStyle='muted' mb={1}>\r\n          {intl.formatMessage(messages.filterByWorkshop)}\r\n        </Box>\r\n        <MultiSelect\r\n          placeholder={intl.formatMessage(messages.selectWorkshop)}\r\n          value={props.workshopValue}\r\n          onChange={(value) => props.onSelectChange(value, enums.WORKSHOP)}\r\n          isMulti\r\n          options={props.workshopOptions}\r\n        />\r\n      </InputBox>\r\n\r\n      <InputBox islarge>\r\n        <Box\r\n          display='flex'\r\n          width='100%'\r\n          flexWrap='wrap'\r\n          justifyContent='space-between'\r\n        >\r\n          <Box width={{ base: '100%', md: '48%' }} mb={{ base: 15, md: 0 }}>\r\n            <Box textStyle='label' layerStyle='muted' mb={1}>\r\n              {intl.formatMessage(messages.startDate)}\r\n            </Box>\r\n            <Input\r\n              name={enums.STARTDATE}\r\n              type='date'\r\n              onChange={props.onDateChange}\r\n              placeholder={intl.formatMessage(messages.startDate)}\r\n            />\r\n          </Box>\r\n\r\n          <Box width={{ base: '100%', md: '48%' }}>\r\n            <Box textStyle='label' layerStyle='muted' mb={1}>\r\n              {intl.formatMessage(messages.endDate)}\r\n            </Box>\r\n            <Input\r\n              name={enums.ENDDATE}\r\n              type='date'\r\n              onChange={props.onDateChange}\r\n              /* placeholder={intl.formatMessage(messages.endDate)} */\r\n              placeholder='DD/MM/YYYY'\r\n            />\r\n          </Box>\r\n        </Box>\r\n      </InputBox>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst InputBox = ({ islarge, children }) => {\r\n  return (\r\n    <Box\r\n      width={{ base: '100%', lg: islarge ? '30rem' : '15rem' }}\r\n      mr={[0, null, 8]}\r\n      mb={15}\r\n    >\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}