{"ast":null,"code":"import { publicAxios as axios } from '../../axios';\nimport routes from '../../routes';\nimport getURLParams from '../../utils/getURLParams';\nexport const createBulkSales = payload => {\n  return axios({\n    method: 'POST',\n    url: `${routes.salesRoute}`,\n    data: payload.data,\n    headers: {\n      Authorization: payload.auth.authToken\n    }\n  });\n};\nexport const fetchAllSales = payload => {\n  const params = getURLParams(payload.params);\n  return axios({\n    method: 'GET',\n    url: `${routes.salesRoute}${params}`,\n    headers: {\n      Authorization: payload.auth.authToken\n    }\n  });\n};\nexport const fetchWorkshopAccounts = payload => {\n  const params = getURLParams(payload.params);\n  return axios({\n    method: 'GET',\n    url: `${routes.workshopRoute}/${payload.id}/accounts${params}`,\n    headers: {\n      Authorization: payload.auth.authToken\n    }\n  });\n};\nexport const uploadSalesMedia = payload => {\n  return axios({\n    method: 'POST',\n    url: `/media`,\n    headers: {\n      Authorization: payload.auth.authToken\n    },\n    data: payload.data\n  });\n};\nexport const AddToQueue = payload => {\n  return axios({\n    method: 'POST',\n    url: `${routes.uploadQueueEndpoint}`,\n    headers: {\n      Authorization: payload.auth.authToken\n    },\n    data: payload.data\n  });\n};\n_c = AddToQueue;\nexport const getFileQueue = payload => {\n  return axios({\n    method: 'GET',\n    url: `${routes.uploadQueueEndpoint}?module=SALE`,\n    headers: {\n      Authorization: payload.auth.authToken\n    }\n  });\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"AddToQueue\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/containers/Sales/service.js"],"names":["publicAxios","axios","routes","getURLParams","createBulkSales","payload","method","url","salesRoute","data","headers","Authorization","auth","authToken","fetchAllSales","params","fetchWorkshopAccounts","workshopRoute","id","uploadSalesMedia","AddToQueue","uploadQueueEndpoint","getFileQueue"],"mappings":"AAAA,SAASA,WAAW,IAAIC,KAAxB,QAAqC,aAArC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AAEA,OAAO,MAAMC,eAAe,GAAIC,OAAD,IAAa;AACxC,SAAOJ,KAAK,CAAC;AACTK,IAAAA,MAAM,EAAE,MADC;AAETC,IAAAA,GAAG,EAAG,GAAEL,MAAM,CAACM,UAAW,EAFjB;AAGTC,IAAAA,IAAI,EAAEJ,OAAO,CAACI,IAHL;AAITC,IAAAA,OAAO,EAAE;AACLC,MAAAA,aAAa,EAAEN,OAAO,CAACO,IAAR,CAAaC;AADvB;AAJA,GAAD,CAAZ;AAQH,CATM;AAWP,OAAO,MAAMC,aAAa,GAAIT,OAAD,IAAa;AACtC,QAAMU,MAAM,GAAGZ,YAAY,CAACE,OAAO,CAACU,MAAT,CAA3B;AACA,SAAOd,KAAK,CAAC;AACTK,IAAAA,MAAM,EAAE,KADC;AAETC,IAAAA,GAAG,EAAG,GAAEL,MAAM,CAACM,UAAW,GAAEO,MAAO,EAF1B;AAGTL,IAAAA,OAAO,EAAE;AACLC,MAAAA,aAAa,EAAEN,OAAO,CAACO,IAAR,CAAaC;AADvB;AAHA,GAAD,CAAZ;AAOH,CATM;AAWP,OAAO,MAAMG,qBAAqB,GAAIX,OAAD,IAAa;AAC9C,QAAMU,MAAM,GAAGZ,YAAY,CAACE,OAAO,CAACU,MAAT,CAA3B;AACA,SAAOd,KAAK,CAAC;AACTK,IAAAA,MAAM,EAAE,KADC;AAETC,IAAAA,GAAG,EAAG,GAAEL,MAAM,CAACe,aAAc,IAAGZ,OAAO,CAACa,EAAG,YAAWH,MAAO,EAFpD;AAGTL,IAAAA,OAAO,EAAE;AACLC,MAAAA,aAAa,EAAEN,OAAO,CAACO,IAAR,CAAaC;AADvB;AAHA,GAAD,CAAZ;AAOH,CATM;AAWP,OAAO,MAAMM,gBAAgB,GAAId,OAAD,IAAa;AACzC,SAAOJ,KAAK,CAAC;AACTK,IAAAA,MAAM,EAAE,MADC;AAETC,IAAAA,GAAG,EAAG,QAFG;AAGTG,IAAAA,OAAO,EAAE;AACLC,MAAAA,aAAa,EAAEN,OAAO,CAACO,IAAR,CAAaC;AADvB,KAHA;AAMTJ,IAAAA,IAAI,EAAEJ,OAAO,CAACI;AANL,GAAD,CAAZ;AAQH,CATM;AAYP,OAAO,MAAMW,UAAU,GAAIf,OAAD,IAAa;AACnC,SAAOJ,KAAK,CAAC;AACTK,IAAAA,MAAM,EAAE,MADC;AAETC,IAAAA,GAAG,EAAG,GAAEL,MAAM,CAACmB,mBAAoB,EAF1B;AAGTX,IAAAA,OAAO,EAAE;AACLC,MAAAA,aAAa,EAAEN,OAAO,CAACO,IAAR,CAAaC;AADvB,KAHA;AAMTJ,IAAAA,IAAI,EAAEJ,OAAO,CAACI;AANL,GAAD,CAAZ;AASH,CAVM;KAAMW,U;AAYb,OAAO,MAAME,YAAY,GAAIjB,OAAD,IAAa;AACrC,SAAOJ,KAAK,CAAC;AACTK,IAAAA,MAAM,EAAE,KADC;AAETC,IAAAA,GAAG,EAAG,GAAEL,MAAM,CAACmB,mBAAoB,cAF1B;AAGTX,IAAAA,OAAO,EAAE;AACLC,MAAAA,aAAa,EAAEN,OAAO,CAACO,IAAR,CAAaC;AADvB;AAHA,GAAD,CAAZ;AAQH,CATM","sourcesContent":["import { publicAxios as axios } from '../../axios';\r\nimport routes from '../../routes';\r\nimport getURLParams from '../../utils/getURLParams';\r\n\r\nexport const createBulkSales = (payload) => {\r\n    return axios({\r\n        method: 'POST',\r\n        url: `${routes.salesRoute}`,\r\n        data: payload.data,\r\n        headers: {\r\n            Authorization: payload.auth.authToken,\r\n        }\r\n    })\r\n}\r\n\r\nexport const fetchAllSales = (payload) => {\r\n    const params = getURLParams(payload.params)\r\n    return axios({\r\n        method: 'GET',\r\n        url: `${routes.salesRoute}${params}`,\r\n        headers: {\r\n            Authorization: payload.auth.authToken,\r\n        }\r\n    })\r\n}\r\n\r\nexport const fetchWorkshopAccounts = (payload) => {\r\n    const params = getURLParams(payload.params)\r\n    return axios({\r\n        method: 'GET',\r\n        url: `${routes.workshopRoute}/${payload.id}/accounts${params}`,\r\n        headers: {\r\n            Authorization: payload.auth.authToken,\r\n        }\r\n    })\r\n}\r\n\r\nexport const uploadSalesMedia = (payload) => {\r\n    return axios({\r\n        method: 'POST',\r\n        url: `/media`,\r\n        headers: {\r\n            Authorization: payload.auth.authToken,\r\n        },\r\n        data: payload.data,\r\n    })\r\n}\r\n\r\n\r\nexport const AddToQueue = (payload) => {\r\n    return axios({\r\n        method: 'POST',\r\n        url: `${routes.uploadQueueEndpoint}`,\r\n        headers: {\r\n            Authorization: payload.auth.authToken,\r\n        },\r\n        data: payload.data,\r\n  \r\n    })\r\n}\r\n\r\nexport const getFileQueue = (payload) => {\r\n    return axios({\r\n        method: 'GET',\r\n        url: `${routes.uploadQueueEndpoint}?module=SALE`,\r\n        headers: {\r\n            Authorization: payload.auth.authToken,\r\n        },\r\n\r\n    })\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}