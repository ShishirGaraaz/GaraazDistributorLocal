{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Work\\\\garaaz-distributor\\\\src\\\\containers\\\\Parts\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useIntl } from 'react-intl';\nimport messages from './messages';\nimport { Button, Popover, PopoverTrigger, PopoverContent, PopoverBody, PopoverArrow, Skeleton, Stack, IconButton, Center, Image } from '@chakra-ui/react';\nimport { selectGlobalState } from '../../globalSlice';\nimport DynamicTable from '../../components/DynamicTable';\nimport ModifiedTableTop from '../../components/TableTop/ModifiedTableTop';\nimport garaazLogo from '../../images/placeholderImage.jpg';\nimport getMoneyFormat from '../../utils/getMoneyFormat';\nimport { FiMoreVertical } from 'react-icons/fi';\nimport { Link, useHistory } from 'react-router-dom';\nimport withToast from '../../HOCs/withToast';\nimport { getParts } from './slice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst inputData = [{\n  title: 'Filter by part number',\n  type: 'text',\n  placeholder: 'Enter Part Number',\n  name: 'partNumber'\n}, {\n  title: 'Filter by part description',\n  type: 'text',\n  placeholder: 'Enter Part Description',\n  name: 'partName'\n}, {\n  title: 'Filter by Category',\n  type: 'text',\n  placeholder: 'Enter Category',\n  name: 'category'\n}];\n\nconst Parts = _ref => {\n  _s();\n\n  let {\n    notification\n  } = _ref;\n  const intl = useIntl();\n  const {\n    isDistributor\n  } = useSelector(selectGlobalState);\n  const [tableData, setTableData] = useState([]);\n  const [data, setData] = useState([]);\n  const [filters, setFilters] = useState({\n    partNumber: '',\n    partName: '',\n    mrp: '',\n    category: '',\n    saleStatus: ''\n  });\n  const history = useHistory();\n  const [pageCount, setPageCount] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [totalCount, setTotalCount] = useState(0);\n  const auth = useSelector(state => state.auth);\n  const dispatcher = useDispatch();\n\n  const fetchAllParts = params => {\n    (async () => {\n      setIsLoading(true);\n\n      try {\n        var _response$data$, _response$data$$total, _response$data$2, _response$data$2$tota;\n\n        const response = await dispatcher(getParts({\n          auth,\n          params\n        }));\n        setData(response.data[0].data);\n        setTableData(response.data[0].data);\n        params.limit = params !== null && params !== void 0 && params.limit ? params === null || params === void 0 ? void 0 : params.limit : 10;\n        setPageCount(Math.ceil(((_response$data$ = response.data[0]) === null || _response$data$ === void 0 ? void 0 : (_response$data$$total = _response$data$.totalCount) === null || _response$data$$total === void 0 ? void 0 : _response$data$$total.count) / (params === null || params === void 0 ? void 0 : params.limit)));\n        setTotalCount((_response$data$2 = response.data[0]) === null || _response$data$2 === void 0 ? void 0 : (_response$data$2$tota = _response$data$2.totalCount) === null || _response$data$2$tota === void 0 ? void 0 : _response$data$2$tota.count);\n        setIsLoading(false);\n      } catch (error) {\n        setIsLoading(false);\n\n        if (error.response) {\n          var _error$response$data$;\n\n          notification({\n            status: 'error',\n            description: (_error$response$data$ = error.response.data.message) !== null && _error$response$data$ !== void 0 ? _error$response$data$ : intl.formatMessage(messages.errorMessage)\n          });\n        }\n      }\n    })();\n  };\n\n  useEffect(() => {\n    const doFilter = async () => setTableData(data.filter(d => {\n      var _d$part$category;\n\n      return new RegExp(filters === null || filters === void 0 ? void 0 : filters.partNumber, 'ig').test(d === null || d === void 0 ? void 0 : d.part.partNumber) && `${d.part.partName.toLowerCase()}`.indexOf(filters.partName.toLowerCase()) !== -1 && `${d.mrp}`.indexOf(filters.mrp) !== -1 && `${(_d$part$category = d.part.category) === null || _d$part$category === void 0 ? void 0 : _d$part$category.toLowerCase()}`.indexOf(filters === null || filters === void 0 ? void 0 : filters.category.toLowerCase()) !== -1 && `${d.saleStatus}`.indexOf(filters.saleStatus) !== -1;\n    }));\n\n    doFilter();\n  }, [filters]);\n\n  const handleTableTopChange = (e, name) => {\n    setTableData(data);\n    const value = e.hasOwnProperty('target') ? e.target.value : e;\n    setFilters({ ...filters,\n      [name]: value.trim()\n    });\n  };\n\n  const renderImage = value => {\n    return /*#__PURE__*/_jsxDEV(Center, {\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Image, {\n        width: \"5vw\",\n        src: value || garaazLogo,\n        alt: \"part\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this);\n  };\n\n  const columns = useMemo(() => isDistributor ? [{\n    Header: 'Image',\n    accessor: 'media[0]',\n    disableSortBy: true,\n    filter: 'equals',\n    Cell: _ref2 => {\n      let {\n        value\n      } = _ref2;\n      return renderImage(value);\n    }\n  }, {\n    Header: 'Part Number',\n    accessor: 'part.partNumber'\n  }, {\n    Header: 'Part Description',\n    accessor: 'part.partName'\n  }, {\n    Header: 'Category',\n    accessor: 'category'\n  }, {\n    Header: 'Part Type',\n    accessor: 'part.partType'\n  }, {\n    Header: 'MRP',\n    accessor: 'mrp',\n    Cell: _ref3 => {\n      let {\n        value\n      } = _ref3;\n      return getMoneyFormat(value);\n    }\n  }, {\n    Header: 'Actions',\n    accessor: '_id',\n    Cell: _ref4 => {\n      let {\n        value\n      } = _ref4;\n      return /*#__PURE__*/_jsxDEV(Popover, {\n        children: [/*#__PURE__*/_jsxDEV(PopoverTrigger, {\n          className: \"menu-dots\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            children: /*#__PURE__*/_jsxDEV(FiMoreVertical, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(PopoverContent, {\n          style: {\n            width: 170\n          },\n          children: [/*#__PURE__*/_jsxDEV(PopoverArrow, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(PopoverBody, {\n            style: {\n              justifyContent: 'space-between',\n              display: 'flex'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                history.push(`/part/${value}/view`);\n              },\n              style: {\n                backgroundColor: '#1e293b',\n                color: '#fff'\n              },\n              children: \"View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                history.push(`/part/${value}/edit`);\n              },\n              style: {\n                backgroundColor: 'gray',\n                color: '#ffffff'\n              },\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 19\n      }, this);\n    }\n  }] : [{\n    Header: 'Image',\n    accessor: 'media[0]',\n    disableSortBy: true,\n    filter: 'equals',\n    Cell: _ref5 => {\n      let {\n        value\n      } = _ref5;\n      return renderImage(value);\n    }\n  }, {\n    Header: 'Part Number',\n    accessor: 'part.partNumber'\n  }, {\n    Header: 'Part Description',\n    accessor: 'part.partName'\n  }, {\n    Header: 'Category',\n    accessor: 'category'\n  }, {\n    Header: 'Part Type',\n    accessor: 'part.partType'\n  }, {\n    Header: 'MRP',\n    accessor: 'mrp',\n    Cell: _ref6 => {\n      let {\n        value\n      } = _ref6;\n      return getMoneyFormat(value);\n    }\n  }], [isDistributor]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isDistributor && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center flex w-full items-center justify-between\",\n      style: {\n        justifyContent: 'flex-end'\n      },\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/part/add\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"addition\",\n          size: \"md\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-tools mr-2 text-sm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this), intl.formatMessage(messages.addPart)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ModifiedTableTop, {\n      inputData: inputData,\n      onChange: handleTableTopChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DynamicTable, {\n      columns: columns,\n      data: [...tableData.reverse()],\n      fetchData: fetchAllParts,\n      totalCount: totalCount,\n      controlledPageCount: pageCount,\n      loading: isLoading,\n      skipPageReset: true,\n      params: {}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Parts, \"YZOM5JgQ6bfbfsv4VneoziST2HY=\", false, function () {\n  return [useIntl, useSelector, useHistory, useSelector, useDispatch];\n});\n\n_c = Parts;\nexport default _c2 = withToast(Parts);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Parts\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/containers/Parts/index.js"],"names":["React","useMemo","useEffect","useState","useSelector","useDispatch","useIntl","messages","Button","Popover","PopoverTrigger","PopoverContent","PopoverBody","PopoverArrow","Skeleton","Stack","IconButton","Center","Image","selectGlobalState","DynamicTable","ModifiedTableTop","garaazLogo","getMoneyFormat","FiMoreVertical","Link","useHistory","withToast","getParts","inputData","title","type","placeholder","name","Parts","notification","intl","isDistributor","tableData","setTableData","data","setData","filters","setFilters","partNumber","partName","mrp","category","saleStatus","history","pageCount","setPageCount","isLoading","setIsLoading","totalCount","setTotalCount","auth","state","dispatcher","fetchAllParts","params","response","limit","Math","ceil","count","error","status","description","message","formatMessage","errorMessage","doFilter","filter","d","RegExp","test","part","toLowerCase","indexOf","handleTableTopChange","e","value","hasOwnProperty","target","trim","renderImage","columns","Header","accessor","disableSortBy","Cell","width","justifyContent","display","push","backgroundColor","color","addPart","reverse"],"mappings":"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","sourcesContent":["import React, { useMemo, useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useIntl } from 'react-intl';\r\nimport messages from './messages';\r\nimport {\r\n  Button,\r\n  Popover,\r\n  PopoverTrigger,\r\n  PopoverContent,\r\n  PopoverBody,\r\n  PopoverArrow,\r\n  Skeleton,\r\n  Stack,\r\n  IconButton,\r\n  Center,\r\n  Image,\r\n} from '@chakra-ui/react';\r\n\r\nimport { selectGlobalState } from '../../globalSlice';\r\nimport DynamicTable from '../../components/DynamicTable';\r\nimport ModifiedTableTop from '../../components/TableTop/ModifiedTableTop';\r\nimport garaazLogo from '../../images/placeholderImage.jpg';\r\nimport getMoneyFormat from '../../utils/getMoneyFormat';\r\nimport { FiMoreVertical } from 'react-icons/fi';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport withToast from '../../HOCs/withToast';\r\nimport { getParts } from './slice';\r\n\r\nconst inputData = [\r\n  {\r\n    title: 'Filter by part number',\r\n    type: 'text',\r\n    placeholder: 'Enter Part Number',\r\n    name: 'partNumber',\r\n  },\r\n  {\r\n    title: 'Filter by part description',\r\n    type: 'text',\r\n    placeholder: 'Enter Part Description',\r\n    name: 'partName',\r\n  },\r\n\r\n  {\r\n    title: 'Filter by Category',\r\n    type: 'text',\r\n    placeholder: 'Enter Category',\r\n    name: 'category',\r\n  },\r\n];\r\n\r\nconst Parts = ({notification}) => {\r\n  const intl = useIntl();\r\n  const { isDistributor } = useSelector(selectGlobalState);\r\n  const [tableData, setTableData] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [filters, setFilters] = useState({\r\n    partNumber: '',\r\n    partName: '',\r\n    mrp: '',\r\n    category: '',\r\n    saleStatus: '',\r\n  });\r\n  const history = useHistory();\r\n  const [pageCount, setPageCount] = useState(0);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [totalCount, setTotalCount] = useState(0);\r\n  const auth = useSelector((state) => state.auth);\r\n\r\n  const dispatcher = useDispatch();\r\n\r\n  const fetchAllParts = (params) => {\r\n    (async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const response = await dispatcher(getParts({ auth, params }));\r\n        setData(response.data[0].data);\r\n        setTableData(response.data[0].data);\r\n\r\n        params.limit = params?.limit ? params?.limit : 10;\r\n        setPageCount(Math.ceil(response.data[0]?.totalCount?.count / params?.limit));\r\n\r\n        setTotalCount(response.data[0]?.totalCount?.count);\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        setIsLoading(false);\r\n        if (error.response) {\r\n          notification({\r\n            status: 'error',\r\n            description:\r\n              error.response.data.message ??\r\n              intl.formatMessage(messages.errorMessage),\r\n          });\r\n        }\r\n      }\r\n    })();\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    const doFilter = async () =>\r\n      setTableData(\r\n        data.filter((d) => {\r\n          return (\r\n            new RegExp(filters?.partNumber, 'ig').test(d?.part.partNumber) &&\r\n            `${d.part.partName.toLowerCase()}`.indexOf(\r\n              filters.partName.toLowerCase(),\r\n            ) !== -1 &&\r\n            `${d.mrp}`.indexOf(filters.mrp) !== -1 &&\r\n            `${d.part.category?.toLowerCase()}`.indexOf(\r\n              filters?.category.toLowerCase(),\r\n            ) !== -1 &&\r\n            `${d.saleStatus}`.indexOf(filters.saleStatus) !== -1\r\n          );\r\n        }),\r\n      );\r\n    doFilter();\r\n  }, [filters]);\r\n\r\n  const handleTableTopChange = (e, name) => {\r\n    setTableData(data);\r\n    const value = e.hasOwnProperty('target') ? e.target.value : e;\r\n    setFilters({ ...filters, [name]: value.trim() });\r\n  };\r\n\r\n  const renderImage = (value) => {\r\n    return (\r\n      <Center justifyContent='center'>\r\n        <Image width='5vw' src={value || garaazLogo} alt='part' />\r\n      </Center>\r\n    );\r\n  };\r\n\r\n  const columns = useMemo(\r\n    () =>\r\n      isDistributor\r\n        ? [\r\n            {\r\n              Header: 'Image',\r\n              accessor: 'media[0]',\r\n              disableSortBy: true,\r\n              filter: 'equals',\r\n              Cell: ({ value }) => renderImage(value),\r\n            },\r\n            {\r\n              Header: 'Part Number',\r\n              accessor: 'part.partNumber',\r\n            },\r\n            {\r\n              Header: 'Part Description',\r\n              accessor: 'part.partName',\r\n            },\r\n            {\r\n              Header: 'Category',\r\n              accessor: 'category',\r\n            },\r\n            {\r\n              Header: 'Part Type',\r\n              accessor: 'part.partType',\r\n            },\r\n            {\r\n              Header: 'MRP',\r\n              accessor: 'mrp',\r\n              Cell: ({ value }) => getMoneyFormat(value),\r\n            },\r\n            {\r\n              Header: 'Actions',\r\n              accessor: '_id',\r\n              Cell: ({ value }) => {\r\n                return (\r\n                  <Popover>\r\n                    <PopoverTrigger className='menu-dots'>\r\n                      <IconButton>\r\n                        <FiMoreVertical />\r\n                      </IconButton>\r\n                    </PopoverTrigger>\r\n                    <PopoverContent style={{ width: 170 }}>\r\n                      <PopoverArrow />\r\n                      <PopoverBody\r\n                        style={{\r\n                          justifyContent: 'space-between',\r\n                          display: 'flex',\r\n                        }}\r\n                      >\r\n                        <Button\r\n                          onClick={() => {\r\n                            history.push(`/part/${value}/view`);\r\n                          }}\r\n                          style={{ backgroundColor: '#1e293b', color: '#fff' }}\r\n                        >\r\n                          View\r\n                        </Button>\r\n                        <Button\r\n                          onClick={() => {\r\n                            history.push(`/part/${value}/edit`);\r\n                          }}\r\n                          style={{ backgroundColor: 'gray', color: '#ffffff' }}\r\n                        >\r\n                          Edit\r\n                        </Button>\r\n                      </PopoverBody>\r\n                    </PopoverContent>\r\n                  </Popover>\r\n                );\r\n              },\r\n            },\r\n          ]\r\n        : [\r\n            {\r\n              Header: 'Image',\r\n              accessor: 'media[0]',\r\n              disableSortBy: true,\r\n              filter: 'equals',\r\n              Cell: ({ value }) => renderImage(value),\r\n            },\r\n            {\r\n              Header: 'Part Number',\r\n              accessor: 'part.partNumber',\r\n            },\r\n            {\r\n              Header: 'Part Description',\r\n              accessor: 'part.partName',\r\n            },\r\n            {\r\n              Header: 'Category',\r\n              accessor: 'category',\r\n            },\r\n            {\r\n              Header: 'Part Type',\r\n              accessor: 'part.partType',\r\n            },\r\n            {\r\n              Header: 'MRP',\r\n              accessor: 'mrp',\r\n              Cell: ({ value }) => getMoneyFormat(value),\r\n            },\r\n          ],\r\n    [isDistributor],\r\n  );\r\n\r\n  return (\r\n    <div>\r\n       {isDistributor && (\r\n        <div\r\n          className='text-center flex w-full items-center justify-between'\r\n          style={{ justifyContent: 'flex-end' }}\r\n        >\r\n          <Link to='/part/add'>\r\n            <Button variant='addition' size='md'>\r\n              <i className='fas fa-tools mr-2 text-sm' />\r\n              {intl.formatMessage(messages.addPart)}\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n      )}\r\n      <ModifiedTableTop inputData={inputData} onChange={handleTableTopChange} />\r\n\r\n      <DynamicTable\r\n        columns={columns}\r\n        data={[...tableData.reverse()]}\r\n        fetchData={fetchAllParts}\r\n        totalCount={totalCount}\r\n        controlledPageCount={pageCount}\r\n        loading={isLoading}\r\n        skipPageReset={true}\r\n        params={{}}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default withToast(Parts);\r\n"]},"metadata":{},"sourceType":"module"}