{"ast":null,"code":"\"use strict\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LensTop = void 0;\n\nconst jsx_runtime_1 = require(\"react/jsx-runtime\");\n\nconst react_1 = require(\"react\");\n\nconst clamp_1 = require(\"../../lib/clamp\");\n\nconst Lens_1 = require(\"./Lens\");\n\nexports.LensTop = (0, react_1.forwardRef)((props, ref) => {\n  const {\n    cursorOffset,\n    position,\n    fadeDurationInMs,\n    isActive,\n    isPositionOutside,\n    style: parentSpecifiedStyle\n  } = props,\n        rest = __rest(props, [\"cursorOffset\", \"position\", \"fadeDurationInMs\", \"isActive\", \"isPositionOutside\", \"style\"]);\n\n  const typedRef = ref;\n\n  if (!(typedRef === null || typedRef === void 0 ? void 0 : typedRef.current)) {\n    return null;\n  }\n\n  const clearLensHeight = cursorOffset.y * 2;\n  const maxHeight = typedRef.current.offsetHeight - clearLensHeight;\n  const height = (0, clamp_1.clamp)(position.y - cursorOffset.y, 0, maxHeight);\n  const computedStyle = {\n    height: `${height}px`,\n    width: '100%',\n    top: '0px'\n  };\n  return (0, jsx_runtime_1.jsx)(Lens_1.Lens, Object.assign({\n    fadeDurationInMs: fadeDurationInMs,\n    isActive: isActive,\n    isPositionOutside: isPositionOutside,\n    style: Object.assign(Object.assign({}, parentSpecifiedStyle), computedStyle)\n  }, rest), void 0);\n});\nexports.LensTop.displayName = 'LensTop';","map":{"version":3,"sources":["../../../../src/lens/negative-space/LensTop.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,MAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AAEA,MAAA,OAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,MAAA,MAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AAGa,OAAA,CAAA,OAAA,GAAU,CAAA,GAAA,OAAA,CAAA,UAAA,EAAwC,CAAC,KAAD,EAAmB,GAAnB,KAA8C;AACzG,QAAM;AACF,IAAA,YADE;AAEF,IAAA,QAFE;AAGF,IAAA,gBAHE;AAIF,IAAA,QAJE;AAKF,IAAA,iBALE;AAMF,IAAA,KAAK,EAAE;AANL,MAQF,KARJ;AAAA,QAOO,IAAI,GAAA,MAAA,CACP,KADO,EAPL,CAAA,cAAA,EAAA,UAAA,EAAA,kBAAA,EAAA,UAAA,EAAA,mBAAA,EAAA,OAAA,CAOK,CAPX;;AASA,QAAM,QAAQ,GAAI,GAAlB;;AAEA,MAAI,EAAC,QAAQ,KAAA,IAAR,IAAA,QAAQ,KAAA,KAAA,CAAR,GAAQ,KAAA,CAAR,GAAA,QAAQ,CAAE,OAAX,CAAJ,EAAwB;AACpB,WAAO,IAAP;AACH;;AAED,QAAM,eAAe,GAAG,YAAY,CAAC,CAAb,GAAiB,CAAzC;AACA,QAAM,SAAS,GAAG,QAAQ,CAAC,OAAT,CAAiB,YAAjB,GAAgC,eAAlD;AACA,QAAM,MAAM,GAAG,CAAA,GAAA,OAAA,CAAA,KAAA,EAAM,QAAQ,CAAC,CAAT,GAAa,YAAY,CAAC,CAAhC,EAAmC,CAAnC,EAAsC,SAAtC,CAAf;AACA,QAAM,aAAa,GAAG;AAClB,IAAA,MAAM,EAAE,GAAG,MAAM,IADC;AAElB,IAAA,KAAK,EAAE,MAFW;AAGlB,IAAA,GAAG,EAAE;AAHa,GAAtB;AAMA,SACI,CAAA,GAAA,aAAA,CAAA,GAAA,EAAC,MAAA,CAAA,IAAD,EAAK,MAAA,CAAA,MAAA,CAAA;AACD,IAAA,gBAAgB,EAAE,gBADjB;AAED,IAAA,QAAQ,EAAE,QAFT;AAGD,IAAA,iBAAiB,EAAE,iBAHlB;AAID,IAAA,KAAK,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACE,oBADF,CAAA,EAEE,aAFF;AAJJ,GAAA,EAQG,IARH,CAAL,EAQY,KAAA,CARZ,CADJ;AAYH,CArCsB,CAAV;AAuCb,OAAA,CAAA,OAAA,CAAQ,WAAR,GAAsB,SAAtB","sourcesContent":["import { forwardRef, MutableRefObject } from 'react';\n\nimport { clamp } from 'src/lib/clamp';\nimport { Lens } from 'src/lens/negative-space/Lens';\nimport type { LensProps } from 'src/types';\n\nexport const LensTop = forwardRef<HTMLImageElement, LensProps>((props: LensProps, ref): JSX.Element | null => {\n    const {\n        cursorOffset,\n        position,\n        fadeDurationInMs,\n        isActive,\n        isPositionOutside,\n        style: parentSpecifiedStyle,\n        ...rest\n    } = props;\n    const typedRef = (ref as MutableRefObject<HTMLImageElement>);\n\n    if (!typedRef?.current) {\n        return null;\n    }\n\n    const clearLensHeight = cursorOffset.y * 2;\n    const maxHeight = typedRef.current.offsetHeight - clearLensHeight;\n    const height = clamp(position.y - cursorOffset.y, 0, maxHeight);\n    const computedStyle = {\n        height: `${height}px`,\n        width: '100%',\n        top: '0px',\n    };\n\n    return (\n        <Lens\n            fadeDurationInMs={fadeDurationInMs}\n            isActive={isActive}\n            isPositionOutside={isPositionOutside}\n            style={{\n                ...parentSpecifiedStyle,\n                ...computedStyle,\n            }}\n            {...rest}\n        />\n    );\n});\n\nLensTop.displayName = 'LensTop';\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}