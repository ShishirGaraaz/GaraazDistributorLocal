{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\Work\\\\garaaz-distributor\\\\src\\\\components\\\\OrderComponents\\\\OrderDetailInfo.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { Badge, Box, Tag, useColorMode } from '@chakra-ui/react';\nimport { useIntl } from 'react-intl';\nimport messages from './messages';\nimport moment from 'moment';\nimport enums from '../../utils/enums';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const OrderDetailInfo = _ref => {\n  _s();\n\n  var _orderDetails$worksho, _orderDetails$worksho2, _orderDetails$worksho3, _orderDetails$worksho4, _orderDetails$worksho5, _orderDetails$worksho6, _orderDetails$worksho7, _orderDetails$worksho8, _orderDetails$worksho9, _orderDetails$worksho10, _orderDetails$status;\n\n  let {\n    orderDetails,\n    orderNotCreated\n  } = _ref;\n  const intl = useIntl();\n  /* The values will change once data is being fetched */\n\n  const tableInfoObj = [{\n    title: intl.formatMessage(messages.orderNumber),\n    value: !orderNotCreated ? orderDetails === null || orderDetails === void 0 ? void 0 : orderDetails.orderNo : ''\n  }, {\n    title: intl.formatMessage(messages.workshopName),\n    value: orderDetails === null || orderDetails === void 0 ? void 0 : (_orderDetails$worksho = orderDetails.workshop) === null || _orderDetails$worksho === void 0 ? void 0 : (_orderDetails$worksho2 = _orderDetails$worksho.workshopcustomers[0]) === null || _orderDetails$worksho2 === void 0 ? void 0 : _orderDetails$worksho2.name\n  }, {\n    title: intl.formatMessage(messages.workshopCode),\n    value: orderDetails === null || orderDetails === void 0 ? void 0 : (_orderDetails$worksho3 = orderDetails.workshop) === null || _orderDetails$worksho3 === void 0 ? void 0 : (_orderDetails$worksho4 = _orderDetails$worksho3.workshopcustomers[0]) === null || _orderDetails$worksho4 === void 0 ? void 0 : _orderDetails$worksho4.code\n  }, {\n    title: intl.formatMessage(messages.workshopAddress),\n    value: orderDetails === null || orderDetails === void 0 ? void 0 : (_orderDetails$worksho5 = orderDetails.workshop) === null || _orderDetails$worksho5 === void 0 ? void 0 : (_orderDetails$worksho6 = _orderDetails$worksho5.workshopcustomers[0]) === null || _orderDetails$worksho6 === void 0 ? void 0 : _orderDetails$worksho6.addressLine1\n  }, {\n    title: intl.formatMessage(messages.contactPerson),\n    value: orderDetails === null || orderDetails === void 0 ? void 0 : (_orderDetails$worksho7 = orderDetails.workshop) === null || _orderDetails$worksho7 === void 0 ? void 0 : (_orderDetails$worksho8 = _orderDetails$worksho7.workshopcustomers[0]) === null || _orderDetails$worksho8 === void 0 ? void 0 : _orderDetails$worksho8.ownerFullName\n  }, {\n    title: intl.formatMessage(messages.contactNumber),\n    value: orderDetails === null || orderDetails === void 0 ? void 0 : (_orderDetails$worksho9 = orderDetails.workshop) === null || _orderDetails$worksho9 === void 0 ? void 0 : (_orderDetails$worksho10 = _orderDetails$worksho9.workshopcustomers[0]) === null || _orderDetails$worksho10 === void 0 ? void 0 : _orderDetails$worksho10.mobileNumber\n  },\n  /*  {\r\n     title: intl.formatMessage(messages.orderPlacedBy),\r\n     value: 'comming soon',\r\n   }, */\n  {\n    title: intl.formatMessage(messages.orderCreatedAt),\n    value: !orderNotCreated ? moment(orderDetails === null || orderDetails === void 0 ? void 0 : orderDetails.createdAt).format('hh:mm:ss a, Do,MMM YYYY') : ''\n  }];\n  const tableInfoArr = tableInfoObj.map((item, index) => {\n    const num = index + 1;\n    const isOdd = num === 1 || num === 2 || num % 2 === 0 && num % 4 > 0 || num % 2 > 0 && index % 4 === 0;\n\n    if (index === tableInfoObj.length - 1) {\n      return /*#__PURE__*/_jsxDEV(SingleOrderInfo, {\n        title: item.title,\n        value: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [item.value, /*#__PURE__*/_jsxDEV(Badge, {\n            colorScheme: \"green\",\n            children: intl.formatMessage(messages.newOrder)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true),\n        isOdd: isOdd\n      }, item.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(SingleOrderInfo, {\n      title: item.title,\n      value: item.value,\n      isOdd: isOdd\n    }, item.title, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    mb: 10,\n    mt: 15,\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"flex-end\",\n    px: 4,\n    flexWrap: \"wrap\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      justifyContent: \"space-between\",\n      flexWrap: \"wrap\",\n      display: \"flex\",\n      width: {\n        base: '100%',\n        lg: '88%'\n      },\n      children: tableInfoArr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), !orderNotCreated && /*#__PURE__*/_jsxDEV(Tag, {\n      size: \"lg\",\n      colorScheme: (orderDetails === null || orderDetails === void 0 ? void 0 : orderDetails.status) === enums.PENDING ? 'orange' : (orderDetails === null || orderDetails === void 0 ? void 0 : orderDetails.status) === enums.COMPLETED ? 'green' : 'red',\n      children: orderDetails === null || orderDetails === void 0 ? void 0 : (_orderDetails$status = orderDetails.status) === null || _orderDetails$status === void 0 ? void 0 : _orderDetails$status.replace(/_/g, ' ')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OrderDetailInfo, \"rlSgSjbewJ1PrR/Ile8g/kr050o=\", false, function () {\n  return [useIntl];\n});\n\n_c = OrderDetailInfo;\n\nconst SingleOrderInfo = _ref2 => {\n  _s2();\n\n  let {\n    title,\n    value,\n    index,\n    isOdd\n  } = _ref2;\n  const {\n    colorMode\n  } = useColorMode();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    flexBasis: {\n      base: '100%',\n      lg: '48%'\n    },\n    justifyContent: \"space-between\",\n    bg: colorMode === 'dark' && isOdd ? 'black' : isOdd && colorMode === 'light' ? '#F7FAFC' : '',\n    p: 2,\n    pb: {\n      base: 4,\n      lg: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      width: \"30%\",\n      color: \"#8A98A9\",\n      fontWeight: \"bold\",\n      textStyle: \"normal\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      width: \"40%\",\n      textAlign: \"left\",\n      textStyle: \"normal\",\n      layerStyle: \"dark\",\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(SingleOrderInfo, \"2Uu86IH3do63pkN3s1ysdRMmJuc=\", false, function () {\n  return [useColorMode];\n});\n\n_c2 = SingleOrderInfo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"OrderDetailInfo\");\n$RefreshReg$(_c2, \"SingleOrderInfo\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/Work/garaaz-distributor/src/components/OrderComponents/OrderDetailInfo.js"],"names":["React","Badge","Box","Tag","useColorMode","useIntl","messages","moment","enums","OrderDetailInfo","orderDetails","orderNotCreated","intl","tableInfoObj","title","formatMessage","orderNumber","value","orderNo","workshopName","workshop","workshopcustomers","name","workshopCode","code","workshopAddress","addressLine1","contactPerson","ownerFullName","contactNumber","mobileNumber","orderCreatedAt","createdAt","format","tableInfoArr","map","item","index","num","isOdd","length","newOrder","base","lg","status","PENDING","COMPLETED","replace","SingleOrderInfo","colorMode"],"mappings":";;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,GAAhB,EAAqBC,GAArB,EAA0BC,YAA1B,QAA8C,kBAA9C;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;;;AAEA,OAAO,MAAMC,eAAe,GAAG,QAAuC;AAAA;;AAAA;;AAAA,MAAtC;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,GAAsC;AACpE,QAAMC,IAAI,GAAGP,OAAO,EAApB;AAKA;;AACA,QAAMQ,YAAY,GAAG,CACnB;AACEC,IAAAA,KAAK,EAAEF,IAAI,CAACG,aAAL,CAAmBT,QAAQ,CAACU,WAA5B,CADT;AAEEC,IAAAA,KAAK,EAAE,CAACN,eAAD,GAAkBD,YAAlB,aAAkBA,YAAlB,uBAAkBA,YAAY,CAAEQ,OAAhC,GAA0C;AAFnD,GADmB,EAKnB;AACEJ,IAAAA,KAAK,EAAEF,IAAI,CAACG,aAAL,CAAmBT,QAAQ,CAACa,YAA5B,CADT;AAEEF,IAAAA,KAAK,EAAEP,YAAF,aAAEA,YAAF,gDAAEA,YAAY,CAAEU,QAAhB,oFAAE,sBAAwBC,iBAAxB,CAA0C,CAA1C,CAAF,2DAAE,uBAA8CC;AAFvD,GALmB,EASnB;AACER,IAAAA,KAAK,EAAEF,IAAI,CAACG,aAAL,CAAmBT,QAAQ,CAACiB,YAA5B,CADT;AAEEN,IAAAA,KAAK,EAAEP,YAAF,aAAEA,YAAF,iDAAEA,YAAY,CAAEU,QAAhB,qFAAE,uBAAwBC,iBAAxB,CAA0C,CAA1C,CAAF,2DAAE,uBAA8CG;AAFvD,GATmB,EAcnB;AACEV,IAAAA,KAAK,EAAEF,IAAI,CAACG,aAAL,CAAmBT,QAAQ,CAACmB,eAA5B,CADT;AAEER,IAAAA,KAAK,EAAEP,YAAF,aAAEA,YAAF,iDAAEA,YAAY,CAAEU,QAAhB,qFAAE,uBAAwBC,iBAAxB,CAA0C,CAA1C,CAAF,2DAAE,uBAA8CK;AAFvD,GAdmB,EAkBnB;AAAEZ,IAAAA,KAAK,EAAEF,IAAI,CAACG,aAAL,CAAmBT,QAAQ,CAACqB,aAA5B,CAAT;AAAqDV,IAAAA,KAAK,EAAEP,YAAF,aAAEA,YAAF,iDAAEA,YAAY,CAAEU,QAAhB,qFAAE,uBAAwBC,iBAAxB,CAA0C,CAA1C,CAAF,2DAAE,uBAA8CO;AAA1G,GAlBmB,EAmBnB;AACEd,IAAAA,KAAK,EAAEF,IAAI,CAACG,aAAL,CAAmBT,QAAQ,CAACuB,aAA5B,CADT;AAEEZ,IAAAA,KAAK,EAAEP,YAAF,aAAEA,YAAF,iDAAEA,YAAY,CAAEU,QAAhB,sFAAE,uBAAwBC,iBAAxB,CAA0C,CAA1C,CAAF,4DAAE,wBAA8CS;AAFvD,GAnBmB;AAuBpB;AACH;AACA;AACA;AACI;AACEhB,IAAAA,KAAK,EAAEF,IAAI,CAACG,aAAL,CAAmBT,QAAQ,CAACyB,cAA5B,CADT;AAEEd,IAAAA,KAAK,EAAE,CAACN,eAAD,GAAkBJ,MAAM,CAACG,YAAD,aAACA,YAAD,uBAACA,YAAY,CAAEsB,SAAf,CAAN,CAAgCC,MAAhC,CAAuC,yBAAvC,CAAlB,GAAsF;AAF/F,GA3BmB,CAArB;AAiCA,QAAMC,YAAY,GAAGrB,YAAY,CAACsB,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACrD,UAAMC,GAAG,GAAGD,KAAK,GAAG,CAApB;AACA,UAAME,KAAK,GACTD,GAAG,KAAK,CAAR,IACAA,GAAG,KAAK,CADR,IAECA,GAAG,GAAG,CAAN,KAAY,CAAZ,IAAiBA,GAAG,GAAG,CAAN,GAAU,CAF5B,IAGCA,GAAG,GAAG,CAAN,GAAU,CAAV,IAAeD,KAAK,GAAG,CAAR,KAAc,CAJhC;;AAKA,QAAIA,KAAK,KAAKxB,YAAY,CAAC2B,MAAb,GAAsB,CAApC,EAAuC;AACrC,0BACE,QAAC,eAAD;AACE,QAAA,KAAK,EAAEJ,IAAI,CAACtB,KADd;AAEE,QAAA,KAAK,eACH;AAAA,qBACGsB,IAAI,CAACnB,KADR,eAEE,QAAC,KAAD;AAAO,YAAA,WAAW,EAAC,OAAnB;AAAA,sBACGL,IAAI,CAACG,aAAL,CAAmBT,QAAQ,CAACmC,QAA5B;AADH;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,wBAHJ;AAWE,QAAA,KAAK,EAAEF;AAXT,SAUOH,IAAI,CAACtB,KAVZ;AAAA;AAAA;AAAA;AAAA,cADF;AAeD;;AAED,wBACE,QAAC,eAAD;AACE,MAAA,KAAK,EAAEsB,IAAI,CAACtB,KADd;AAEE,MAAA,KAAK,EAAEsB,IAAI,CAACnB,KAFd;AAIE,MAAA,KAAK,EAAEsB;AAJT,OAGOH,IAAI,CAACtB,KAHZ;AAAA;AAAA;AAAA;AAAA,YADF;AAQD,GAjCoB,CAArB;AAmCA,sBACE,QAAC,GAAD;AACE,IAAA,EAAE,EAAE,EADN;AAEE,IAAA,EAAE,EAAE,EAFN;AAGE,IAAA,OAAO,EAAC,MAHV;AAIE,IAAA,cAAc,EAAC,eAJjB;AAKE,IAAA,UAAU,EAAC,UALb;AAME,IAAA,EAAE,EAAE,CANN;AAOE,IAAA,QAAQ,EAAC,MAPX;AAAA,4BASE,QAAC,GAAD;AACE,MAAA,cAAc,EAAC,eADjB;AAEE,MAAA,QAAQ,EAAC,MAFX;AAGE,MAAA,OAAO,EAAC,MAHV;AAIE,MAAA,KAAK,EAAE;AAAE4B,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,EAAE,EAAE;AAApB,OAJT;AAAA,gBAMGT;AANH;AAAA;AAAA;AAAA;AAAA,YATF,EAkBG,CAACvB,eAAD,iBAAqB,QAAC,GAAD;AACpB,MAAA,IAAI,EAAC,IADe;AAEpB,MAAA,WAAW,EACT,CAAAD,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEkC,MAAd,MAAyBpC,KAAK,CAACqC,OAA/B,GACI,QADJ,GAEI,CAAAnC,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEkC,MAAd,MAAyBpC,KAAK,CAACsC,SAA/B,GACA,OADA,GAEA,KAPc;AAAA,gBAUnBpC,YAVmB,aAUnBA,YAVmB,+CAUnBA,YAAY,CAAEkC,MAVK,yDAUnB,qBAAsBG,OAAtB,CAA8B,IAA9B,EAAoC,GAApC;AAVmB;AAAA;AAAA;AAAA;AAAA,YAlBxB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD,CA5GM;;GAAMtC,e;UACEJ,O;;;KADFI,e;;AA8Gb,MAAMuC,eAAe,GAAG,SAAoC;AAAA;;AAAA,MAAnC;AAAElC,IAAAA,KAAF;AAASG,IAAAA,KAAT;AAAgBoB,IAAAA,KAAhB;AAAuBE,IAAAA;AAAvB,GAAmC;AAC1D,QAAM;AAAEU,IAAAA;AAAF,MAAgB7C,YAAY,EAAlC;AACA,sBACE,QAAC,GAAD;AACE,IAAA,OAAO,EAAC,MADV;AAEE,IAAA,SAAS,EAAE;AAAEsC,MAAAA,IAAI,EAAE,MAAR;AAAgBC,MAAAA,EAAE,EAAE;AAApB,KAFb;AAGE,IAAA,cAAc,EAAC,eAHjB;AAIE,IAAA,EAAE,EACAM,SAAS,KAAK,MAAd,IAAwBV,KAAxB,GACI,OADJ,GAEIA,KAAK,IAAIU,SAAS,KAAK,OAAvB,GACA,SADA,GAEA,EATR;AAWE,IAAA,CAAC,EAAE,CAXL;AAYE,IAAA,EAAE,EAAE;AAAEP,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,EAAE,EAAE;AAAf,KAZN;AAAA,4BAcE,QAAC,GAAD;AAAK,MAAA,KAAK,EAAC,KAAX;AAAiB,MAAA,KAAK,EAAC,SAAvB;AAAiC,MAAA,UAAU,EAAC,MAA5C;AAAmD,MAAA,SAAS,EAAC,QAA7D;AAAA,gBACG7B;AADH;AAAA;AAAA;AAAA;AAAA,YAdF,eAiBE,QAAC,GAAD;AAAK,MAAA,KAAK,EAAC,KAAX;AAAiB,MAAA,SAAS,EAAC,MAA3B;AAAkC,MAAA,SAAS,EAAC,QAA5C;AAAqD,MAAA,UAAU,EAAC,MAAhE;AAAA,gBACGG;AADH;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CAzBD;;IAAM+B,e;UACkB5C,Y;;;MADlB4C,e","sourcesContent":["// @flow\r\nimport React from 'react';\r\nimport { Badge, Box, Tag, useColorMode } from '@chakra-ui/react';\r\nimport { useIntl } from 'react-intl';\r\nimport messages from './messages';\r\nimport moment from 'moment';\r\nimport enums from '../../utils/enums';\r\n\r\nexport const OrderDetailInfo = ({ orderDetails, orderNotCreated }) => {\r\n  const intl = useIntl();\r\n\r\n\r\n\r\n\r\n  /* The values will change once data is being fetched */\r\n  const tableInfoObj = [\r\n    {\r\n      title: intl.formatMessage(messages.orderNumber),\r\n      value: !orderNotCreated? orderDetails?.orderNo : '',\r\n    },\r\n    {\r\n      title: intl.formatMessage(messages.workshopName),\r\n      value: orderDetails?.workshop?.workshopcustomers[0]?.name,\r\n    },\r\n    {\r\n      title: intl.formatMessage(messages.workshopCode),\r\n      value: orderDetails?.workshop?.workshopcustomers[0]?.code,\r\n      \r\n    },\r\n    {\r\n      title: intl.formatMessage(messages.workshopAddress),\r\n      value: orderDetails?.workshop?.workshopcustomers[0]?.addressLine1,\r\n    },\r\n    { title: intl.formatMessage(messages.contactPerson), value: orderDetails?.workshop?.workshopcustomers[0]?.ownerFullName, },\r\n    {\r\n      title: intl.formatMessage(messages.contactNumber),\r\n      value: orderDetails?.workshop?.workshopcustomers[0]?.mobileNumber,\r\n    },\r\n   /*  {\r\n      title: intl.formatMessage(messages.orderPlacedBy),\r\n      value: 'comming soon',\r\n    }, */\r\n    {\r\n      title: intl.formatMessage(messages.orderCreatedAt),\r\n      value: !orderNotCreated? moment(orderDetails?.createdAt).format('hh:mm:ss a, Do,MMM YYYY') : '',\r\n    },\r\n  ];\r\n\r\n  const tableInfoArr = tableInfoObj.map((item, index) => {\r\n    const num = index + 1;\r\n    const isOdd =\r\n      num === 1 ||\r\n      num === 2 ||\r\n      (num % 2 === 0 && num % 4 > 0) ||\r\n      (num % 2 > 0 && index % 4 === 0);\r\n    if (index === tableInfoObj.length - 1) {\r\n      return (\r\n        <SingleOrderInfo\r\n          title={item.title}\r\n          value={\r\n            <>\r\n              {item.value}\r\n              <Badge colorScheme='green'>\r\n                {intl.formatMessage(messages.newOrder)}\r\n              </Badge>\r\n            </>\r\n          }\r\n          key={item.title}\r\n          isOdd={isOdd}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <SingleOrderInfo\r\n        title={item.title}\r\n        value={item.value}\r\n        key={item.title}\r\n        isOdd={isOdd}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Box\r\n      mb={10}\r\n      mt={15}\r\n      display='flex'\r\n      justifyContent='space-between'\r\n      alignItems='flex-end'\r\n      px={4}\r\n      flexWrap='wrap'\r\n    >\r\n      <Box\r\n        justifyContent='space-between'\r\n        flexWrap='wrap'\r\n        display='flex'\r\n        width={{ base: '100%', lg: '88%' }}\r\n      >\r\n        {tableInfoArr}\r\n      </Box>\r\n\r\n      {!orderNotCreated && (<Tag\r\n        size='lg'\r\n        colorScheme={\r\n          orderDetails?.status === enums.PENDING\r\n            ? 'orange'\r\n            : orderDetails?.status === enums.COMPLETED\r\n            ? 'green'\r\n            : 'red'\r\n        }\r\n      >\r\n        {orderDetails?.status?.replace(/_/g, ' ')}\r\n      </Tag>)}\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst SingleOrderInfo = ({ title, value, index, isOdd }) => {\r\n  const { colorMode } = useColorMode();\r\n  return (\r\n    <Box\r\n      display='flex'\r\n      flexBasis={{ base: '100%', lg: '48%' }}\r\n      justifyContent='space-between'\r\n      bg={\r\n        colorMode === 'dark' && isOdd\r\n          ? 'black'\r\n          : isOdd && colorMode === 'light'\r\n          ? '#F7FAFC'\r\n          : ''\r\n      }\r\n      p={2}\r\n      pb={{ base: 4, lg: 2 }}\r\n    >\r\n      <Box width='30%' color='#8A98A9' fontWeight='bold' textStyle='normal'>\r\n        {title}\r\n      </Box>\r\n      <Box width='40%' textAlign='left' textStyle='normal' layerStyle='dark'>\r\n        {value}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}