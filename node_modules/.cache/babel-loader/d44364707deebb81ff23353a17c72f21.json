{"ast":null,"code":"import { Factory } from '../Factory.js';\nimport { Node } from '../Node.js';\nimport { getNumberValidator } from '../Validators.js';\n\nfunction pixelAt(idata, x, y) {\n  var idx = (y * idata.width + x) * 4;\n  var d = [];\n  d.push(idata.data[idx++], idata.data[idx++], idata.data[idx++], idata.data[idx++]);\n  return d;\n}\n\nfunction rgbDistance(p1, p2) {\n  return Math.sqrt(Math.pow(p1[0] - p2[0], 2) + Math.pow(p1[1] - p2[1], 2) + Math.pow(p1[2] - p2[2], 2));\n}\n\nfunction rgbMean(pTab) {\n  var m = [0, 0, 0];\n\n  for (var i = 0; i < pTab.length; i++) {\n    m[0] += pTab[i][0];\n    m[1] += pTab[i][1];\n    m[2] += pTab[i][2];\n  }\n\n  m[0] /= pTab.length;\n  m[1] /= pTab.length;\n  m[2] /= pTab.length;\n  return m;\n}\n\nfunction backgroundMask(idata, threshold) {\n  var rgbv_no = pixelAt(idata, 0, 0);\n  var rgbv_ne = pixelAt(idata, idata.width - 1, 0);\n  var rgbv_so = pixelAt(idata, 0, idata.height - 1);\n  var rgbv_se = pixelAt(idata, idata.width - 1, idata.height - 1);\n  var thres = threshold || 10;\n\n  if (rgbDistance(rgbv_no, rgbv_ne) < thres && rgbDistance(rgbv_ne, rgbv_se) < thres && rgbDistance(rgbv_se, rgbv_so) < thres && rgbDistance(rgbv_so, rgbv_no) < thres) {\n    var mean = rgbMean([rgbv_ne, rgbv_no, rgbv_se, rgbv_so]);\n    var mask = [];\n\n    for (var i = 0; i < idata.width * idata.height; i++) {\n      var d = rgbDistance(mean, [idata.data[i * 4], idata.data[i * 4 + 1], idata.data[i * 4 + 2]]);\n      mask[i] = d < thres ? 0 : 255;\n    }\n\n    return mask;\n  }\n}\n\nfunction applyMask(idata, mask) {\n  for (var i = 0; i < idata.width * idata.height; i++) {\n    idata.data[4 * i + 3] = mask[i];\n  }\n}\n\nfunction erodeMask(mask, sw, sh) {\n  var weights = [1, 1, 1, 1, 0, 1, 1, 1, 1];\n  var side = Math.round(Math.sqrt(weights.length));\n  var halfSide = Math.floor(side / 2);\n  var maskResult = [];\n\n  for (var y = 0; y < sh; y++) {\n    for (var x = 0; x < sw; x++) {\n      var so = y * sw + x;\n      var a = 0;\n\n      for (var cy = 0; cy < side; cy++) {\n        for (var cx = 0; cx < side; cx++) {\n          var scy = y + cy - halfSide;\n          var scx = x + cx - halfSide;\n\n          if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n            var srcOff = scy * sw + scx;\n            var wt = weights[cy * side + cx];\n            a += mask[srcOff] * wt;\n          }\n        }\n      }\n\n      maskResult[so] = a === 255 * 8 ? 255 : 0;\n    }\n  }\n\n  return maskResult;\n}\n\nfunction dilateMask(mask, sw, sh) {\n  var weights = [1, 1, 1, 1, 1, 1, 1, 1, 1];\n  var side = Math.round(Math.sqrt(weights.length));\n  var halfSide = Math.floor(side / 2);\n  var maskResult = [];\n\n  for (var y = 0; y < sh; y++) {\n    for (var x = 0; x < sw; x++) {\n      var so = y * sw + x;\n      var a = 0;\n\n      for (var cy = 0; cy < side; cy++) {\n        for (var cx = 0; cx < side; cx++) {\n          var scy = y + cy - halfSide;\n          var scx = x + cx - halfSide;\n\n          if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n            var srcOff = scy * sw + scx;\n            var wt = weights[cy * side + cx];\n            a += mask[srcOff] * wt;\n          }\n        }\n      }\n\n      maskResult[so] = a >= 255 * 4 ? 255 : 0;\n    }\n  }\n\n  return maskResult;\n}\n\nfunction smoothEdgeMask(mask, sw, sh) {\n  var weights = [1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9];\n  var side = Math.round(Math.sqrt(weights.length));\n  var halfSide = Math.floor(side / 2);\n  var maskResult = [];\n\n  for (var y = 0; y < sh; y++) {\n    for (var x = 0; x < sw; x++) {\n      var so = y * sw + x;\n      var a = 0;\n\n      for (var cy = 0; cy < side; cy++) {\n        for (var cx = 0; cx < side; cx++) {\n          var scy = y + cy - halfSide;\n          var scx = x + cx - halfSide;\n\n          if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n            var srcOff = scy * sw + scx;\n            var wt = weights[cy * side + cx];\n            a += mask[srcOff] * wt;\n          }\n        }\n      }\n\n      maskResult[so] = a;\n    }\n  }\n\n  return maskResult;\n}\n\nexport const Mask = function (imageData) {\n  var threshold = this.threshold(),\n      mask = backgroundMask(imageData, threshold);\n\n  if (mask) {\n    mask = erodeMask(mask, imageData.width, imageData.height);\n    mask = dilateMask(mask, imageData.width, imageData.height);\n    mask = smoothEdgeMask(mask, imageData.width, imageData.height);\n    applyMask(imageData, mask);\n  }\n\n  return imageData;\n};\nFactory.addGetterSetter(Node, 'threshold', 0, getNumberValidator(), Factory.afterSetFilter);","map":{"version":3,"sources":["../../src/filters/Mask.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { Factory } from '../Factory.js';\nimport { Node } from '../Node.js';\nimport { getNumberValidator } from '../Validators.js';\nfunction pixelAt(idata, x, y) {\n    var idx = (y * idata.width + x) * 4;\n    var d = [];\n    d.push(idata.data[idx++], idata.data[idx++], idata.data[idx++], idata.data[idx++]);\n    return d;\n}\nfunction rgbDistance(p1, p2) {\n    return Math.sqrt(Math.pow(p1[0] - p2[0], 2) +\n        Math.pow(p1[1] - p2[1], 2) +\n        Math.pow(p1[2] - p2[2], 2));\n}\nfunction rgbMean(pTab) {\n    var m = [0, 0, 0];\n    for (var i = 0; i < pTab.length; i++) {\n        m[0] += pTab[i][0];\n        m[1] += pTab[i][1];\n        m[2] += pTab[i][2];\n    }\n    m[0] /= pTab.length;\n    m[1] /= pTab.length;\n    m[2] /= pTab.length;\n    return m;\n}\nfunction backgroundMask(idata, threshold) {\n    var rgbv_no = pixelAt(idata, 0, 0);\n    var rgbv_ne = pixelAt(idata, idata.width - 1, 0);\n    var rgbv_so = pixelAt(idata, 0, idata.height - 1);\n    var rgbv_se = pixelAt(idata, idata.width - 1, idata.height - 1);\n    var thres = threshold || 10;\n    if (rgbDistance(rgbv_no, rgbv_ne) < thres &&\n        rgbDistance(rgbv_ne, rgbv_se) < thres &&\n        rgbDistance(rgbv_se, rgbv_so) < thres &&\n        rgbDistance(rgbv_so, rgbv_no) < thres) {\n        var mean = rgbMean([rgbv_ne, rgbv_no, rgbv_se, rgbv_so]);\n        var mask = [];\n        for (var i = 0; i < idata.width * idata.height; i++) {\n            var d = rgbDistance(mean, [\n                idata.data[i * 4],\n                idata.data[i * 4 + 1],\n                idata.data[i * 4 + 2],\n            ]);\n            mask[i] = d < thres ? 0 : 255;\n        }\n        return mask;\n    }\n}\nfunction applyMask(idata, mask) {\n    for (var i = 0; i < idata.width * idata.height; i++) {\n        idata.data[4 * i + 3] = mask[i];\n    }\n}\nfunction erodeMask(mask, sw, sh) {\n    var weights = [1, 1, 1, 1, 0, 1, 1, 1, 1];\n    var side = Math.round(Math.sqrt(weights.length));\n    var halfSide = Math.floor(side / 2);\n    var maskResult = [];\n    for (var y = 0; y < sh; y++) {\n        for (var x = 0; x < sw; x++) {\n            var so = y * sw + x;\n            var a = 0;\n            for (var cy = 0; cy < side; cy++) {\n                for (var cx = 0; cx < side; cx++) {\n                    var scy = y + cy - halfSide;\n                    var scx = x + cx - halfSide;\n                    if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n                        var srcOff = scy * sw + scx;\n                        var wt = weights[cy * side + cx];\n                        a += mask[srcOff] * wt;\n                    }\n                }\n            }\n            maskResult[so] = a === 255 * 8 ? 255 : 0;\n        }\n    }\n    return maskResult;\n}\nfunction dilateMask(mask, sw, sh) {\n    var weights = [1, 1, 1, 1, 1, 1, 1, 1, 1];\n    var side = Math.round(Math.sqrt(weights.length));\n    var halfSide = Math.floor(side / 2);\n    var maskResult = [];\n    for (var y = 0; y < sh; y++) {\n        for (var x = 0; x < sw; x++) {\n            var so = y * sw + x;\n            var a = 0;\n            for (var cy = 0; cy < side; cy++) {\n                for (var cx = 0; cx < side; cx++) {\n                    var scy = y + cy - halfSide;\n                    var scx = x + cx - halfSide;\n                    if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n                        var srcOff = scy * sw + scx;\n                        var wt = weights[cy * side + cx];\n                        a += mask[srcOff] * wt;\n                    }\n                }\n            }\n            maskResult[so] = a >= 255 * 4 ? 255 : 0;\n        }\n    }\n    return maskResult;\n}\nfunction smoothEdgeMask(mask, sw, sh) {\n    var weights = [1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9];\n    var side = Math.round(Math.sqrt(weights.length));\n    var halfSide = Math.floor(side / 2);\n    var maskResult = [];\n    for (var y = 0; y < sh; y++) {\n        for (var x = 0; x < sw; x++) {\n            var so = y * sw + x;\n            var a = 0;\n            for (var cy = 0; cy < side; cy++) {\n                for (var cx = 0; cx < side; cx++) {\n                    var scy = y + cy - halfSide;\n                    var scx = x + cx - halfSide;\n                    if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n                        var srcOff = scy * sw + scx;\n                        var wt = weights[cy * side + cx];\n                        a += mask[srcOff] * wt;\n                    }\n                }\n            }\n            maskResult[so] = a;\n        }\n    }\n    return maskResult;\n}\nexport const Mask = function (imageData) {\n    var threshold = this.threshold(), mask = backgroundMask(imageData, threshold);\n    if (mask) {\n        mask = erodeMask(mask, imageData.width, imageData.height);\n        mask = dilateMask(mask, imageData.width, imageData.height);\n        mask = smoothEdgeMask(mask, imageData.width, imageData.height);\n        applyMask(imageData, mask);\n    }\n    return imageData;\n};\nFactory.addGetterSetter(Node, 'threshold', 0, getNumberValidator(), Factory.afterSetFilter);\n//# sourceMappingURL=Mask.js.map"]},"metadata":{},"sourceType":"module"}